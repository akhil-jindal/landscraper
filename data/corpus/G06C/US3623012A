Accounting system with program by example facilities 
US-3623012-A
Ibm
1971-11-23
https://patents.google.com/patent/US3623012A/en
United States Patent [72] Inventors Denis E. Lowry Lexington. Ky.; William L. McDonald, Austin, Tex. [21] Appl. No. 837,757 [22] Filed June 30, 1969 (45] Patented Nov. 23, 1971 [73] Asslgnee International Business Machines Corporation Armonk, N.Y. 
[54] ACCOUNTING SYSTEM WITH PROGRAM BY EXAMPLE FACILITIES 4 Claims, 13 Drawing Figs. 
[52] US. Cl. 340/1715 [51] lnt.Cl G06l3/l2 [50] FieldolSearch 340/1725; 235/157,156,61.9 
[56] References Cited UNITED STATES PATENTS 3,043,509 7/1962 Brown et a] 235/156 3,112,394 11/1963 Close et a1. 235/619 3,127,504 3/1964 Arnold 235/619 3,389,379 6/1968 Erickson et a1. 340/1725 3,512,137 /1970 Jones et al. 340/1725 3,512,138 5/1970 May et a1. 340/1725 3,525,984 8/1970 Clay et a1. 340/1725 3,533,076 10/1970 Perkins et a1. 340/1725 0TH ER REFERENCES Reference Manual IBM 7080 Data Processing System- A-22-6560-1', 1960- 1961; pP- 7, 9 19, 25- 28 and 92 General Information Manual lBM- 720A, 730 Printers, 735 Printer Control, 760 Control and Storage, A22-6768-0, 1955-1958, pp. 5 13, 19- 25 and 29- 39 Reference Manual- IBM 7080 Data Processing System- A22-6560-1, 1960 1961, pp. 82- 90 Primary Examiner-Gareth D. Shaw Assistant Examiner-Harvey E. Springborn Attorneys-Hamlin and .lancin and D. Kendall Cooper ABSTRACT: The accounting system is operator-oriented and includes arithmetic and stored program facilities. The system features entry of program instructions through a program by example" routine in which the operator enters control (program) information concurrently with the entry of data during conventional typing routines. That is, as the problem is worked, the steps in the operation are stored in program memory. The system is then able to execute the program in a repetitive manner accepting additional keyed-in data, per forming calculations, and printing necessary output docu ments. The system is particularly useful with accounting forms having information arranged in columns, Additional features involve manipulation of column registers, one associated with each column, the branching techniques. decimal point control, determination of true percentages (Percent Equal), use of the Alpha Emit function and the provision of various input and output devices including a magnetic card apparatus. 
COIIHUL LAICHES A ASSOClAlED LOGIC INSTRUCTION ADDRESS REGlSTEll s morn ADDRESS REGISTER 45 uicmlc um Sl 15 man 001111101 LINES aims 111% 2 m UTGHES CUllTllOL y LOGIC so lusinucnon DECUDE 12 PRINTER CONTROL PlIIEL mama ,1 svncnzs r mum CONTROL 2 mama J L w comm mu 5 comm C33 I111: 15 will Locm [um REGISTER] 15 (E um REGISTER A 211 TUTHER BYTE so; llllJUTPllICODES worms REGISTERS l6llEl10llY nuts 64 IlIFUTLClJgES 2n 12s usrn's mzs momma 24 DEClllAL an? mus 4 nruomr IflllllS 15 FIXED l morons 501m vonn WORKING REGlSTERSl PAIENTEmnv 23 IBTT SHEET 01 UT 11 T osgmmoa} *T/BITCUUNTER I---T DIGITCQUNTER L FIG 1 3 comm LATCHES AND 4 U ASSOCIATED LOGIC msmucnon ADDRESS REGISTER] e M OY an R TER 45 AD E58 we 1/ MAGNETIC CARD 1 46 T 15 MEMORY CONTROL LINES 14 WPUWUTPUT CONTROL LOGIC I *LNL T T AETTJAEITFPI T 640 STORED MICRO-PROGRAM 25 STEPS LATCHES comm 50] T msmucnon REGISTER 14s PRINTER comm PANEL 4 /T SWITCHES KEYBOARD PRINTER CONTROL 1 2 m KEYBOARD M W! L comrfigtlgmu ,5 U c Tom RE cTsTER'" 13 J UM, T V r H i T am Rggsm A g mm BYTE so; oouw uTconEg; womum; REGISTERS 1s MEMORY BYTES 31 e4 INPUT CODES 12a USER'S BYTES 2 24 DECIMAL BYTES UccuMuLAToR C32 35 1s COLUMNAR worms 7 4 MEMORY 36 7 worms 13 FIXED FACTORS mm WORD womuuc REGISTERS 57 A WORD REGISTER A* l 10 INVENTORS nuns E. LOWRY 8 3 4 5 6 on vmum L HEDONALD T0 2 1 1 12 2 12 1 8 PWER 24 7'- 1 INPUT OUTPUT DECIMAL FIELD FIELD SELECT ATTORNEY PATENTEMuv 23 m1 3.623.012 
SHEET 0 [1F 11 um [10o A=AUTOHODE FIG 4 CLEAR 0R an commas 101 n -uAuuAL uomz mm m REGSTERS L/u LOAD 0R MANUAL A T-TYPE MODE 1 m L PERFORM A CARRIER RETURN A,L/M,T N0 v55 A YES  PERFORM A CARRIER RETURN so I A r CLEAR 0R SET commas/10s AND REGISTERS T0 PROPER STATE 158 A? HATCHPRAI'NTHEAD H F CASE T0 KEYBOARD m HAS A A,L/H,T 171 WAS\ cggkagggn \YES 115 PUT PRINTER mm 126 LowERcAsE I PATENTEDunv 231ml SHEET FIG. 4b 
 er A50? REGISTER-E T0 AUTO BRING THE NEXT CHARACTER OUT OF USER STORAGE. 
STEP THE PAW COUNTER UP ONE PATENTEDKTTY23|9T| 3.623.012 
SHEET [18 0F 11 ..V E f? DECODE CHARACTER v/(mm INPUT CODE TYPE DECIMAL PROGRAM TAB PROGRAM BRANCH NUHERIC PEKEY START CAR FUNCTION KEY KEY TKuExBKcKsPKcE KEY RETURN KEY NON-FUNCTIONAL LOCK PROPER FIND THE BUILD KEYBOARD TROL CARRIER NUMERIC LATCHES PRINT EUHERIC ENTRY WITH SIGN WM J AND DECIMAL AND SPACE AFTER TYPE I l WK PRINT BRANCH 4+ AND SPACE EN INDEX 156 m PROGR STEP COUNTER BY 2. 
 .E, V T E fi 173 PRINT THE CHARACTER 13s sTEPTKEP GRAH SET NEGATIVE STEP 60 ER ENTRY LATCH oKcE J A m J 131 T m A,L/M,T 
PAIENTEnYuY 2s Yen SHEET TEST FOR MODE CHANGE TAB CONTROL FIG. 6a 
 MATCH PRINTER T0 KEYBOARD SHIFT INPUT DECODEI NUMERIC 0-9 TAB BUILD STORE KEY ENTRY m 86 /200 E EUNCY|0YYT1ECWW LI I [ma] MARK a? PATENTEuwnv 23 m1 3.623.012 
SHEU 10 HF 11 START HERE FETCH USER'S BYTE 205 F IG 6 b PUT USER'S BYTE B 206 ms CONTROL an 201 INDEX PAW LATCH 0N 216 CLEAR B6, B2, A I 
FETCH MODE SW FIG. 7 
PATENTED 23 3.623.012 
SHEET 11 0F 11 DECIMAL POINT comm FORM Z DIVISION A =10 A- MULTIPUER a DIVIDEND B MULTIPIEICAND G-DIVISOR 0-10 PUT IN A PUT R IN a COMP z MULT|PLY-DIVIDEV ACCOUNTING SYSTEM WITH PROGRAM BY EXAMPLE FACILITIES REFERENCES U.S. Pat. application, Ser. No. 802,700 filed Sept. 6, I968; inventor: Robert A. Kolpek', entitled Data System With Printing, Composing, Communications, And Magnetic Card Processing Facilities, now continuation application Ser. No. 836,798 filed Dec. 19, 1969. 
 US. Pat. application, Ser. No. 765,326 filed Oct. 7, I968; inventors: Robert A. Rahenkamp and William R. Stewart, Jr.', entitled Electronic Statistical Typing System. 
 IBM Customer Engineering Instruction Manual for the Selectric Printer, Form Number 24l-5032-2, dated Jan. I966 (Trademark). 
 IBM Customer Engineering Manual of Instruction for Selectric Input/Output Keyboard Printer, Form Number 24l-5lS9-, dated I965. 
 IBM Customer Engineering Universal Reference Manual for Selectric Input/Output Keyboard Printer, Form Number 241-5 1 82-, dated June 30, I963. 
BACKGROUND OF INVENTION, INCLUDING FIELD AND PRIOR ART A number systems have been developed prior to this time that are operable with program by example" routines. However, none of the prior systems are believed to incorporate the variety of processing and control techniques taught herein. As an example, reference is made to the IBM application Elec tronic Statistical Typing System," previously referenced, that is representative of a system of this nature making use of a cathode ray display element and including a stored program that is "learned. The Kolpek application describes a magnetic card recording and reproducing apparatus that is useful in the present system as an input and output device. The Selectric" input/output printer manual describes a printer that is modified with an electrical keyboard for use in the present system. 
SUMMARY OF INVENTION The present system is primarily intended for operator control of both data entry and program entry particularly emphasizing a "program by example feature. The system is responsive to a multitude of instructions for performing a variety of applications requiring calculations and alphanumeric printing. Rather than deriving its program from some automatic input device as with large computer systems, the present system responds to key entries by the operator to enter program information while an accounting job is being done. The operator works the problem in much the same manner as she uses a conventional desk calculator and as the problem is worked, the steps in the operation are stored in the system's program memory. Later, while handling additional groupings of information similarly formulated, the system executes the same program repetitively, accepting keyed-in data in individual data fields across the accounting form, performing calculations, and printing output documents as required. 
 The primary features of the present inventive arrangements are as follows: 
Program By Example The system responds to key entries to develop a stored program usable in processing information entered at a later time as well as concurrently with the entry of the program. Columnar Register control (Circle C) The keyboard includes a Circle C key that enables the operator to access individual columnar registers corresponding to the columns on a form in the printer. The system automatically keeps track of the proper column of the form and the corresponding columnar register. 
Branching Technique The system responds to operator intervention to access individual stored branch routines as required during accounting operations. Depression of one often numeric keys on the typewriter accesses a corresponding branch program. 
Decimal Point Control The machine operates with floating point decimal during input and fixed point decimal during output. True Percentage Operation (Percent Equals key) Depression of a Percent Equals key by the operator produces an answer in true percentage, that is, one number is a certain percent of another number instead of supplying a particular decimal value. 
Alpha Emit This feature enables the operator to store any of a desired number of repetitive characters in the machine program memory for later use and automatic provision during typing. This is stored information that is used frequently. 
Tab Control In contrast with prior systems, the present system permits the operator to tabulate across unused columns where no entry is required and automatically keeps track of the location on the form as well as the related columnar register. 
Auxiliary Input/Output Devices The system is readily adaptable for use with other input/output devices such as a magnetic card recording and reading apparatus. 
OBI ECTS The primary object of the present invention is to provide a system having increased flexibility while retaining operator control with a program by example" learning routine in order to perform a variety of applications involving arithmetic operations, data input, conversion, data output, printing, and recording and reproducing of information. It is an objective of the present case to provide a powerful system that is useful particularly in connection with accounting forms having columns of information across the form and particularly involving accounting operations such as billing, invoicing (with discounts), payroll, costing, bidding and estimating, purchase order writing, inventory reporting, bill of material explosions. policy writing (insurance accounts receivable, accounts payable, sales distribution/analysis and similar accounting func tions. 
 The foregoing and other objects, features, and advantages of the invention will be apparent from the following more particular description of the preferred embodiments of the inven tion as illustrated in the accompanying drawings. 
DESCRIPTION OF THE DRAWINGS In the drawings: 
 FIG. I is a block diagram of an accounting system based on the features previously noted including a keyboard, a printer, memory, arithmetic circuits, associated control, and processing logic. 
 FIG. 1a illustrated a form of control panel useful in setting up the system of FIG. I. 
 FIG. 2 is a suggested arrangement for the keyboard in the system of FIG. 1. 
 FIG. 3 illustrates the arrangement of the memory in FIG. I including the microprogram steps and various register areas. 
 FIGS. 4a, 4b, 4c, 4d, and 4e when arranged as shown in FIG. 5 (on same sheet as FIG. 40) illustrates data and logic determination operable to perform the various functions in the system of FIG. 1. 
 FIGS. 60 and 6b, when arranged as shown in FIG. 7, illustrate decisions and internal operations performed during tab control procedures particularly with respect to the skipping of columns on a form. 
 FIG. 8 illustrates procedures in the system of FIG. I involved during multiply and divide operations with appropriate decimal point control. 
TERMINOLOGY, ABBREVIATIONS, SYMBOLS Accumulator The Accumulator performs the customary arithmetic function of adding one number (the addend) to another number (the augend) already present in the accumulator to form a sum. In the present system the accumulator is operable in the byte or word mode. Add 
 This key causes the contents of the Entry/Result (E/R) register to be added to the contents of the specified accumulator. The l memory is used as the accumulator unless the II, III, or IV memory is specified by a previous keystroke. If this keystroke follows a numeric entry, the entry is printed but the result of the accumulation is not. The contents of the E/R register remains unchanged. Alphabetic Keys If the calculator is in the Alphabetic Entry or in Type mode, the keyboard can be used as a standard correspondence keyboard with both upper and lowercase characters and all typing functions available. Alpha Emit This key has the same function as Alpha Entry except that in the Program mode, all keys struck after this key and before the Program Start key are captured in memory and will be emitted from memory when the program is executed. Alpha Entry This key returns the keyboard to its normal typing condition. Any of the normal typing functions are allowed in this condition. To return to the calculate modes, the Program Start key is struck. Arithmetic Unit The arithmetic unit contains logic circuits, storage registers for programs and data, and controls for the associated input and output devices. The arithmetic unit coordinates and controls the input of data, the arithmetic operations of such data. and the printing of the output documents. Auto Mode In this mode, functions are executed according to a stored program. Hit Counter Counts l-6 representing the 6 bits in a byte. Branch and Skip Control Recognizes conditions for a branch operation and initiates necessary control to perform the branch as well as skip intermediate program steps. Branch Keys Ten keys are used to indicate branching addresses in program memory. These are the ten numeric keys -9 in the top row of the keyboard. These keys are struck to cause the changing of subroutines. Byte Register A Primary interface with input/output devices. It has a capacity of six bits, comprising one complete byte ofinforrnation. Byte Working Registers There are seven additional byte working registers for storing bytes of information for transfer into and out of Byte Register A during various arithmetic or other operations. C arry Latch Stores an indication that a carry has occurred during arithmetic operations. Control Latches and Control Logic There are a number of control latches that determine the system operation. As an example, the system performs its functions during three basic cycles: Reset. Access, and Execute. During Reset time. control latches are reset from the previous operation. During Access time the next instruction is obtained, stored in the machine. During Execute time the operation required by the instruction is performed. During the cycling of the system, the next instruction is brought into instruction address register 44 which controls the memory address register 45 to access the actual instruction from the microprogram section 25 into instruction register 48 whereupon the instruction is decoded in block 49. Contrary to the data bytes and words, an instruction in location 25 is 12 bits long. Up to four bits are used for the operation or Op code and the other positions serve as modifiers of the code. Reference is made to a later section for an indication of the various instructions that are encountered in the system. Basically, the various instructions are divided into five major groups that are referred to as branch, fetch and store, byte arithmetic, word arithmetic, and skip. 
Columnar (C) Accumulation This key is used to address l6 numeric registers. The use of this key is the same as the use of the I, II, III and IV keys except that each time C is struck, it steps the C address counter to the next address. For example, C will add the HR register to the presently addressed C register and then steps the C address counter to the next address. A Carrier Return resets the C address counter. 
Columnar Words (Registers) There are sixteen (16) columnar words that are total registers for If) corresponding columns across any particular form that is in use in the printer. These are accessed sequentially by depression of the Circle C key on the keyboard. 
Data Register A 6-bit register through which all printer data flows. Decimal Bytes These twenty-four (24) bytes correspond to 24 words of information that are in the word operating area of the system diagram. 
Decimal Point Control This section controls processing of input decimal factors from an input media such as a magnetic card, or from the keyboard. Also output decimal and calculation significance is controlled by appropriate programming. Both input and output decimal control is selected by rotary switches shown in FIG. la, but input control can be operator modified. 
Decimal Selector This multiposition switch, FIG. la, selects the number of digits to the right of the decimal point to be used in all output printing. 
Digit Counter The Digit Counter cooperates with the bit counter to count up to 42 bits, comprising a word of information. Divide This key causes the contents of the E/R register to move to the OP register and conditions a divide. Otherwise. its operation is identical to multiply. 
Electronic Logic All circuits for I/O control, for program storage and execu tion, and for arithmetic functions are located within the arithmetic unit. In addition, some of the controls necessary for use of the Magnetic Card device are within the arithmetic unit. 
Equals This key causes a preconditioned multiply or divide to be performed. The OP register is multiplied or divided by the E/R register and the result appears in the E/R register. The result prints after the operation is completed. 
Equals Accumulate The operation of this key is the same as the Equals key except that in addition the result is added to the 1 memory word. Field Width Selector Switches These two multiposition switches (one for entry printing and one for result printing) select the desired field widths to be used throughout the program for printing control. 
Fixed Factors The system includes thirteen I 3) fixed factors that are used in converting binary numbers to a binary coded decimal representation for printout purposes. 
Function Decode System circuits responsive to functional indications to derive an appropriate functional control signal. Function Keys Seventeen keys are used as function keys for arithmetic operations. These keys are shown in FIG. 2 and are defined as follows: 
I-Thc Primary accumulator II-A Secondary accumulator IIIA Secondary accumulator IV--A Secondary accuinulutor Thc Sub-total function aThe Alpha Entry function [Ii-The Non-print function *The Percent Equals function CThe Columnar accumulate function (Circle C) i The Equals accumulate function +The Divide function =The Equals function *The Total function The Multiply function The Subtract function (Negative entry) +The Add function f -The Alpha Emit function Input Codes The system responds to sixty-four (64) input codes from the keyboard representing rotate and tilt positions of the print head in the printer and converts these to a character set that is usable internally in the system. Instruction Address Register (IAR) Contains address of next instruction required during operations. Instruction Decode Recognizes the individual instructions and develops signals to initiate the required operation. Instruction Register Retains instructions during use to control the operation required in the system. Instruction Set The system responds to instruction words as follows: 
Branch Unconditionally Without Link (BU) Branch Unconditionally Using LAR (BU LAR) Branch And Link (BL) Byte Arithmetic (8 instructions) Add Byte (AB) Add Byte-Clear Q (ABO) Subtract Byte (SB) Subtract Byte-Clear Q (SBQ) Copy Byte Positive (CB+) Copy Byte Negative (CB) Transfer Byte Positive (TB+) Transfer Byte Negative (TB) Word Arithmetic l l instructions) Add Word (AW) Subtract Word (SW) Copy Word Positive (CW+) Copy Word Negative (CW) Transfer Word Positive (TW+) Transfer Word Negative (TW) Add Word Clear (AWQ) Subtract Work Clear 0 (SWO) Add Word And Shift (AWSH) Subtract Word And Shift (SWSH) P Word Shift (PWSH) Skip Conditionally Fetch 0r Store (7 instructions) Fetch or Store Word (Indirect) (FW. STW) Fetch Or Store Decimal Bytes (Indirect) (FD, STD) Fetch Or Store Input Codes (Indirect) (FC, STC) Fetch Or Store Users Bytes (Indirect) (FU, STU) Fetch Or Store Bytes (Direct) (FB, STB) Fetch Immediate (FIM) Fetch Or Store l/O (FIO, STIO) Keyboard The system uses an electric keyboard for manual data input and for programming. The keyboard has overlayed function keys. Program Start bar and an integrated lO-key unit. in addition to its standard typing features. The keyboard is used not only for standard typing, but also for numeric entry, for programming. and for program control. The output of the keyboard is a seven-bit code from reed switches for all characters and functions. Keyboard Control Logic Circuitry responsive to key depressions to develop a cor responding signal representation. Key Description There are four groups of keys on the alpha-numeric keyboard that are used to program the calculator or enable it to execute its functions. These are Function Keys. Numeric Entry Keys, Branch Keys. and Alphabetic Keys. 
Load Mode This mode performs the same as the Manual mode. but also stores the program characters as they are struck. Magnetic Card Device The system is designed to used magnetic cards as input and output media as derived from apparatus like that in the Kolpek case. When the magnetic card device (Magnetic Card Selectric" Typewriter-MC/ST) is used in conjunction with the arithmetic unit, the system has full MC/ST) is used in conjunction with the arithmetic unit, the system has full MC/ST capabilities as well as the usual calculating functions. The system has the ability to use the magnetic cards for storage of alphabetic or numeric data and programs. The arithmetic unit is designed for use with a single-station MC/ST. The MC/ST is used in conjunction with the arithmetic unit for the following functions: 
Alphabetic Printing To use the MC/ST to print alphabetic data, the following sequence of keys is struck. First, Alpha (0:) is struck indicating that the data is alphabetic. Play is struck indicating that the data is not to be recorded. Second, Char, Word, or Auto is struck indicating that the data is to come from the magnetic card. If a third key is not struck. the keyboard is unlocked for standard manual typing. If the Record key is struck instead of Play, then the alphabetic data typed manually will also be recorded. In Auto Mode. the functional characters would be emitted in the same order to cause the proper function. 
Numeric Entry and Output The striking of the Play key, then the Word key when the calculator is in a numeric entry mode will cause a word of numeric data to read into the calculator and then be printed. To record fields, the MC/ST is put into the Record mode by striking Record prior to causing the desired field to print. The MC/ST is then returned to the Play mode to prevent further recording. 
Program Storage The MC/ST card is also used for program storage. The series of functions and entries which is captured during the programming of the calculator may be written on the MC in a program-out mode. Also, characters stored on an MC may be read into the program memory in the program-in mode. The program cards may also be made on a nonarithmetic MC/ST and they may have a special format to identify them as program cards. 
Manual Mode In this mode, the arithmetic unit performs as a manual cal culator with functions performed as they are keyed. Memory Address Keys-I, II, III, IV 
 These keys specify memory is to be used with the Add, Subtract, Total, or Subtotal functions that follows. If no key is specified, l memory is assumed. In addition, these keys can be used to specify which memory to use instead of the E/R register in a Multiply, Divide, or Equals operation. In other words. II will add E/R into II, and II X III will multiply memory II times memory Ill. 
Memory Address Register Contains the address of information in the memory for controlling memory drive lines. Memory Bytes The system has sixteen 16) memory bytes that are used as markers for program control and auxiliary address registers. Memory Control Lines Drive lines responsive to the current address in the Memory Address Register to access a particular section of memory. Memory Words Four (4) memory words serve as auxiliary registers and are addressable from the keyboard. These are the Entry/Result (E/R); A; Multiplicand (MP) and Operand )Op) registers. Multiply This key causes the contents of the E/R register to move to the P register and conditions a Multiply operation. The contents of the E/R register remains unchanged. If this keystroke follows a numeric entry, that entry will print but no other print will occur. 
Nonprint This key followed directly by a function key inhibits the normal printing associated with that function. Numeric Entry Keys Twelve keys and the Program Start bar are used to provide numeric field entry during the loading of programs and during manual or automatic execution of an operational sequence of functions. These keys are shown in the shaded key areas of FIG. 2. Ten of the keys are arranged in a standard lO-key format for ewe of use in numeric entries. These characters are the 0-9 numeric keys. One key (Rekey) is used to condition the entry register to zero to accept a new entry-in most cases, a corrective entry. The l2th key (Decimal) is used to indicate the decimalpoint position in the entry. If this key is struck during entry, it marks the position of the decimal in the entry. The Program Start key (Start) is used to signify the end of an entry. For negative entries, the Subtract key is struck during the entry in Auto mode. This section of the keyboard is operational anytime the machine is in the calculate modes and not completing a functional operation. The decimal point system used is floating point in entry and calculations and fixed point on result print out. There are two types of numeric entry. Nondecimal where no decimal point key was struck during programming, and decimal (D) where the decimal point key was struck during programming. Entries will print out with the decimal point keyed if in Auto or Manual mode. If no decimal point is keyed, the entry is assumed integer. In Auto mode, no decimal point (if D) or the decimal selector switch position (if D) will be used unless a decimal point is keyed during the entry. The printout ofa result ofa machine calculation has its decimal point location controlled by the decimal selector switch on the control panel, and the result is half-rounded to the selected number of decimal places. In Auto mode, there are two methods of skipping programmed numeric entries. One is to strike the Program Start key without striking a numeric key. In this case, the machine will clear the E/R register and print out spaces or zeros according to the programmed entry decimal format, then continue executing functions normally. The second method is to strike the Tab key. This will cause the printer to tab once and cause the calculator to skip all programmed functions except multiple Tabs or a Carrier Return until the next entry function appears. 
Output Codes The system develops ten (l0) output codes corresponding to rotate and tilt locations on the print head in the printer in order to specify numbers for printing. 
Oscillator Provides basic timing pulses for the system. Percent Equals This key operation is the same as the Equals key except that the result is divided by I00 before the operation is complete. During multiplication this allows the calculation of whole percentages l00.00 3.5%3.50) to be performed. During division, this causes the result of the division to be expressed in percent (24 l O0=h24%). 
Printer The printer is modeled after the IBM Input/Output Selectric," but is actuated electrically. The printer is used in conjunction with the arithmetic unit for the preparation of bills. invoices, orders, etc. The printer can also be used independently of the arithmetic unit as a conventional correspondence typewriter with all the necessary typing functions available. 
Printer Control Logic Responds to various signals to and from the printer to derive appropriate control levels. Program Address Word (PAW) Counter An internal counter that keeps track of which of I28 User's bytes is being worked on. It is stepped when the next character is brought out. Program by Example Refers to the loading of a program from the keyboard under operator control concurrently with the entry of data, with the program thereby being available for use in subsequent entry and output routines. Program Memory The program memory has 128 (6 bits) bytes dividable into ten subroutine areas. Programs are changeable one subroutine at a time. All program steps typed from the keyboard during Load Program mode will be stored in the selected subroutine of program memory. Program Step Counter Controls the cycling of the system through various routines including the printing of characters. Programming The calculator obtains its program through the alphanumeric keyboard, and the program set consists of a series of alphanumeric characters. Each character is complete within itself, and it is only the sequence ofcharacters that can change the desired operation of the machine. Shift Latch Supplies indication of shift status of printer. Stored Micro Program The system is capable of storing six hundred forty (640) microprogram steps that are accessed during operations. Subtotal This key operation is the same as Total only no clear occurs. Subtract This key causes the contents of the E/R register to be subtracted from the contents of the specified accumulator. Otherwise, its operation is identical to Add. Tab And Carrier Return Operation The Tab and Carrier Return keys are also used as programming keys. In the Load mode, both keys are stored as program characters. The Tab character has only its normal meaning when struck in the Load or Manual mode or when emitted during the execution ofa program in Auto mode. The Carrier Return character has an extended meaning when struck. When the Carrier Return character is struck or emitted. it performs its normal function of returning the print head but in addition, the character causes a reset of the calculator by branching to the first step of the program and resetting the columnar accumulator address counter. Each subroutine within a program must end in a Carrier Return. The striking of the branch keys causes a search and count of the Carrier Returns stored in memory till the proper number of Carrier Returns is counted. 
Total This key causes the contents of the specified accumulator to transfer to the E/R register and print. The specified accumula' tor is cleared. 
Type (MC/ST) Mode In this mode, the keyboard is joined directly to the printer for use as a standard Selectric" typewriterv If a magnetic card device is present, this mode enables all of the MC/ST functions. 
Users Bytes There are one hundred twenty-eight [28) User's Bytes for storing a program by example for use in the system. Word Working Registers The system has three (3) Word Working Registers besides Word Register A for temporary storage of data during processing. All internal arithmetic operations are performed among these four registers. Word Register A Word Register A has a capacity of forty-two (42) bits of information. This register serves to fetch and store columnar words. memory words, and the fixed factors during processing. 
Zero Latch This latch checks bytes of information for the presence of zeros. It is used for example to determine Type mode which is all zeros or to indicate the presence of a one bit in information. to check the result of an addition to see if the sum is zero. or to check for a zero condition during a transfer operation. 
System Organization, Description, and Data Flow FIG. I is a block diagram of the present system including various input and output devices, a central memory. clock cir cuits, working registers of various kinds. an accumulator, and associated control logic. 
The particular features herein include the following: 
I. Program By Example 2. Handling of Column Registers (Circle C) 3. Branching Technique 4. Decimal Point Control 5. Percent Equals Operation 6. Alpha Emit 7. Tab Control 8. Magnetic Card Extensions The features listed directly above have been previously alluded to in the introductory section of the present case and will be developed in greater detail in connection with a sample accounting application to be discussed shortly. 
 For the present. attention is directed to the system diagram of FIG. I. The various components of the system are generally defined in the terminology section above. to which reference is made. However, a discussion of the interconnection of the components in the system and their interaction is considered useful. input to the system is through the keyboard I and associated control logic 2 as well as control panel switches 4 and associated logic 5. The control panel switches are shown in greater detail in FIG. la and include switch 7 for selecting input field width. switch 8 for selecting output field width, switch 9 for selecting the decimal point location and the usual power-on switch 10. Output from the system is by printer 12 from control logic [3. Printer 12 is comparable to the Selectric" printers described in the manuals previously referenced. Considering the logic blocks 2. 5. and 13, keyboard logic 2 controls cycling of the system responsive to depression of keys on keyboard 1. Control panel logic gates the settings of the different switches 7, 8, etc., into the common interface which is the byte register A. designated [5. Printer logic [3 controls movement of data to the printer and feed back from the printer and its timing. 
 An auxiliary magnetic card unit 6. such as that disclosed in the Kolpek case, serves as additional input/output through control logic ll. 
 All data derived from the input/output devices occurs by a sampling technique during which characters are deposited in register [5. This register is six bits long. Entries from keyboard I enter register [5 in the six bit keyboard code as a result of closure of electrical switches in the keyboard. Characters to be printed are directed to printer l2 from register 15 and have bits representative of rotate and tilt conditions on the print head on printer 12. On the other hand. information from control panel switches 4 may be six bits of a pure binary code. So all of the contact with the input/output devices is through byte register A. Another register of interest is Word Register A designated 17 in the lower portion of FIG. 1. information in the system is handled on either a byte basis or a word basis with an individual byte comprising 6 bits of information and a word comprising 7 bytes or 42 bits of information. Closely associated with the registers 15 and 17 is accumulator 19 serving to perform the usual arithmetic functions in the system. 
 Besides Byte Register A. seven other byte working registers are provided indicated at 20. These serve to store individual bytes of information during processing. These may also be seen in FIG. 3 which illustrates a memory configuration that includes a left-hand portion storing six hundred forty (640) microprogram steps and a right-hand portion for storing various bytes and words of information as well as codes used for translation purposes. The microprogram portion of the memory in FIG. 3 is designated 15 in FIG. I. The other portions of the memory are scattered throughout FIG. 1. but include those associated with Byte Register A. that is. ID output codes and 64 input codes at 28 and 29. respectively; [6 memory bytes, I28 User's bytes. and 24 decimal bytes designated at 30, 3]. and 32. respectively. Associated with Word Register A are 16 columnar words. 4 memory words. and 13 fixed factors. designated 35. 36. and 37. 
 Basic timing for the system from oscillator 40 driving bit counter 4l and digit counter 42. Bit counter 4| counts [-6 and digit counter 42 counts l-7. the two counters combining to define a word of 7 bytes or 42 bits of information. Associated with the counters and other logic are control latches 43. an instruction address register 44, and memory address register 45, i5 memory control lines 46 concerned with accessing the microprogram in block 25. an instruction register 48, an instruction decode section 49, other logic concerned with branch and skipping designated 50. and shift. carry. and zero conditions designated 51. 
 The system operates basically on individual cycles involving three subcycles, that is, a Reset subcycle. an Access subcycle. and an Execute subcycle. During the Reset portion of the cycle, all control latches are reset from a previous operation. During Access time, the next instruction is accessed from memory. stored in the machine. and during Execute time the particular operation required by the instruction is performed. The system then recycles and goes through similar succeeding cycles. 
 To further clarify some of the system aspects, the byte arithmetic operations will involve factors found in the working registers 20 that are transferred to Byte register A during actual arithmetic operations, The other byte locations 30, 31, and 32 store information that is useful during processing of data but that is transferred into Byte register A to determine its significance. When coming from keyboard 1 into the system. the switch closures effected by depression of the keys on the keyboard (the keys being shown in greater detail in FlG. 2) are translated to individual related input codes by reference to the input code section 29. Upon output from the system to the printer. data that is stored, as an example, in binary is converted to a proper rotate-tilt configuration for printing of a decimal representation 09 by reference to the output code section 28. The l6 memory bytes 30 are used in the system as marker bytes for program control and as auxiliary address storage. The I28 users bytes 31 are available to store a program entered through keyboard I during a Load Mode to be discussed later. The 24 decimal bytes correspond to 24 words of information in the word area. The decimals are handled on a byte basis. while the data in those words are handled on a word basis. So far as the actual arithmetic operations are involved. the data is accessed from memory on a byte or word basis. but processed on a serial by bit basis. 
 Considering the relationship of Byte Register A and Word Register A". some interaction occurs. As an example to perform an entry of a particular arithmetic value. the operator depresses keys on the keyboard 1. one key at a time to enter a number. Each digit as it is entered, appears in the Selectric code, but is converted internally by the arithmetics to a binary representation that is assembled in Word Register A. This continues with the entire number eventually being assembled in Word Register A for later use. On the way out to the printer during output operations, 13 fixed factors in section 37 are accessed to convert the binary representation of numbers to the proper binary coded decimal representation for printout purposes. The four memory words in section 36 are available as auxiliary registers for use by the operator to enter information of a repetitive nature. such as a date or standard terminology, or the like for use on each form during an accounting operation. 
 The I 6 columnar words in section 35 are essentially total registers corresponding to up to I6 columns across a form in use in the system on printer 12. These are addressed by depression of the Circle C (columnar) key. As individual columns on the form are encountered, the appropriate corresponding colum nar words are accessed so that a running total may be kept for each of the columns on the form. Later, it is possible to read out and print any total stored in the columnar registers. There is actually only one columnar key on keyboard I shown in greater detail in FIG. 2. Each time it is depressed, circuits are stepped in the system to access and appropriately address the next higher columnar register. As will come out further in the description, the system automatically keeps track of the columnar register, even though they may be skipped as, for example, during tabulation operations. 
Keyboard Reference is now made to FIG. 2 that illustrates the configuration of various keys provided on keyboard I in FIG. I. The keyboard essentially comprises a leftmost section 60 including Record button 61, Playback button 62., Adjust button 63, and Skip button 64 that are primarily concerned with the magnetic card recording/reproducing unit when connected in the system as an auxiliary input/output device and as particularly described in the Kolpek application referred to in the Reference" section. The central portion of the keyboard designated 65 includes a variety of keys, many of which correspond to those customarily encountered on the Selectric printer, but in the present system the key button designations have been modified to suit the particular entry and output functions of the system. Accordingly, under some circumstances, a particular key will represent a conventional character such as, for example, the "T" key, and under other circumstances represent a particular function as, for example, on the same key, the Equals function, Section 66 includes a number of mode keys, such as the Auto-Type key 67 and information selection keys 68, 69, and 70 for selecting lines, words, and characters of information, primarily for use with the MC/ST extensions. The rightmost section of the keyboard in FIG. 1 designated 71 includes mode buttons 7578 referred to as the Auto mode, Load mode, Manual mode, and Type mode, the purpose of which will be developed shortly. 
 As a preliminary indication of the functions in the system, depression of Type mode button 78 established interconnections of the keyboard with the system so that the input from the keyboard serves primarily to operate the printer with data entering the system and directly back to the printer somewhat in the manner of a conventional type-writing machine. The main difference is that the data enters the electronics of the system as an intermediate step between its entry and output to the printer. 
 When Manual mode button 77 is depressed, the logic is established for a manual calculate mode wherein the striking of certain "function keys on the keyboard will cause the functions to be performed arithmetically and also data is entered by means of the shaded portion of the keyboard that is overlayed on the standard keyboard. There is no storage of a program in this mode. The system works in a sense somewhat like the conventional desk calculator in this mode. 
 In a Load mode, established by depressing keybutton 76, the system actually receives information from the keyboard in a learn" mode and stores it in the I28 users bytes portion of the memory in the system. The system will operate similarly to the Manual calculate mode established by keybutton 77 except that the functions encountered during operation are stored in the memory for later use. 
 Such later use occurs during the Auto mode established by depressing keybutton 75. In this mode, a previously stored user's program is accessed along with related microprogram steps stored in the memory to execute the required operations. 
 Portion 65 of the keyboard in FIG. 2 includes a modified space bar 80, part of its space accommodating the 0" key used during numeric entry and designated Bl. Further to the right is Start key 82 for initiating an entry into the system from the shaded portion of the keyboard. During entry of numeric information by means of the shaded numeric keyboard portion, no printing of the individual digits of a number occurs until the Start button is depressed whereupon the entire number is printed out for checking purposes. 
 Some of the other keybuttons in portion 65, FIG. 2. are of interest, but reference is particularly made to the Terminology section for detailed definitions of these keybuttons. Besides the numeric keys 0-9, the shaded portion also includes a Decimal Point key and a Rekey for correction of input before printing. Over in the unshaded areas of keyboard portion 65 are four keys carrying roman numerals l-IV corresponding to the four word working registers in section 36, FIG. I. There are three keys involving Equals" operations that include the Equals Percent, Equal Accumulate, and Equals alone. These are the E, R, and T keys. The Equals Percent key is useful in multiplication or division for modifying a numeric quantity by a factor of I00 to change it to a percentage value. The Equals Accumulate key initiates performance ofa multiplication or division and accumulates it in the primary accumulation Register I. The plain Equals keybutton essentially initiates the completion of a multiplication or division operation. On the G and V keys are a multiply and a divide indication, respectively. Corresponding functions are stored or initiated when these keys are depressed. On the F key is a symbol resembling an asterisk that indicates a total operation and which tells the system to print out the total in a particular register. This prints out and clears the register. The diamond on the same key as the letter D initiates a subtotal operation. Besides the foregoing, other keys of interest are the Add and Subtract keys and the Non-Print keys associated with characters H, B, and Z. The Alpha key on the same keybutton as the character X converts the typewriter keyboard back into a conventional Alphanumeric mode for the typing of names, notes, or various kinds of datajust as with a conventional typewriter. The Circle C key on the keybutton with the letter "C" controls the columnar addressing of the system with the various columnar words in section 35, FIG. I, being accessed in a successive manner each time this key is depressed. The Alpha Emit key on the button with "Y allows the storage of any of the alphabetic characters from the keyboard without a corresponding function being indicated. Thus, if the operator wishes to have a word such as TOTAU printed out automatically during the course of a program, the storage of the characters is done under control of the Alpha Emit key. At the top of the keyboard is a row of keys 1-0 that are used by the operator for branching purposes and that respectively designate subroutines I-0 in the user's byte portion of the memory. During a Load Mode, such keys can be used to designate the subroutines while they are being loaded. Later. during an Auto mode. these keys are depressed to access desired subroutines. 
 Ordinarily, when the keys are used for both printing of characters and printing of program symbols, a special program" print head is provided on printer I2 in FIG. 1. Otherwise, the depression of the keys will effect the printing of upper and lower case characters somewhat in a normal fashion. 
Memory Organization The system memory was previously referred to briefly in connection with the block diagram of FIG. I, but is particularly shown in FIG. 3. Two-thirds of the memory is occupied by 640 microprogram instructions, each having a l2-bit length. Considering the rightmost one-third of the memory, the upper portion is set aside for future expansion. Next, the 16 columnar (C) words are encountered. The memory then has 13 fixed factors and a number of byte locations previously noted in connection with sections 30, CH, and 32 in FIG. 2. These include the 8 working bytes, and I6 other bytes of storage. There are twelve marker bits, the link address register (LAR) and the program address word (PAW). Below that is a section for storing the 64 input codes, four working words and four memory words. And finally the memory contains the 128 users bytes locations. 
Typical Accounting Application For purposes of illustrating the present inventive arrangements, a description of a typical job or application in an accounting environment follows. 
 The primary features that are illustrated by the typical application are Program By Example, Control of Columnar Registers, Branching Procedures, Decimal Point Control, Percent Equals Operation, Alpha Emit, Tabulation Control, and Magnetic Card Extensions. 
 The typical accounting job involves the preparation of a form on printer 12, FIG. i, that is arranged with a number of significant columns of infonnation. The form appears as follows: 
The first group of names and related information is somewhat straight forward, but is intended to illustrate the entry of the program for controlling printing of each of the lines to be discussed shortly. The second group of names illustrates the skipping of columns and the recognition of tabulation operations, meanwhile maintaining synchronism between the physical location on the form and the actual columnar register accessed in the system. The third group of names illustrates the handling of different rates having decimal point locations that are in different places. Program By E rample One of the primary features of the present system is the "learning" procedure involving a program by example. This means that the machine adapts itself to a program that is entered by the operator either separately from or concurrently with the entry of related data. The program is physically ooordinated with the various columns encountered on the form and stored in the user's byte area of the memory of the system. 
General Description of Form The exemplary form has a number of columns arranged from left to right and designated Name, First Month, Second Month. Third Month. Quarter, Rate, Quarter Total, Previous Total. Difference. Percent Diflerence. It is assumed that the form represents a quarterly summary of some company activity. As an example, the form could be based on operations of an oil company involving the listing of tank car operations, as an example, gallons carried, the rate charged for cartage, etc. Or it could represent the names of employees, the number of hours worked, the rate per hour, total hours for the quarter, rate for the quarter, etc. The form includes three sections arranged vertically, each section having first, second, and third Quarter total Previous total Percent Dlfl. dm. 
This is done during a Load operation. During Loading, the operator may make use of actual data in the first line, simulated data, or data used during a previous quarter, as an example. In any case, the various functional characters representing program requirements are entered into memory for later access. That is, the operator needs to enter the program only once for any particular form and thereafter it is accessed as required in processing data that is subsequently entered. 
 Two kinds of programs are required for the form previously illustrated. These are the Line program and the Total" program. The two kinds of programs are illustrated in the following material which relates the programs to the particular columns on the form previously illustrated and also sumnames and a running total for each of the vertical columns, 5 marizes what is involved in the entry procedures. 
First Line Data And Program Entry TAB TAB TAB TAB rms'r SECOND THIRD QUARTER rrmvrous NAME MONTH MONTH MONTH QUARTER RATE TOTAL row. mar. t our. 
 xxx xx (5+) 1.00(5+) 2.00 (5+) 3.005) 0.0000 4.006) z4.oo(t+) 21.00 1.00H1Il 4.55 
$II+-Q LINE PROGRAM Program by Example-load Mode-Line Program Entry zsum alpha The first action on the part of the operator is to depres =Er1d pha en ry. Load button 76, FIG. 2, which establishes the Load operation. 1'00 b ig gg fifigf first numeric field) This automatically causes a carrier return. restoring the print first number to accumulator =1-00)- 5 head in primer 1! to the lefi margin on the form. This also sets ifig'g'ig fif flfifififflifi "8mm up the circuits in the system for the accessing of the first byte 2.00 =Enter second number. location of the user's program storage. Thereafler, the operator now depreses the Alpha character key indicative of an =Add second number to second columnar registeralphabetic entry. The Alpha entry character is stored in the 3. 00 =Enter third number. 
=Add third number m mummwr (I=3m+2m+ first character location in the users program area in the memory of the system. It also establishes a mode that enables =Addres third columnar ter. 
+ third number to column, mismuse of the keyboard and the pnnter as a normal typewriter. At 
5 =1gt il on: acrgmullator (lltiotllirlnt 6.00]. this point. the operator then types the first name under the lPS-S 0U! COUXDHN' S I. 
+ mm] (6m) mlmmh column regism name columnv She then depresses the Program Stan key on 4 00 g g lif i- (5 the keyboard that restores the mode back to :1 Load mode. 
. n 0! DUI DUIDG 09H :c m mm 5110x241 [Prim 24ml The next key depresed is the Tab key that mores the print E igs 3 fl r (1) head to the first column under "FIRST MONTH. 
+ ;Aqd 2 i w m The operator now enters the data involving the amount a =23 {a i ag m l .00followed by the Program Start key that initiates printo comm, stuv tout of the number. Following tillS. the Plus key is depressed to 2 igg l x 11 indicate that this amount IS to be added in the primary Accu- 2 ggt tl out accutrrrliulaltor (I=l.0 )t[ l lfigure. Also. if the operator desires that the amounts vertically l mggfg g fl g- 5 in the columns be accumulated. the Circle C key prior to the a =g8rditlon (time 13. 23 2 Plus key directs the system to take the column figure and add resswor grs & zpmom qfinmmom 1m 300x100: 435% I ttinto the column register related to this column. Prior to in ll =dgrless warning register II. mating operation. the operator selects the input field width by =11, n out wfihout t. appropriate positioning of switch 7. FIG. la. Thts will establ h CR =Carrier return to and ne program. the width Of the numbers In the successive columns and the system automatically takes the data entered. places it in the Total Prog am Entry FIRST SECOND THIRD QUARTER PREVIOUS NAME MONTH lDNTl-i MONTH QUQARTER RATE TOTAL TOTAL DIFF DlFF 2u($FT.l(lTAl.,SFl C! (II N C'TAB (All C (DIFFJ (EllTlill (ElTll'll (ENTRY? (Silll (SKIP (PRODUU) IULTIPLIER] (SPACE) 5MB t rn-- +11 1! CR (EITllYl TOTAL PROGRAM $0 appropriate columns and adjusts it with the proper number of 2-Calls for beginning of second subroutine pp s" p thereby fitfint the number into the column .,-+-Smr, 1 ha emit. properly and insuring that the number terminates at the right SFT OR TO AL TAB SFTEnter desired characters hand margin f he individm comm 11 assuming "1 SEnd alpha emit input field width of eight characters and an entry of only two out columnar reg'ster characters. the two digit number will still be at the right hand side of the column involved. Subsequently, the operator enters a Total out 2nd columnar mglsmr the various functional characters as indicated and then tabs C--Total out 3rd columnar register into the succeeding column for entry of the data related to that column. in the particular case illustrated it is assumed CTotal out 4th colu a rfiglstel' that an input field width of eight characters has been selected. Most of the character 'tions in the individual columns will E E g g gf g ig gs be blank spaces. but iii each case the dollar amounts are 0 cu co 8 properly positioned in the columns. No tabulation is necessary to accumulator I with the particular form illustrated. That is. the operator need C-Total out 6th columnar register only depress the Program Start button following an entry to start a new entry which is then properly adjusted and winds up at the right hand margin of the column. The system automatically takes into account when each character is entered in a IIAdd contents of 6th columnar register to working +E]Register I'I Subtract same from accumulator I particular field and subtracts each character entry off of the fagz ggg rif g g I total field width to insure proper location. 
IIAddress workin register 11 Now. in the second column. the operator enters the dollar Perform divi 9 amount, depresses Program Start which causes printing of the dollar amount and the Plus key which accumulates this II amount with the amount previously entered in the first column to carry forward a horizontal total. If a vertical total is desired CREnd Submutme 2 in the second data column. the operator depresses the Circle