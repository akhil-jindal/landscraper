Device, method, and graphical user interface for transitioning between touch input to display output relationships 
US-9965074-B2
Apple Inc.
2018-05-08
https://patents.google.com/patent/US9965074B2/en
RELATED APPLICATIONS
This application is a continuation of U.S. patent application Ser. No. 14/608,942, filed Jan. 29, 2015, which is a continuation of PCT Patent Application Serial No. PCT/US2013/069483, filed on Nov. 11, 2013, entitled âDevice, Method, and Graphical User Interface for Transitioning between Touch Input to Display Output Relationships,â which claims the benefit of and priority to U.S. Provisional Patent Application Ser. No. 61/778,363, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Transitioning between Touch Input to Display Output Relationships;â and U.S. Provisional Patent Application No. 61/747,278, filed Dec. 29, 2012, entitled âDevice, Method, and Graphical User Interface for Manipulating User Interface Objects with Visual and/or Haptic Feedback,â which applications are incorporated by reference herein in their entireties.
This application is also related to the following: U.S. Provisional Patent Application Ser. No. 61/778,092, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Selecting Object within a Group of Objects;â U.S. Provisional Patent Application Ser. No. 61/778,125, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Navigating User Interface Hierarchies;â U.S. Provisional Patent Application Ser. No. 61/778,156, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Manipulating Framed Graphical Objects;â U.S. Provisional Patent Application Ser. No. 61/778,179, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Scrolling Nested Regions;â U.S. Provisional Patent Application Ser. No. 61/778,171, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Displaying Additional Information in Response to a User Contact;â U.S. Provisional Patent Application Ser. No. 61/778,191, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Displaying User Interface Objects Corresponding to an Application;â U.S. Provisional Patent Application Ser. No. 61/778,211, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Facilitating User Interaction with Controls in a User Interface;â U.S. Provisional Patent Application Ser. No. 61/778,239, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Forgoing Generation of Tactile Output for a Multi-Contact Gesture;â U.S. Provisional Patent Application Ser. No. 61/778,284, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Providing Tactile Feedback for Operations Performed in a User Interface;â U.S. Provisional Patent Application Ser. No. 61/778,287, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Providing Feedback for Changing Activation States of a User Interface Object;â U.S. Provisional Patent Application Ser. No. 61/778,367, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Moving a User Interface Object Based on an Intensity of a Press Input;â U.S. Provisional Patent Application Ser. No. 61/778,265, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Transitioning between Display States in Response to a Gesture;â U.S. Provisional Patent Application Ser. No. 61/778,373, filed on Mar. 12, 2013, entitled âDevice, Method, and Graphical User Interface for Managing Activation of a Control Based on Contact Intensity;â U.S. Provisional Patent Application Ser. No. 61/778,412, filed on Mar. 13, 2013, entitled âDevice, Method, and Graphical User Interface for Displaying Content Associated with a Corresponding Affordance;â U.S. Provisional Patent Application Ser. No. 61/778,413, filed on Mar. 13, 2013, entitled âDevice, Method, and Graphical User Interface for Selecting User Interface Objects;â U.S. Provisional Patent Application Ser. No. 61/778,414, filed on Mar. 13, 2013, entitled âDevice, Method, and Graphical User Interface for Moving and Dropping a User Interface Object;â U.S. Provisional Patent Application Ser. No. 61/778,416, filed on Mar. 13, 2013, entitled âDevice, Method, and Graphical User Interface for Determining Whether to Scroll or Select Content;â and U.S. Provisional Patent Application Ser. No. 61/778,418, filed on Mar. 13, 2013, entitled âDevice, Method, and Graphical User Interface for Switching between User Interfaces,â which are incorporated herein by reference in their entireties.
This application is also related to the following: U.S. Provisional Patent Application Ser. No. 61/645,033, filed on May 9, 2012, entitled âAdaptive Haptic Feedback for Electronic Devices;â U.S. Provisional Patent Application Ser. No. 61/665,603, filed on Jun. 28, 2012, entitled âAdaptive Haptic Feedback for Electronic Devices;â and U.S. Provisional Patent Application Ser. No. 61/681,098, filed on Aug. 8, 2012, entitled âAdaptive Haptic Feedback for Electronic Devices,â which are incorporated herein by reference in their entireties.
TECHNICAL FIELD
This relates generally to electronic devices with touch-sensitive surfaces, including but not limited to electronic devices with touch-sensitive surfaces that detect inputs for manipulating user interfaces.
BACKGROUND
The use of touch-sensitive surfaces as input devices for computers and other electronic computing devices has increased significantly in recent years. Exemplary touch-sensitive surfaces include touch pads and touch screen displays. Such surfaces are widely used to manipulate user interface objects on a display.
Exemplary manipulations include adjusting the position and/or size of one or more user interface objects or activating buttons or opening files/applications represented by user interface objects, as well as associating metadata with one or more user interface objects or otherwise manipulating user interfaces. Exemplary user interface objects include digital images, video, text, icons, control elements such as buttons and other graphics. A user will, in some circumstances, need to perform such manipulations on user interface objects in a file management program (e.g., Finder from Apple Inc. of Cupertino, Calif.), an image management application (e.g., Aperture or iPhoto from Apple Inc. of Cupertino, Calif.), a digital content (e.g., videos and music) management application (e.g., iTunes from Apple Inc. of Cupertino, Calif.), a drawing application, a presentation application (e.g., Keynote from Apple Inc. of Cupertino, Calif.), a word processing application (e.g., Pages from Apple Inc. of Cupertino, Calif.), a website creation application (e.g., iWeb from Apple Inc. of Cupertino, Calif.), a disk authoring application (e.g., iDVD from Apple Inc. of Cupertino, Calif.), or a spreadsheet application (e.g., Numbers from Apple Inc. of Cupertino, Calif.).
But existing methods for performing these manipulations are cumbersome and inefficient. In addition, existing methods take longer than necessary, thereby wasting energy. This latter consideration is particularly important in battery-operated devices.
SUMMARY
Accordingly, there is a need for electronic devices with faster, more efficient methods and interfaces for manipulating user interfaces. Such methods and interfaces optionally complement or replace conventional methods for manipulating user interfaces. Such methods and interfaces reduce the cognitive burden on a user and produce a more efficient human-machine interface. For battery-operated devices, such methods and interfaces conserve power and increase the time between battery charges.
The above deficiencies and other problems associated with user interfaces for electronic devices with touch-sensitive surfaces are reduced or eliminated by the disclosed devices. In some embodiments, the device is a desktop computer. In some embodiments, the device is portable (e.g., a notebook computer, tablet computer, or handheld device). In some embodiments, the device has a touchpad. In some embodiments, the device has a touch-sensitive display (also known as a âtouch screenâ or âtouch screen displayâ). In some embodiments, the device has a graphical user interface (GUI), one or more processors, memory and one or more modules, programs or sets of instructions stored in the memory for performing multiple functions. In some embodiments, the user interacts with the GUI primarily through finger contacts and gestures on the touch-sensitive surface. In some embodiments, the functions optionally include image editing, drawing, presenting, word processing, website creating, disk authoring, spreadsheet making, game playing, telephoning, video conferencing, e-mailing, instant messaging, workout support, digital photographing, digital videoing, web browsing, digital music playing, and/or digital video playing. Executable instructions for performing these functions are, optionally, included in a non-transitory computer readable storage medium or other computer program product configured for execution by one or more processors.
There is a need for electronic devices with faster, more efficient methods for assigning respective portions of an aggregate intensity to a plurality of contacts. Such methods may complement or replace conventional methods for assigning respective portions of an aggregate intensity to a plurality of contacts. Such methods reduce the cognitive burden on a user and produce a more efficient human-machine interface. For battery-operated devices, such methods conserve power and increase the time between battery charges.
In accordance with some embodiments, a method is performed at an electronic device with a display, a touch-sensitive surface and a plurality of intensity sensors to detect intensity of contacts with the touch-sensitive surface. The method includes detecting, on the touch-sensitive surface, a plurality of contacts. While detecting the plurality of contacts, the method further includes: receiving a first intensity measurement from a first intensity sensor of the plurality of intensity sensors; receiving a second intensity measurement from a second intensity sensor of the plurality of intensity sensors, where the first intensity sensor is different from the second intensity sensor; and assigning a first portion of an aggregate intensity of the contacts to the first contact and assigning a second portion of the aggregate intensity to the second contact. The method includes assigning the aggregate intensity based at least in part on: the first intensity measurement; the second intensity measurement; a location of the first intensity sensor relative to the touch-sensitive surface; a location of the second intensity sensor relative to the touch-sensitive surface; and a comparison between values of a set of one or more properties of the first contact and corresponding values of the set of one or more properties of the second contact. In response to detecting the plurality of contacts, the method further includes performing an operation based at least in part on the portion of the aggregate intensity assigned to the first contact.
In accordance with some embodiments, an electronic device includes: a display unit configured to display information; a touch-sensitive surface to receive contacts; a plurality of intensity sensor units to detect intensity of contacts with the touch-sensitive surface; and a processing unit coupled to the display unit, the touch-sensitive surface unit, and the plurality of sensor units. The processing unit is configured to detect, on the touch-sensitive surface unit, a plurality of contacts. While detecting the plurality of contacts, the processing unit is further configured to: receive a first intensity measurement from a first intensity sensor unit of the plurality of intensity sensors unit; receive a second intensity measurement from a second intensity sensor unit of the plurality of intensity sensor units, where the first intensity sensor unit is different from the second intensity sensor unit; and assign a first portion of an aggregate intensity of the contacts to the first contact and a second portion of the aggregate intensity to the second contact. The processing unit is configured to assign the aggregate intensity to the plurality of contacts based at least in part on: the first intensity measurement; the second intensity measurement; a location of the first intensity sensor unit relative to the touch-sensitive surface unit; a location of the second intensity sensor unit relative to the touch-sensitive surface unit; and a comparison between values of a set of one or more properties of the first contact and corresponding values of the set of one or more properties of the second contact. The processing unit is further configured to respond to detecting the plurality of contacts by performing an operation based at least in part on the portion of the aggregate intensity assigned to the first contact.
Thus, electronic devices with displays, touch-sensitive surfaces and a plurality of intensity sensors to detect intensity of contacts with the touch-sensitive surface are provided with faster, more efficient methods for assigning respective portions of an aggregate intensity to a plurality of contacts, thereby increasing the effectiveness, efficiency, and user satisfaction with such devices. Such methods may complement or replace conventional methods for assigning respective portions of an aggregate intensity to a plurality of contacts.
An electronic device detects, on a touch-sensitive surface, a plurality of contacts via a plurality of intensity sensors. While detecting the plurality of contacts, the device assigns portions of an aggregate intensity of the contacts to each of the plurality of contacts based on: the first intensity measurement received from a first intensity sensor; the second intensity measurement received from a second intensity sensor; a location of the first intensity sensor relative to the touch-sensitive surface; a location of the second intensity sensor relative to the touch-sensitive surface; and a comparison between values of a set of one or more properties of the first contact and corresponding values of the second contact. In response to detecting the plurality of contacts, the device performs an operation based at least in part on the portion of the aggregate intensity assigned to the first contact.
There is a need for electronic devices with faster, more efficient methods and interfaces for transitioning between touch input to display output relationships. Such methods and interfaces may complement or replace conventional methods for transitioning between touch input to display output relationships. Such methods and interfaces reduce the cognitive burden on a user and produce a more efficient human-machine interface. For battery-operated devices, such methods and interfaces conserve power and increase the time between battery charges.
In accordance with some embodiments, a method is performed at an electronic device with a touch-sensitive surface and a display, where the device includes one or more sensors to detect intensity of contacts with the touch-sensitive surface. The method includes detecting a contact on the touch-sensitive surface, determining a location of the contact on the touch-sensitive surface, determining an intensity of the contact on the touch-sensitive surface, and displaying a response in accordance with the detected contact, the response being based at least in part on an input-output mapping of intensity to response at the location of the contact on the touch-sensitive surface. The input-output mapping includes, for a respective location on the touch-sensitive surface, a first input-output relationship (e.g., touch input to display output) between intensity and response over a first range of intensity values, a second input-output relationship between intensity and response over a second range of intensity values, the second range of intensity values being different from the first range of intensity values, and a transitional intensity value where the first range of intensity values meets or overlaps the second range of intensity values, where, at the transitional intensity value, the first input-output relationship has a first rate of change of response with change in intensity, the second input-output relationship has a second rate of change of response with change in intensity, and the first rate of change is substantially the same as the second rate of change.
In accordance with some embodiments, an electronic device includes a display unit configured to display a response in accordance with a detected contact, a touch-sensitive surface unit configured to receive user contacts, one or more sensor units configured to detect intensity of contacts with the touch-sensitive surface unit, and a processing unit coupled to the display unit, the touch-sensitive surface unit, and the sensor units. The processing unit is configured to detect a contact on the touch-sensitive surface unit, determine a location of the contact on the touch-sensitive surface unit, determine an intensity of the contact on the touch-sensitive surface unit, and enable display of a response in accordance with the detected contact, the response being based at least in part on an input-output mapping of intensity to response at the location of the contact on the touch-sensitive surface unit. The input-output mapping includes, for a respective location on the touch-sensitive surface unit, a first input-output relationship between intensity and response over a first range of intensity values, a second input-output relationship between intensity and response over a second range of intensity values, the second range of intensity values being different from the first range of intensity values, and a transitional intensity value where the first range of intensity values meets or overlaps the second range of intensity values, where, at the transitional intensity value, the first input-output relationship has a first rate of change of response with change in intensity, the second input-output relationship has a second rate of change of response with change in intensity, and the first rate of change is substantially the same as the second rate of change.
Thus, electronic devices with displays, touch-sensitive surfaces and one or more sensors to detect intensity of contacts with the touch-sensitive surface are provided with faster, more efficient methods and interfaces for transitioning between touch input to display output relationships, thereby increasing the effectiveness, efficiency, and user satisfaction with such devices. Such methods and interfaces may complement or replace conventional methods for transitioning between touch input to display output relationships.
There is a need for electronic devices with faster, more efficient methods and interfaces for adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection. Such methods and interfaces may complement or replace conventional methods for adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection. Such methods and interfaces reduce the cognitive burden on a user and produce a more efficient human-machine interface. For battery-operated devices, such methods and interfaces conserve power and increase the time between battery charges.
In accordance with some embodiments, a method is performed at an electronic device with a touch-sensitive surface and a display, where the device includes one or more sensors to detect intensity of contacts with the touch-sensitive surface. The method includes detecting a contact on the touch-sensitive surface, and determining a respective location of the contact on the touch-sensitive surface, where the respective location on the touch-sensitive surface has a respective dynamic range for detecting intensity of the contact. The method further includes determining an intensity of the contact on the touch-sensitive surface at the respective location, detecting a change in intensity of the contact, and in response to detecting the change in intensity of the contact at the respective location on the touch-sensitive surface, adjusting an output of the device, where, in accordance with a determination that the respective location has a first dynamic range, the output is adjusted in accordance with the change in the intensity of the contact at the respective location and a first input-output mapping of intensity to response that corresponds to the first dynamic range, and, in accordance with a determination that the respective location has a second dynamic range that is different from the first dynamic range, the output is adjusted in accordance with the change in the intensity of the contact at the respective location and a second input-output mapping of intensity to response that corresponds to the second dynamic range, where the second input-output mapping is different from the first input-output mapping.
In accordance with some embodiments, an electronic device includes a display unit, a touch-sensitive surface unit configured to receive user contacts, one or more sensor units configured to detect intensity of contacts with the touch-sensitive surface unit, and a processing unit coupled to the display unit, the touch-sensitive surface unit, and the sensor units. The processing unit is configured to detect a contact on the touch-sensitive surface unit, determine a respective location of the contact on the touch-sensitive surface unit, where the respective location on the touch-sensitive surface unit has a respective dynamic range for detecting intensity of the contact. The processing unit is further configured to determine an intensity of the contact on the touch-sensitive surface unit at the respective location, detect a change in intensity of the contact, and, in response to detecting the change in intensity of the contact at the respective location on the touch-sensitive surface, adjust an output of the device, where, in accordance with a determination that the respective location has a first dynamic range, the output is adjusted in accordance with the change in the intensity of the contact at the respective location and a first input-output mapping of intensity to response that corresponds to the first dynamic range, and, in accordance with a determination that the respective location has a second dynamic range that is different from the first dynamic range, the output is adjusted in accordance with the change in the intensity of the contact at the respective location and a second input-output mapping of intensity to response that corresponds to the second dynamic range, where the second input-output mapping is different from the first input-output mapping.
Thus, electronic devices with displays, touch-sensitive surfaces and one or more sensors to detect intensity of contacts with the touch-sensitive surface are provided with faster, more efficient methods and interfaces for adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection, thereby increasing the effectiveness, efficiency, and user satisfaction with such devices. Such methods and interfaces may complement or replace conventional methods for adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection.
In accordance with some embodiments, an electronic device includes a display, a touch-sensitive surface, optionally one or more sensors to detect intensity of contacts with the touch-sensitive surface, one or more processors, memory, and one or more programs; the one or more programs are stored in the memory and configured to be executed by the one or more processors and the one or more programs include instructions for performing the operations of any of the methods referred to in paragraph in the fifth paragraph of the Description of Embodiments. In accordance with some embodiments, a graphical user interface on an electronic device with a display, a touch-sensitive surface, optionally one or more sensors to detect intensity of contacts with the touch-sensitive surface, a memory, and one or more processors to execute one or more programs stored in the memory includes one or more of the elements displayed in any of the methods referred to in paragraph in the fifth paragraph of the Description of Embodiments, which are updated in response to inputs, as described in any of the methods referred to in paragraph in the fifth paragraph of the Description of Embodiments. In accordance with some embodiments, a computer readable storage medium has stored therein instructions which when executed by an electronic device with a display, a touch-sensitive surface, and optionally one or more sensors to detect intensity of contacts with the touch-sensitive surface, cause the device to perform the operations of any of the methods referred to in paragraph in the fifth paragraph of the Description of Embodiments. In accordance with some embodiments, an electronic device includes: a display, a touch-sensitive surface, and optionally one or more sensors to detect intensity of contacts with the touch-sensitive surface; and means for performing the operations of any of the methods referred to in paragraph in the fifth paragraph of the Description of Embodiments. In accordance with some embodiments, an information processing apparatus, for use in an electronic device with a display and a touch-sensitive surface, optionally one or more sensors to detect intensity of contacts with the touch-sensitive surface, includes means for performing the operations of any of the methods referred to in paragraph in the fifth paragraph of the Description of Embodiments.

BRIEF DESCRIPTION OF THE DRAWINGS
For a better understanding of the various described embodiments, reference should be made to the Description of Embodiments below, in conjunction with the following drawings in which like reference numerals refer to corresponding parts throughout the figures.
 FIG. 1A is a block diagram illustrating a portable multifunction device with a touch-sensitive display in accordance with some embodiments.
 FIG. 1B is a block diagram illustrating exemplary components for event handling in accordance with some embodiments.
 FIG. 2 illustrates a portable multifunction device having a touch screen in accordance with some embodiments.
 FIG. 3 is a block diagram of an exemplary multifunction device with a display and a touch-sensitive surface in accordance with some embodiments.
 FIG. 4A illustrates an exemplary user interface for a menu of applications on a portable multifunction device in accordance with some embodiments.
 FIG. 4B illustrates an exemplary user interface for a multifunction device with a touch-sensitive surface that is separate from the display in accordance with some embodiments.
 FIGS. 5A-5L illustrate exemplary user interfaces and contacts with a touch-sensitive surface that are assigned respective portions of an aggregate intensity in accordance with some embodiments.
 FIGS. 6A-6C are flow diagrams illustrating a method of assigning respective portions of an aggregate intensity to a plurality of contacts in accordance with some embodiments.
 FIG. 7 is a functional block diagram of an electronic device in accordance with some embodiments.
 FIGS. 8A-8V illustrate exemplary user interfaces for transitioning between touch input to display output relationships in accordance with some embodiments.
 FIGS. 9A-9C are flow diagrams illustrating a method of transitioning between touch input to display output relationships in accordance with some embodiments.
 FIG. 10 is a functional block diagram of an electronic device in accordance with some embodiments.
 FIG. 11A illustrates mappings between ranges of intensity values and output responses, for one or more contacts on a touch-sensitive surface, in accordance with some embodiments.
 FIGS. 11B-11U illustrate exemplary user interfaces for adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection in accordance with some embodiments.
 FIGS. 12A-12D are flow diagrams illustrating a method of adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection in accordance with some embodiments.
 FIG. 13 is a functional block diagram of an electronic device in accordance with some embodiments.

DESCRIPTION OF EMBODIMENTS
The methods, devices and GUIs described herein provide visual and/or haptic feedback that makes manipulation of user interface objects more efficient and intuitive for a user. For example, in a system where the clicking action of a trackpad is decoupled from the contact intensity (e.g., contact force, contact pressure, or a substitute therefore) that is needed to reach an activation threshold, the device can generate different tactile outputs (e.g., âdifferent clicksâ) for different activation events (e.g., so that clicks that accomplish a particular result are differentiated from clicks that do not produce any result or that accomplish a different result from the particular result). Additionally, tactile outputs can be generated in response to other events that are not related to increasing intensity of a contact, such as generating a tactile output (e.g., a âdetentâ) when a user interface object is moved to a particular position, boundary or orientation, or when an event occurs at the device.
Additionally, in a system where a trackpad or touch-screen display is sensitive to a range of contact intensity that includes more than one or two specific intensity values (e.g., more than a simple on/off, binary intensity determination), the user interface can provide responses (e.g., visual or tactile cues) that are indicative of the intensity of the contact within the range. In some implementations, a pre-activation-threshold response and/or a post-activation-threshold response to an input are displayed as continuous animations. As one example of such a response, a preview of an operation is displayed in response to detecting an increase in contact intensity that is still below an activation threshold for performing the operation. As another example of such a response, an animation associated with an operation continues even after the activation threshold for the operation has been reached. Both of these examples provide a user with a continuous response to the force or pressure of a user's contact, which provides a user with visual and/or haptic feedback that is richer and more intuitive. More specifically, such continuous force responses give the user the experience of being able to press lightly to preview an operation and/or press deeply to push âpastâ or âthroughâ a predefined user interface state corresponding to the operation.
Additionally, for a device with a touch-sensitive surface that is sensitive to a range of contact intensity, multiple contact intensity thresholds can be monitored by the device and different functions can be mapped to different contact intensity thresholds. This serves to increase the available âgesture spaceâ providing easy access to advanced features for users who know that increasing the intensity of a contact at or beyond a second âdeep pressâ intensity threshold will cause the device to perform a different operation from an operation that would be performed if the intensity of the contact is between a first âactivationâ intensity threshold and the second âdeep pressâ intensity threshold. An advantage of assigning additional functionality to a second âdeep pressâ intensity threshold while maintaining familiar functionality at a first âactivationâ intensity threshold is that inexperienced users who are, in some circumstances, confused by the additional functionality can use the familiar functionality by just applying an intensity up to the first âactivationâ intensity threshold, whereas more experienced users can take advantage of the additional functionality by applying an intensity at the second âdeep pressâ intensity threshold.
Additionally, for a device with a touch-sensitive surface that is sensitive to a range of contact intensity, the device can provide additional functionality by allowing users to perform complex operations with a single continuous contact. For example, when selecting a group of objects, a user can move a continuous contact around the touch-sensitive surface and can press while dragging (e.g., applying an intensity greater than a âdeep pressâ intensity threshold) to add additional elements to a selection. In this way, a user can intuitively interact with a user interface where pressing harder with a contact causes objects in the user interface to be âstickier.â
A number of different approaches to providing an intuitive user interface on a device where a clicking action is decoupled from the force that is needed to reach an activation threshold and/or the device is sensitive to a wide range of contact intensities are described below. Using one or more of these approaches (optionally in conjunction with each other) helps to provide a user interface that intuitively provides users with additional information and functionality, thereby reducing the user's cognitive burden and improving the human-machine interface. Such improvements in the human-machine interface enable users to use the device faster and more efficiently. For battery-operated devices, these improvements conserve power and increase the time between battery charges. For ease of explanation, systems, methods and user interfaces for including illustrative examples of some of these approaches are described below, as follows:
    Many electronic devices sense a pressure of a user input. For example, a device with a pressure sensitive button determines an amount that the button is depressed by the user based on a pressure measurement of a pressure sensor integrated with the button. However, such methods do not provide a way to estimate the intensity of multiple different simultaneously detected contacts and thus do not provide a way to interact with an intensity sensitive user interface with multiple contacts. The device improves on these methods by assigning a first portion of an aggregate intensity (e.g., a sum of intensity measurements received from each intensity sensor of a plurality of intensity sensors) of a plurality of contacts on a touch-sensitive surface to a first contact of the plurality of contacts and by assigning a second portion of the aggregate intensity to a second contact of the plurality of contacts, while detecting the plurality of contacts on the touch-sensitive surface, thereby enabling the device to estimate intensity of multiple simultaneously detected contacts and use this information to control convenient and efficient user interfaces. In particular, FIGS. 5A-5L illustrate exemplary user interfaces and contacts with a touch-sensitive surface that are assigned respective portions of an aggregate intensity to a plurality of contacts. FIGS. 6A-6C are flow diagrams illustrating a method of assigning respective portions of an aggregate intensity to a plurality of contacts. The depictions in FIGS. 5A-5L are used to illustrate the processes in FIGS. 6A-6C. Many electronic devices have graphical user interfaces that include various user interface objects that are controlled in accordance with input-output relationships between inputs and corresponding outputs. In some situations there is a constant input-output relationship between inputs and corresponding outputs. However, a constant input-output relationship can be distracting an inefficient for a user when there is a particular range of outputs that the user is likely to want to achieve. A simplistic variable input-output relationship can also be confusing and disconcerting to a user if the user notices discontinuities in the input-output relationship. The embodiments described below provide an efficient and intuitive way of transitioning between touch input to display output relationships when interacting with user interface objects, thereby enabling the device to control convenient and efficient user interfaces. In particular, FIGS. 8A-8V illustrate exemplary user interfaces for transitioning between touch input to display output relationships using inputs on a touch-sensitive surface. FIGS. 9A-9C are flow diagrams illustrating a method of transitioning between touch input to display output relationships using inputs on a touch-sensitive surface. The user interfaces in FIGS. 8A-8V are further used to illustrate the processes described below with reference to FIGS. 9A-9C. Many electronic devices have touch-sensitive surfaces. The touch-sensitive surfaces optionally utilizes multiple intensity sensors and have a maximum intensity detection threshold that varies with location on the touch-sensitive surface. This variation in maximum intensity detection threshold can be addressed by using a uniform maximum intensity detection threshold for the whole touch-sensitive surface that is a lowest common denominator maximum intensity detection threshold. However, this approach keeps the device from being used to its full potential and thus provides a less efficient and less effective user interface. The embodiments described below improve on these methods by dynamically adjusting input-output relationships to take advantage of maximum intensity detection thresholds that are higher than the maximum intensity thresholds on the least sensitive portions of the touch-sensitive surface. The embodiments described below provide an efficient and intuitive way of adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection, thereby enabling the device to control convenient and efficient user interfaces. In particular, FIGS. 11B-11U illustrate exemplary user interfaces for adjusting outputs with changes in contact intensity (e.g., corresponding to inputs on a touch-sensitive surface) and varying dynamic range of intensity detection in accordance with some embodiments. FIGS. 12A-12D are flow diagrams illustrating a method of adjusting outputs with changes in contact intensity (e.g., corresponding to inputs on a touch-sensitive surface) and varying dynamic range of intensity detection in accordance with some embodiments. The user interfaces in FIGS. 11B-11U are further used to illustrate the processes described below with reference to FIGS. 12A-12D.   
Exemplary Devices
Reference will now be made in detail to embodiments, examples of which are illustrated in the accompanying drawings. In the following detailed description, numerous specific details are set forth in order to provide a thorough understanding of the various described embodiments. However, it will be apparent to one of ordinary skill in the art that the various described embodiments may be practiced without these specific details. In other instances, well-known methods, procedures, components, circuits, and networks have not been described in detail so as not to unnecessarily obscure aspects of the embodiments.
It will also be understood that, although the terms first, second, etc. are, in some instances, used herein to describe various elements, these elements should not be limited by these terms. These terms are only used to distinguish one element from another. For example, a first contact could be termed a second contact, and, similarly, a second contact could be termed a first contact, without departing from the scope of the various described embodiments. The first contact and the second contact are both contacts, but they are not the same contact.
The terminology used in the description of the various described embodiments herein is for the purpose of describing particular embodiments only and is not intended to be limiting. As used in the description of the various described embodiments and the appended claims, the singular forms âaâ, âanâ and âtheâ are intended to include the plural forms as well, unless the context clearly indicates otherwise. It will also be understood that the term âand/orâ as used herein refers to and encompasses any and all possible combinations of one or more of the associated listed items. It will be further understood that the terms âincludes,â âincluding,â âcomprises,â and/or âcomprising,â when used in this specification, specify the presence of stated features, integers, steps, operations, elements, and/or components, but do not preclude the presence or addition of one or more other features, integers, steps, operations, elements, components, and/or groups thereof.
As used herein, the term âifâ is, optionally, construed to mean âwhenâ or âuponâ or âin response to determiningâ or âin response to detecting,â depending on the context. Similarly, the phrase âif it is determinedâ or âif [a stated condition or event] is detectedâ is, optionally, construed to mean âupon determiningâ or âin response to determiningâ or âupon detecting [the stated condition or event]â or âin response to detecting [the stated condition or event],â depending on the context.
Embodiments of electronic devices, user interfaces for such devices, and associated processes for using such devices are described. In some embodiments, the device is a portable communications device, such as a mobile telephone, that also contains other functions, such as PDA and/or music player functions. Exemplary embodiments of portable multifunction devices include, without limitation, the iPhoneÂ®, iPod TouchÂ®, and iPadÂ® devices from Apple Inc. of Cupertino, Calif. Other portable electronic devices, such as laptops or tablet computers with touch-sensitive surfaces (e.g., touch screen displays and/or touch pads), are, optionally, used. It should also be understood that, in some embodiments, the device is not a portable communications device, but is a desktop computer with a touch-sensitive surface (e.g., a touch screen display and/or a touch pad).
In the discussion that follows, an electronic device that includes a display and a touch-sensitive surface is described. It should be understood, however, that the electronic device optionally includes one or more other physical user-interface devices, such as a physical keyboard, a mouse and/or a joystick.
The device typically supports a variety of applications, such as one or more of the following: a drawing application, a presentation application, a word processing application, a website creation application, a disk authoring application, a spreadsheet application, a gaming application, a telephone application, a video conferencing application, an e-mail application, an instant messaging application, a workout support application, a photo management application, a digital camera application, a digital video camera application, a web browsing application, a digital music player application, and/or a digital video player application.
The various applications that are executed on the device optionally use at least one common physical user-interface device, such as the touch-sensitive surface. One or more functions of the touch-sensitive surface as well as corresponding information displayed on the device are, optionally, adjusted and/or varied from one application to the next and/or within a respective application. In this way, a common physical architecture (such as the touch-sensitive surface) of the device optionally supports the variety of applications with user interfaces that are intuitive and transparent to the user.
Attention is now directed toward embodiments of portable devices with touch-sensitive displays. FIG. 1A is a block diagram illustrating portable multifunction device 100 with touch-sensitive displays 112 in accordance with some embodiments. Touch-sensitive display 112 is sometimes called a âtouch screenâ for convenience, and is sometimes known as or called a touch-sensitive display system. Device 100 includes memory 102 (which optionally includes one or more computer readable storage mediums), memory controller 122, one or more processing units (CPU's) 120, peripherals interface 118, RF circuitry 108, audio circuitry 110, speaker 111, microphone 113, input/output (I/O) subsystem 106, other input or control devices 116, and external port 124. Device 100 optionally includes one or more optical sensors 164. Device 100 optionally includes one or more intensity sensors 165 for detecting intensity of contacts on device 100 (e.g., a touch-sensitive surface such as touch-sensitive display system 112 of device 100). Device 100 optionally includes one or more tactile output generators 167 for generating tactile outputs on device 100 (e.g., generating tactile outputs on a touch-sensitive surface such as touch-sensitive display system 112 of device 100 or touchpad 355 of device 300). These components optionally communicate over one or more communication buses or signal lines 103.
As used in the specification and claims, the term âintensityâ of a contact on a touch-sensitive surface refers to the force or pressure (force per unit area) of a contact (e.g., a finger contact) on the touch sensitive surface, or to a substitute (proxy) for the force or pressure of a contact on the touch sensitive surface. The intensity of a contact has a range of values that includes at least four distinct values and more typically includes hundreds of distinct values (e.g., at least 256). Intensity of a contact is, optionally, determined (or measured) using various approaches and various sensors or combinations of sensors. For example, one or more force sensors underneath or adjacent to the touch-sensitive surface are, optionally, used to measure force at various points on the touch-sensitive surface. In some implementations, force measurements from multiple force sensors are combined (e.g., a weighted average) to determine an estimated force of a contact. Similarly, a pressure-sensitive tip of a stylus is, optionally, used to determine a pressure of the stylus on the touch-sensitive surface. Alternatively, the size of the contact area detected on the touch-sensitive surface and/or changes thereto, the capacitance of the touch-sensitive surface proximate to the contact and/or changes thereto, and/or the resistance of the touch-sensitive surface proximate to the contact and/or changes thereto are, optionally, used as a substitute for the force or pressure of the contact on the touch-sensitive surface. In some implementations, the substitute measurements for contact force or pressure are used directly to determine whether an intensity threshold has been exceeded (e.g., the intensity threshold is described in units corresponding to the substitute measurements). In some implementations, the substitute measurements for contact force or pressure are converted to an estimated force or pressure and the estimated force or pressure is used to determine whether an intensity threshold has been exceeded (e.g., the intensity threshold is a pressure threshold measured in units of pressure).
As used in the specification and claims, the term âtactile outputâ refers to physical displacement of a device relative to a previous position of the device, physical displacement of a component (e.g., a touch-sensitive surface) of a device relative to another component (e.g., housing) of the device, or displacement of the component relative to a center of mass of the device that will be detected by a user with the user's sense of touch. For example, in situations where the device or the component of the device is in contact with a surface of a user that is sensitive to touch (e.g., a finger, palm, or other part of a user's hand), the tactile output generated by the physical displacement will be interpreted by the user as a tactile sensation corresponding to a perceived change in physical characteristics of the device or the component of the device. For example, movement of a touch-sensitive surface (e.g., a touch-sensitive display or trackpad) is, optionally, interpreted by the user as a âdown clickâ or âup clickâ of a physical actuator button. In some cases, a user will feel a tactile sensation such as an âdown clickâ or âup clickâ even when there is no movement of a physical actuator button associated with the touch-sensitive surface that is physically pressed (e.g., displaced) by the user's movements. As another example, movement of the touch-sensitive surface is, optionally, interpreted or sensed by the user as âroughnessâ of the touch-sensitive surface, even when there is no change in smoothness of the touch-sensitive surface. While such interpretations of touch by a user will be subject to the individualized sensory perceptions of the user, there are many sensory perceptions of touch that are common to a large majority of users. Thus, when a tactile output is described as corresponding to a particular sensory perception of a user (e.g., an âup click,â a âdown click,â âroughnessâ), unless otherwise stated, the generated tactile output corresponds to physical displacement of the device or a component thereof that will generate the described sensory perception for a typical (or average) user.
It should be appreciated that device 100 is only one example of a portable multifunction device, and that device 100 optionally has more or fewer components than shown, optionally combines two or more components, or optionally has a different configuration or arrangement of the components. The various components shown in FIG. 1A are implemented in hardware, software, or a combination of both hardware and software, including one or more signal processing and/or application specific integrated circuits.
Memory 102 optionally includes high-speed random access memory and optionally also includes non-volatile memory, such as one or more magnetic disk storage devices, flash memory devices, or other non-volatile solid-state memory devices. Access to memory 102 by other components of device 100, such as CPU 120 and the peripherals interface 118, is, optionally, controlled by memory controller 122.
Peripherals interface 118 can be used to couple input and output peripherals of the device to CPU 120 and memory 102. The one or more processors 120 run or execute various software programs and/or sets of instructions stored in memory 102 to perform various functions for device 100 and to process data.
In some embodiments, peripherals interface 118, CPU 120, and memory controller 122 are, optionally, implemented on a single chip, such as chip 104. In some other embodiments, they are, optionally, implemented on separate chips.
RF (radio frequency) circuitry 108 receives and sends RF signals, also called electromagnetic signals. RF circuitry 108 converts electrical signals to/from electromagnetic signals and communicates with communications networks and other communications devices via the electromagnetic signals. RF circuitry 108 optionally includes well-known circuitry for performing these functions, including but not limited to an antenna system, an RF transceiver, one or more amplifiers, a tuner, one or more oscillators, a digital signal processor, a CODEC chipset, a subscriber identity module (SIM) card, memory, and so forth. RF circuitry 108 optionally communicates with networks, such as the Internet, also referred to as the World Wide Web (WWW), an intranet and/or a wireless network, such as a cellular telephone network, a wireless local area network (LAN) and/or a metropolitan area network (MAN), and other devices by wireless communication. The wireless communication optionally uses any of a plurality of communications standards, protocols and technologies, including but not limited to Global System for Mobile Communications (GSM), Enhanced Data GSM Environment (EDGE), high-speed downlink packet access (HSDPA), high-speed uplink packet access (HSDPA), Evolution, Data-Only (EV-DO), HSPA, HSPA+, Dual-Cell HSPA (DC-HSPDA), long term evolution (LTE), near field communication (NFC), wideband code division multiple access (W-CDMA), code division multiple access (CDMA), time division multiple access (TDMA), Bluetooth, Wireless Fidelity (Wi-Fi) (e.g., IEEE 802.11a, IEEE 802.11b, IEEE 802.11g and/or IEEE 802.11n), voice over Internet Protocol (VoIP), Wi-MAX, a protocol for e-mail (e.g., Internet message access protocol (IMAP) and/or post office protocol (POP)), instant messaging (e.g., extensible messaging and presence protocol (XMPP), Session Initiation Protocol for Instant Messaging and Presence Leveraging Extensions (SIMPLE), Instant Messaging and Presence Service (IMPS)), and/or Short Message Service (SMS), or any other suitable communication protocol, including communication protocols not yet developed as of the filing date of this document.
Audio circuitry 110, speaker 111, and microphone 113 provide an audio interface between a user and device 100. Audio circuitry 110 receives audio data from peripherals interface 118, converts the audio data to an electrical signal, and transmits the electrical signal to speaker 111. Speaker 111 converts the electrical signal to human-audible sound waves. Audio circuitry 110 also receives electrical signals converted by microphone 113 from sound waves. Audio circuitry 110 converts the electrical signal to audio data and transmits the audio data to peripherals interface 118 for processing. Audio data is, optionally, retrieved from and/or transmitted to memory 102 and/or RF circuitry 108 by peripherals interface 118. In some embodiments, audio circuitry 110 also includes a headset jack (e.g., 212, FIG. 2). The headset jack provides an interface between audio circuitry 110 and removable audio input/output peripherals, such as output-only headphones or a headset with both output (e.g., a headphone for one or both ears) and input (e.g., a microphone).
I/O subsystem 106 couples input/output peripherals on device 100, such as touch screen 112 and other input control devices 116, to peripherals interface 118. I/O subsystem 106 optionally includes display controller 156, optical sensor controller 158, intensity sensor controller 159, haptic feedback controller 161 and one or more input controllers 160 for other input or control devices. The one or more input controllers 160 receive/send electrical signals from/to other input or control devices 116. The other input control devices 116 optionally include physical buttons (e.g., push buttons, rocker buttons, etc.), dials, slider switches, joysticks, click wheels, and so forth. In some alternate embodiments, input controller(s) 160 are, optionally, coupled to any (or none) of the following: a keyboard, infrared port, USB port, and a pointer device such as a mouse. The one or more buttons (e.g., 208, FIG. 2) optionally include an up/down button for volume control of speaker 111 and/or microphone 113. The one or more buttons optionally include a push button (e.g., 206, FIG. 2).
Touch-sensitive display 112 provides an input interface and an output interface between the device and a user. Display controller 156 receives and/or sends electrical signals from/to touch screen 112. Touch screen 112 displays visual output to the user. The visual output optionally includes graphics, text, icons, video, and any combination thereof (collectively termed âgraphicsâ). In some embodiments, some or all of the visual output corresponds to user-interface objects.
Touch screen 112 has a touch-sensitive surface, sensor or set of sensors that accepts input from the user based on haptic and/or tactile contact. Touch screen 112 and display controller 156 (along with any associated modules and/or sets of instructions in memory 102) detect contact (and any movement or breaking of the contact) on touch screen 112 and converts the detected contact into interaction with user-interface objects (e.g., one or more soft keys, icons, web pages or images) that are displayed on touch screen 112. In an exemplary embodiment, a point of contact between touch screen 112 and the user corresponds to a finger of the user.
Touch screen 112 optionally uses LCD (liquid crystal display) technology, LPD (light emitting polymer display) technology, or LED (light emitting diode) technology, although other display technologies are used in other embodiments. Touch screen 112 and display controller 156 optionally detect contact and any movement or breaking thereof using any of a plurality of touch sensing technologies now known or later developed, including but not limited to capacitive, resistive, infrared, and surface acoustic wave technologies, as well as other proximity sensor arrays or other elements for determining one or more points of contact with touch screen 112. In an exemplary embodiment, projected mutual capacitance sensing technology is used, such as that found in the iPhoneÂ®, iPod TouchÂ®, and iPadÂ® from Apple Inc. of Cupertino, Calif.
Touch screen 112 optionally has a video resolution in excess of 100 dpi. In some embodiments, the touch screen has a video resolution of approximately 160 dpi. The user optionally makes contact with touch screen 112 using any suitable object or appendage, such as a stylus, a finger, and so forth. In some embodiments, the user interface is designed to work primarily with finger-based contacts and gestures, which can be less precise than stylus-based input due to the larger area of contact of a finger on the touch screen. In some embodiments, the device translates the rough finger-based input into a precise pointer/cursor position or command for performing the actions desired by the user.
In some embodiments, in addition to the touch screen, device 100 optionally includes a touchpad (not shown) for activating or deactivating particular functions. In some embodiments, the touchpad is a touch-sensitive area of the device that, unlike the touch screen, does not display visual output. The touchpad is, optionally, a touch-sensitive surface that is separate from touch screen 112 or an extension of the touch-sensitive surface formed by the touch screen.
Device 100 also includes power system 162 for powering the various components. Power system 162 optionally includes a power management system, one or more power sources (e.g., battery, alternating current (AC)), a recharging system, a power failure detection circuit, a power converter or inverter, a power status indicator (e.g., a light-emitting diode (LED)) and any other components associated with the generation, management and distribution of power in portable devices.
Device 100 optionally also includes one or more optical sensors 164. FIG. 1A shows an optical sensor coupled to optical sensor controller 158 in I/O subsystem 106. Optical sensor 164 optionally includes charge-coupled device (CCD) or complementary metal-oxide semiconductor (CMOS) phototransistors. Optical sensor 164 receives light from the environment, projected through one or more lens, and converts the light to data representing an image. In conjunction with imaging module 143 (also called a camera module), optical sensor 164 optionally captures still images or video. In some embodiments, an optical sensor is located on the back of device 100, opposite touch screen display 112 on the front of the device, so that the touch screen display is enabled for use as a viewfinder for still and/or video image acquisition. In some embodiments, another optical sensor is located on the front of the device so that the user's image is, optionally, obtained for videoconferencing while the user views the other video conference participants on the touch screen display.
Device 100 optionally also includes one or more contact intensity sensors 165. FIG. 1A shows a contact intensity sensor coupled to intensity sensor controller 159 in I/O subsystem 106. Contact intensity sensor 165 optionally includes one or more piezoresistive strain gauges, capacitive force sensors, electric force sensors, piezoelectric force sensors, optical force sensors, capacitive touch-sensitive surfaces, or other intensity sensors (e.g., sensors used to measure the force (or pressure) of a contact on a touch-sensitive surface). Contact intensity sensor 165 receives contact intensity information (e.g., pressure information or a proxy for pressure information) from the environment. In some embodiments, at least one contact intensity sensor is collocated with, or proximate to, a touch-sensitive surface (e.g., touch-sensitive display system 112). In some embodiments, at least one contact intensity sensor is located on the back of device 100, opposite touch screen display 112 which is located on the front of device 100.
Device 100 optionally also includes one or more proximity sensors 166. FIG. 1A shows proximity sensor 166 coupled to peripherals interface 118. Alternately, proximity sensor 166 is coupled to input controller 160 in I/O subsystem 106. In some embodiments, the proximity sensor turns off and disables touch screen 112 when the multifunction device is placed near the user's ear (e.g., when the user is making a phone call).
Device 100 optionally also includes one or more tactile output generators 167. FIG. 1A shows a tactile output generator coupled to haptic feedback controller 161 in I/O subsystem 106. Tactile output generator 167 optionally includes one or more electroacoustic devices such as speakers or other audio components and/or electromechanical devices that convert energy into linear motion such as a motor, solenoid, electroactive polymer, piezoelectric actuator, electrostatic actuator, or other tactile output generating component (e.g., a component that converts electrical signals into tactile outputs on the device). Contact intensity sensor 165 receives tactile feedback generation instructions from haptic feedback module 133 and generates tactile outputs on device 100 that are capable of being sensed by a user of device 100. In some embodiments, at least one tactile output generator is collocated with, or proximate to, a touch-sensitive surface (e.g., touch-sensitive display system 112) and, optionally, generates a tactile output by moving the touch-sensitive surface vertically (e.g., in/out of a surface of device 100) or laterally (e.g., back and forth in the same plane as a surface of device 100). In some embodiments, at least one tactile output generator sensor is located on the back of device 100, opposite touch screen display 112 which is located on the front of device 100.
Device 100 optionally also includes one or more accelerometers 168. FIG. 1A shows accelerometer 168 coupled to peripherals interface 118. Alternately, accelerometer 168 is, optionally, coupled to an input controller 160 in I/O subsystem 106. In some embodiments, information is displayed on the touch screen display in a portrait view or a landscape view based on an analysis of data received from the one or more accelerometers. Device 100 optionally includes, in addition to accelerometer(s) 168, a magnetometer (not shown) and a GPS (or GLONASS or other global navigation system) receiver (not shown) for obtaining information concerning the location and orientation (e.g., portrait or landscape) of device 100.
In some embodiments, the software components stored in memory 102 include operating system 126, communication module (or set of instructions) 128, contact/motion module (or set of instructions) 130, graphics module (or set of instructions) 132, text input module (or set of instructions) 134, Global Positioning System (GPS) module (or set of instructions) 135, and applications (or sets of instructions) 136. Furthermore, in some embodiments memory 102 stores device/global internal state 157, as shown in FIGS. 1A and 3. Device/global internal state 157 includes one or more of: active application state, indicating which applications, if any, are currently active; display state, indicating what applications, views or other information occupy various regions of touch screen display 112; sensor state, including information obtained from the device's various sensors and input control devices 116; and location information concerning the device's location and/or attitude.
Operating system 126 (e.g., Darwin, RTXC, LINUX, UNIX, OS X, WINDOWS, or an embedded operating system such as VxWorks) includes various software components and/or drivers for controlling and managing general system tasks (e.g., memory management, storage device control, power management, etc.) and facilitates communication between various hardware and software components.
Communication module 128 facilitates communication with other devices over one or more external ports 124 and also includes various software components for handling data received by RF circuitry 108 and/or external port 124. External port 124 (e.g., Universal Serial Bus (USB), FIREWIRE, etc.) is adapted for coupling directly to other devices or indirectly over a network (e.g., the Internet, wireless LAN, etc.). In some embodiments, the external port is a multi-pin (e.g., 30-pin) connector that is the same as, or similar to and/or compatible with the 30-pin connector used on iPod (trademark of Apple Inc.) devices.
Contact/motion module 130 optionally detects contact with touch screen 112 (in conjunction with display controller 156) and other touch sensitive devices (e.g., a touchpad or physical click wheel). Contact/motion module 130 includes various software components for performing various operations related to detection of contact, such as determining if contact has occurred (e.g., detecting a finger-down event), determining an intensity of the contact (e.g., the force or pressure of the contact or a substitute for the force or pressure of the contact) determining if there is movement of the contact and tracking the movement across the touch-sensitive surface (e.g., detecting one or more finger-dragging events), and determining if the contact has ceased (e.g., detecting a finger-up event or a break in contact). Contact/motion module 130 receives contact data from the touch-sensitive surface. Determining movement of the point of contact, which is represented by a series of contact data, optionally includes determining speed (magnitude), velocity (magnitude and direction), and/or an acceleration (a change in magnitude and/or direction) of the point of contact. These operations are, optionally, applied to single contacts (e.g., one finger contacts) or to multiple simultaneous contacts (e.g., âmultitouchâ/multiple finger contacts). In some embodiments, contact/motion module 130 and display controller 156 detect contact on a touchpad.
In some embodiments, contact/motion module 130 uses a set of one or more intensity thresholds to determine whether an operation has been performed by a user (e.g., to determine whether a user has âclickedâ on an icon). In some embodiments at least a subset of the intensity thresholds are determined in accordance with software parameters (e.g., the intensity thresholds are not determined by the activation thresholds of particular physical actuators and can be adjusted without changing the physical hardware of device 100). For example, a mouse âclickâ threshold of a trackpad or touch screen display can be set to any of a large range of predefined thresholds values without changing the trackpad or touch screen display hardware. Additionally, in some implementations a user of the device is provided with software settings for adjusting one or more of the set of intensity thresholds (e.g., by adjusting individual intensity thresholds and/or by adjusting a plurality of intensity thresholds at once with a system-level click âintensityâ parameter).
Contact/motion module 130 optionally detects a gesture input by a user. Different gestures on the touch-sensitive surface have different contact patterns and intensities. Thus, a gesture is, optionally, detected by detecting a particular contact pattern. For example, detecting a finger tap gesture includes detecting a finger-down event followed by detecting a finger-up (lift off) event at the same position (or substantially the same position) as the finger-down event (e.g., at the position of an icon). As another example, detecting a finger swipe gesture on the touch-sensitive surface includes detecting a finger-down event followed by detecting one or more finger-dragging events, and subsequently followed by detecting a finger-up (lift off) event.
Graphics module 132 includes various known software components for rendering and displaying graphics on touch screen 112 or other display, including components for changing the visual impact (e.g., brightness, transparency, saturation, contrast or other visual property) of graphics that are displayed. As used herein, the term âgraphicsâ includes any object that can be displayed to a user, including without limitation text, web pages, icons (such as user-interface objects including soft keys), digital images, videos, animations and the like.
In some embodiments, graphics module 132 stores data representing graphics to be used. Each graphic is, optionally, assigned a corresponding code. Graphics module 132 receives, from applications etc., one or more codes specifying graphics to be displayed along with, if necessary, coordinate data and other graphic property data, and then generates screen image data to output to display controller 156.
Haptic feedback module 133 includes various software components for generating instructions used by tactile output generator(s) 167 to produce tactile outputs at one or more locations on device 100 in response to user interactions with device 100.
Text input module 134, which is, optionally, a component of graphics module 132, provides soft keyboards for entering text in various applications (e.g., contacts 137, e-mail 140, IM 141, browser 147, and any other application that needs text input).
GPS module 135 determines the location of the device and provides this information for use in various applications (e.g., to telephone 138 for use in location-based dialing, to camera 143 as picture/video metadata, and to applications that provide location-based services such as weather widgets, local yellow page widgets, and map/navigation widgets).
Applications 136 optionally include the following modules (or sets of instructions), or a subset or superset thereof:
    contacts module 137 (sometimes called an address book or contact list); telephone module 138; video conferencing module 139; e-mail client module 140; instant messaging (IM) module 141; workout support module 142; camera module 143 for still and/or video images; image management module 144; browser module 147; calendar module 148; widget modules 149, which optionally include one or more of: weather widget 149-1, stocks widget 149-2, calculator widget 149-3, alarm clock widget 149-4, dictionary widget 149-5, and other widgets obtained by the user, as well as user-created widgets 149-6; widget creator module 150 for making user-created widgets 149-6; search module 151; video and music player module 152, which is, optionally, made up of a video player module and a music player module; notes module 153; map module 154; and/or online video module 155.   
Examples of other applications 136 that are, optionally, stored in memory 102 include other word processing applications, other image editing applications, drawing applications, presentation applications, JAVA-enabled applications, encryption, digital rights management, voice recognition, and voice replication.
In conjunction with touch screen 112, display controller 156, contact module 130, graphics module 132, and text input module 134, contacts module 137 are, optionally, used to manage an address book or contact list (e.g., stored in application internal state 192 of contacts module 137 in memory 102 or memory 370), including: adding name(s) to the address book; deleting name(s) from the address book; associating telephone number(s), e-mail address(es), physical address(es) or other information with a name; associating an image with a name; categorizing and sorting names; providing telephone numbers or e-mail addresses to initiate and/or facilitate communications by telephone 138, video conference 139, e-mail 140, or IM 141; and so forth.
In conjunction with RF circuitry 108, audio circuitry 110, speaker 111, microphone 113, touch screen 112, display controller 156, contact module 130, graphics module 132, and text input module 134, telephone module 138 are, optionally, used to enter a sequence of characters corresponding to a telephone number, access one or more telephone numbers in address book 137, modify a telephone number that has been entered, dial a respective telephone number, conduct a conversation and disconnect or hang up when the conversation is completed. As noted above, the wireless communication optionally uses any of a plurality of communications standards, protocols and technologies.
In conjunction with RF circuitry 108, audio circuitry 110, speaker 111, microphone 113, touch screen 112, display controller 156, optical sensor 164, optical sensor controller 158, contact module 130, graphics module 132, text input module 134, contact list 137, and telephone module 138, videoconferencing module 139 includes executable instructions to initiate, conduct, and terminate a video conference between a user and one or more other participants in accordance with user instructions.
In conjunction with RF circuitry 108, touch screen 112, display controller 156, contact module 130, graphics module 132, and text input module 134, e-mail client module 140 includes executable instructions to create, send, receive, and manage e-mail in response to user instructions. In conjunction with image management module 144, e-mail client module 140 makes it very easy to create and send e-mails with still or video images taken with camera module 143.
In conjunction with RF circuitry 108, touch screen 112, display controller 156, contact module 130, graphics module 132, and text input module 134, the instant messaging module 141 includes executable instructions to enter a sequence of characters corresponding to an instant message, to modify previously entered characters, to transmit a respective instant message (for example, using a Short Message Service (SMS) or Multimedia Message Service (MMS) protocol for telephony-based instant messages or using XMPP, SIMPLE, or IMPS for Internet-based instant messages), to receive instant messages and to view received instant messages. In some embodiments, transmitted and/or received instant messages optionally include graphics, photos, audio files, video files and/or other attachments as are supported in a MMS and/or an Enhanced Messaging Service (EMS). As used herein, âinstant messagingâ refers to both telephony-based messages (e.g., messages sent using SMS or MMS) and Internet-based messages (e.g., messages sent using XMPP, SIMPLE, or IMPS).
In conjunction with RF circuitry 108, touch screen 112, display controller 156, contact module 130, graphics module 132, text input module 134, GPS module 135, map module 154, and music player module 146, workout support module 142 includes executable instructions to create workouts (e.g., with time, distance, and/or calorie burning goals); communicate with workout sensors (sports devices); receive workout sensor data; calibrate sensors used to monitor a workout; select and play music for a workout; and display, store and transmit workout data.
In conjunction with touch screen 112, display controller 156, optical sensor(s) 164, optical sensor controller 158, contact module 130, graphics module 132, and image management module 144, camera module 143 includes executable instructions to capture still images or video (including a video stream) and store them into memory 102, modify characteristics of a still image or video, or delete a still image or video from memory 102.
In conjunction with touch screen 112, display controller 156, contact module 130, graphics module 132, text input module 134, and camera module 143, image management module 144 includes executable instructions to arrange, modify (e.g., edit), or otherwise manipulate, label, delete, present (e.g., in a digital slide show or album), and store still and/or video images.
In conjunction with RF circuitry 108, touch screen 112, display system controller 156, contact module 130, graphics module 132, and text input module 134, browser module 147 includes executable instructions to browse the Internet in accordance with user instructions, including searching, linking to, receiving, and displaying web pages or portions thereof, as well as attachments and other files linked to web pages.
In conjunction with RF circuitry 108, touch screen 112, display system controller 156, contact module 130, graphics module 132, text input module 134, e-mail client module 140, and browser module 147, calendar module 148 includes executable instructions to create, display, modify, and store calendars and data associated with calendars (e.g., calendar entries, to do lists, etc.) in accordance with user instructions.
In conjunction with RF circuitry 108, touch screen 112, display system controller 156, contact module 130, graphics module 132, text input module 134, and browser module 147, widget modules 149 are mini-applications that are, optionally, downloaded and used by a user (e.g., weather widget 149-1, stocks widget 149-2, calculator widget 149-3, alarm clock widget 149-4, and dictionary widget 149-5) or created by the user (e.g., user-created widget 149-6). In some embodiments, a widget includes an HTML (Hypertext Markup Language) file, a CSS (Cascading Style Sheets) file, and a JavaScript file. In some embodiments, a widget includes an XML (Extensible Markup Language) file and a JavaScript file (e.g., Yahoo! Widgets).
In conjunction with RF circuitry 108, touch screen 112, display system controller 156, contact module 130, graphics module 132, text input module 134, and browser module 147, the widget creator module 150 are, optionally, used by a user to create widgets (e.g., turning a user-specified portion of a web page into a widget).
In conjunction with touch screen 112, display system controller 156, contact module 130, graphics module 132, and text input module 134, search module 151 includes executable instructions to search for text, music, sound, image, video, and/or other files in memory 102 that match one or more search criteria (e.g., one or more user-specified search terms) in accordance with user instructions.
In conjunction with touch screen 112, display system controller 156, contact module 130, graphics module 132, audio circuitry 110, speaker 111, RF circuitry 108, and browser module 147, video and music player module 152 includes executable instructions that allow the user to download and play back recorded music and other sound files stored in one or more file formats, such as MP3 or AAC files, and executable instructions to display, present or otherwise play back videos (e.g., on touch screen 112 or on an external, connected display via external port 124). In some embodiments, device 100 optionally includes the functionality of an MP3 player, such as an iPod (trademark of Apple Inc.).
In conjunction with touch screen 112, display controller 156, contact module 130, graphics module 132, and text input module 134, notes module 153 includes executable instructions to create and manage notes, to do lists, and the like in accordance with user instructions.
In conjunction with RF circuitry 108, touch screen 112, display system controller 156, contact module 130, graphics module 132, text input module 134, GPS module 135, and browser module 147, map module 154 are, optionally, used to receive, display, modify, and store maps and data associated with maps (e.g., driving directions; data on stores and other points of interest at or near a particular location; and other location-based data) in accordance with user instructions.
In conjunction with touch screen 112, display system controller 156, contact module 130, graphics module 132, audio circuitry 110, speaker 111, RF circuitry 108, text input module 134, e-mail client module 140, and browser module 147, online video module 155 includes instructions that allow the user to access, browse, receive (e.g., by streaming and/or download), play back (e.g., on the touch screen or on an external, connected display via external port 124), send an e-mail with a link to a particular online video, and otherwise manage online videos in one or more file formats, such as H.264. In some embodiments, instant messaging module 141, rather than e-mail client module 140, is used to send a link to a particular online video.
Each of the above identified modules and applications correspond to a set of executable instructions for performing one or more functions described above and the methods described in this application (e.g., the computer-implemented methods and other information processing methods described herein). These modules (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules are, optionally, combined or otherwise re-arranged in various embodiments. In some embodiments, memory 102 optionally stores a subset of the modules and data structures identified above. Furthermore, memory 102 optionally stores additional modules and data structures not described above.
In some embodiments, device 100 is a device where operation of a predefined set of functions on the device is performed exclusively through a touch screen and/or a touchpad. By using a touch screen and/or a touchpad as the primary input control device for operation of device 100, the number of physical input control devices (such as push buttons, dials, and the like) on device 100 is, optionally, reduced.
The predefined set of functions that are performed exclusively through a touch screen and/or a touchpad optionally include navigation between user interfaces. In some embodiments, the touchpad, when touched by the user, navigates device 100 to a main, home, or root menu from any user interface that is displayed on device 100. In such embodiments, a âmenu buttonâ is implemented using a touchpad. In some other embodiments, the menu button is a physical push button or other physical input control device instead of a touchpad.
 FIG. 1B is a block diagram illustrating exemplary components for event handling in accordance with some embodiments. In some embodiments, memory 102 (in FIG. 1A) or 370 (FIG. 3) includes event sorter 170 (e.g., in operating system 126) and a respective application 136-1 (e.g., any of the aforementioned applications 137-151, 155, 380-390).
Event sorter 170 receives event information and determines the application 136-1 and application view 191 of application 136-1 to which to deliver the event information. Event sorter 170 includes event monitor 171 and event dispatcher module 174. In some embodiments, application 136-1 includes application internal state 192, which indicates the current application view(s) displayed on touch sensitive display 112 when the application is active or executing. In some embodiments, device/global internal state 157 is used by event sorter 170 to determine which application(s) is (are) currently active, and application internal state 192 is used by event sorter 170 to determine application views 191 to which to deliver event information.
In some embodiments, application internal state 192 includes additional information, such as one or more of: resume information to be used when application 136-1 resumes execution, user interface state information that indicates information being displayed or that is ready for display by application 136-1, a state queue for enabling the user to go back to a prior state or view of application 136-1, and a redo/undo queue of previous actions taken by the user.
Event monitor 171 receives event information from peripherals interface 118. Event information includes information about a sub-event (e.g., a user touch on touch-sensitive display 112, as part of a multi-touch gesture). Peripherals interface 118 transmits information it receives from I/O subsystem 106 or a sensor, such as proximity sensor 166, accelerometer(s) 168, and/or microphone 113 (through audio circuitry 110). Information that peripherals interface 118 receives from I/O subsystem 106 includes information from touch-sensitive display 112 or a touch-sensitive surface.
In some embodiments, event monitor 171 sends requests to the peripherals interface 118 at predetermined intervals. In response, peripherals interface 118 transmits event information. In other embodiments, peripheral interface 118 transmits event information only when there is a significant event (e.g., receiving an input above a predetermined noise threshold and/or for more than a predetermined duration).
In some embodiments, event sorter 170 also includes a hit view determination module 172 and/or an active event recognizer determination module 173.
Hit view determination module 172 provides software procedures for determining where a sub-event has taken place within one or more views, when touch sensitive display 112 displays more than one view. Views are made up of controls and other elements that a user can see on the display.
Another aspect of the user interface associated with an application is a set of views, sometimes herein called application views or user interface windows, in which information is displayed and touch-based gestures occur. The application views (of a respective application) in which a touch is detected optionally correspond to programmatic levels within a programmatic or view hierarchy of the application. For example, the lowest level view in which a touch is detected is, optionally, called the hit view, and the set of events that are recognized as proper inputs are, optionally, determined based, at least in part, on the hit view of the initial touch that begins a touch-based gesture.
Hit view determination module 172 receives information related to sub-events of a touch-based gesture. When an application has multiple views organized in a hierarchy, hit view determination module 172 identifies a hit view as the lowest view in the hierarchy which should handle the sub-event. In most circumstances, the hit view is the lowest level view in which an initiating sub-event occurs (i.e., the first sub-event in the sequence of sub-events that form an event or potential event). Once the hit view is identified by the hit view determination module, the hit view typically receives all sub-events related to the same touch or input source for which it was identified as the hit view.
Active event recognizer determination module 173 determines which view or views within a view hierarchy should receive a particular sequence of sub-events. In some embodiments, active event recognizer determination module 173 determines that only the hit view should receive a particular sequence of sub-events. In other embodiments, active event recognizer determination module 173 determines that all views that include the physical location of a sub-event are actively involved views, and therefore determines that all actively involved views should receive a particular sequence of sub-events. In other embodiments, even if touch sub-events were entirely confined to the area associated with one particular view, views higher in the hierarchy would still remain as actively involved views.
Event dispatcher module 174 dispatches the event information to an event recognizer (e.g., event recognizer 180). In embodiments including active event recognizer determination module 173, event dispatcher module 174 delivers the event information to an event recognizer determined by active event recognizer determination module 173. In some embodiments, event dispatcher module 174 stores in an event queue the event information, which is retrieved by a respective event receiver module 182.
In some embodiments, operating system 126 includes event sorter 170. Alternatively, application 136-1 includes event sorter 170. In yet other embodiments, event sorter 170 is a stand-alone module, or a part of another module stored in memory 102, such as contact/motion module 130.
In some embodiments, application 136-1 includes a plurality of event handlers 190 and one or more application views 191, each of which includes instructions for handling touch events that occur within a respective view of the application's user interface. Each application view 191 of the application 136-1 includes one or more event recognizers 180. Typically, a respective application view 191 includes a plurality of event recognizers 180. In other embodiments, one or more of event recognizers 180 are part of a separate module, such as a user interface kit (not shown) or a higher level object from which application 136-1 inherits methods and other properties. In some embodiments, a respective event handler 190 includes one or more of: data updater 176, object updater 177, GUI updater 178, and/or event data 179 received from event sorter 170. Event handler 190 optionally utilizes or calls data updater 176, object updater 177 or GUI updater 178 to update the application internal state 192. Alternatively, one or more of the application views 191 includes one or more respective event handlers 190. Also, in some embodiments, one or more of data updater 176, object updater 177, and GUI updater 178 are included in a respective application view 191.
A respective event recognizer 180 receives event information (e.g., event data 179) from event sorter 170, and identifies an event from the event information. Event recognizer 180 includes event receiver 182 and event comparator 184. In some embodiments, event recognizer 180 also includes at least a subset of: metadata 183, and event delivery instructions 188 (which optionally include sub-event delivery instructions).
Event receiver 182 receives event information from event sorter 170. The event information includes information about a sub-event, for example, a touch or a touch movement. Depending on the sub-event, the event information also includes additional information, such as location of the sub-event. When the sub-event concerns motion of a touch, the event information optionally also includes speed and direction of the sub-event. In some embodiments, events include rotation of the device from one orientation to another (e.g., from a portrait orientation to a landscape orientation, or vice versa), and the event information includes corresponding information about the current orientation (also called device attitude) of the device.
Event comparator 184 compares the event information to predefined event or sub-event definitions and, based on the comparison, determines an event or sub-event, or determines or updates the state of an event or sub-event. In some embodiments, event comparator 184 includes event definitions 186. Event definitions 186 contain definitions of events (e.g., predefined sequences of sub-events), for example, event 1 (187-1), event 2 (187-2), and others. In some embodiments, sub-events in an event 187 include, for example, touch begin, touch end, touch movement, touch cancellation, and multiple touching. In one example, the definition for event 1 (187-1) is a double tap on a displayed object. The double tap, for example, comprises a first touch (touch begin) on the displayed object for a predetermined phase, a first lift-off (touch end) for a predetermined phase, a second touch (touch begin) on the displayed object for a predetermined phase, and a second lift-off (touch end) for a predetermined phase. In another example, the definition for event 2 (187-2) is a dragging on a displayed object. The dragging, for example, comprises a touch (or contact) on the displayed object for a predetermined phase, a movement of the touch across touch-sensitive display 112, and lift-off of the touch (touch end). In some embodiments, the event also includes information for one or more associated event handlers 190.
In some embodiments, event definition 187 includes a definition of an event for a respective user-interface object. In some embodiments, event comparator 184 performs a hit test to determine which user-interface object is associated with a sub-event. For example, in an application view in which three user-interface objects are displayed on touch-sensitive display 112, when a touch is detected on touch-sensitive display 112, event comparator 184 performs a hit test to determine which of the three user-interface objects is associated with the touch (sub-event). If each displayed object is associated with a respective event handler 190, the event comparator uses the result of the hit test to determine which event handler 190 should be activated. For example, event comparator 184 selects an event handler associated with the sub-event and the object triggering the hit test.
In some embodiments, the definition for a respective event 187 also includes delayed actions that delay delivery of the event information until after it has been determined whether the sequence of sub-events does or does not correspond to the event recognizer's event type.
When a respective event recognizer 180 determines that the series of sub-events do not match any of the events in event definitions 186, the respective event recognizer 180 enters an event impossible, event failed, or event ended state, after which it disregards subsequent sub-events of the touch-based gesture. In this situation, other event recognizers, if any, that remain active for the hit view continue to track and process sub-events of an ongoing touch-based gesture.
In some embodiments, a respective event recognizer 180 includes metadata 183 with configurable properties, flags, and/or lists that indicate how the event delivery system should perform sub-event delivery to actively involved event recognizers. In some embodiments, metadata 183 includes configurable properties, flags, and/or lists that indicate how event recognizers interact, or are enabled to interact, with one another. In some embodiments, metadata 183 includes configurable properties, flags, and/or lists that indicate whether sub-events are delivered to varying levels in the view or programmatic hierarchy.
In some embodiments, a respective event recognizer 180 activates event handler 190 associated with an event when one or more particular sub-events of an event are recognized. In some embodiments, a respective event recognizer 180 delivers event information associated with the event to event handler 190. Activating an event handler 190 is distinct from sending (and deferred sending) sub-events to a respective hit view. In some embodiments, event recognizer 180 throws a flag associated with the recognized event, and event handler 190 associated with the flag catches the flag and performs a predefined process.
In some embodiments, event delivery instructions 188 include sub-event delivery instructions that deliver event information about a sub-event without activating an event handler. Instead, the sub-event delivery instructions deliver event information to event handlers associated with the series of sub-events or to actively involved views. Event handlers associated with the series of sub-events or with actively involved views receive the event information and perform a predetermined process.
In some embodiments, data updater 176 creates and updates data used in application 136-1. For example, data updater 176 updates the telephone number used in contacts module 137, or stores a video file used in video player module 145. In some embodiments, object updater 177 creates and updates objects used in application 136-1. For example, object updater 177 creates a new user-interface object or updates the position of a user-interface object. GUI updater 178 updates the GUI. For example, GUI updater 178 prepares display information and sends it to graphics module 132 for display on a touch-sensitive display.
In some embodiments, event handler(s) 190 includes or has access to data updater 176, object updater 177, and GUI updater 178. In some embodiments, data updater 176, object updater 177, and GUI updater 178 are included in a single module of a respective application 136-1 or application view 191. In other embodiments, they are included in two or more software modules.
It shall be understood that the foregoing discussion regarding event handling of user touches on touch-sensitive displays also applies to other forms of user inputs to operate multifunction devices 100 with input-devices, not all of which are initiated on touch screens. For example, mouse movement and mouse button presses, optionally coordinated with single or multiple keyboard presses or holds; contact movements such as taps, drags, scrolls, etc., on touch-pads; pen stylus inputs; movement of the device; oral instructions; detected eye movements; biometric inputs; and/or any combination thereof are optionally utilized as inputs corresponding to sub-events which define an event to be recognized.
 FIG. 2 illustrates a portable multifunction device 100 having a touch screen 112 in accordance with some embodiments. The touch screen optionally displays one or more graphics within user interface (UI) 200. In this embodiment, as well as others described below, a user is enabled to select one or more of the graphics by making a gesture on the graphics, for example, with one or more fingers 202 (not drawn to scale in the figure) or one or more styluses 203 (not drawn to scale in the figure). In some embodiments, selection of one or more graphics occurs when the user breaks contact with the one or more graphics. In some embodiments, the gesture optionally includes one or more taps, one or more swipes (from left to right, right to left, upward and/or downward) and/or a rolling of a finger (from right to left, left to right, upward and/or downward) that has made contact with device 100. In some implementations or circumstances, inadvertent contact with a graphic does not select the graphic. For example, a swipe gesture that sweeps over an application icon optionally does not select the corresponding application when the gesture corresponding to selection is a tap.
Device 100 optionally also includes one or more physical buttons, such as âhomeâ or menu button 204. As described previously, menu button 204 is, optionally, used to navigate to any application 136 in a set of applications that are, optionally executed on device 100. Alternatively, in some embodiments, the menu button is implemented as a soft key in a GUI displayed on touch screen 112.
In one embodiment, device 100 includes touch screen 112, menu button 204, push button 206 for powering the device on/off and locking the device, volume adjustment button(s) 208, Subscriber Identity Module (SIM) card slot 210, head set jack 212, and docking/charging external port 124. Push button 206 is, optionally, used to turn the power on/off on the device by depressing the button and holding the button in the depressed state for a predefined time interval; to lock the device by depressing the button and releasing the button before the predefined time interval has elapsed; and/or to unlock the device or initiate an unlock process. In an alternative embodiment, device 100 also accepts verbal input for activation or deactivation of some functions through microphone 113. Device 100 also, optionally, includes one or more contact intensity sensors 165 for detecting intensity of contacts on touch screen 112 and/or one or more tactile output generators 167 for generating tactile outputs for a user of device 100.
 FIG. 3 is a block diagram of an exemplary multifunction device with a display and a touch-sensitive surface in accordance with some embodiments. Device 300 need not be portable. In some embodiments, device 300 is a laptop computer, a desktop computer, a tablet computer, a multimedia player device, a navigation device, an educational device (such as a child's learning toy), a gaming system, or a control device (e.g., a home or industrial controller). Device 300 typically includes one or more processing units (CPU's) 310, one or more network or other communications interfaces 360, memory 370, and one or more communication buses 320 for interconnecting these components. Communication buses 320 optionally include circuitry (sometimes called a chipset) that interconnects and controls communications between system components. Device 300 includes input/output (I/O) interface 330 comprising display 340, which is typically a touch screen display. I/O interface 330 also optionally includes a keyboard and/or mouse (or other pointing device) 350 and touchpad 355, tactile output generator 357 for generating tactile outputs on device 300 (e.g., similar to tactile output generator(s) 167 described above with reference to FIG. 1A), sensors 359 (e.g., optical, acceleration, proximity, touch-sensitive, and/or contact intensity sensors similar to contact intensity sensor(s) 165 described above with reference to FIG. 1A). Memory 370 includes high-speed random access memory, such as DRAM, SRAM, DDR RAM or other random access solid state memory devices; and optionally includes non-volatile memory, such as one or more magnetic disk storage devices, optical disk storage devices, flash memory devices, or other non-volatile solid state storage devices. Memory 370 optionally includes one or more storage devices remotely located from CPU(s) 310. In some embodiments, memory 370 stores programs, modules, and data structures analogous to the programs, modules, and data structures stored in memory 102 of portable multifunction device 100 (FIG. 1A), or a subset thereof. Furthermore, memory 370 optionally stores additional programs, modules, and data structures not present in memory 102 of portable multifunction device 100. For example, memory 370 of device 300 optionally stores drawing module 380, presentation module 382, word processing module 384, website creation module 386, disk authoring module 388, and/or spreadsheet module 390, while memory 102 of portable multifunction device 100 (FIG. 1A) optionally does not store these modules.
Each of the above identified elements in FIG. 3 are, optionally, stored in one or more of the previously mentioned memory devices. Each of the above identified modules corresponds to a set of instructions for performing a function described above. The above identified modules or programs (i.e., sets of instructions) need not be implemented as separate software programs, procedures or modules, and thus various subsets of these modules are, optionally, combined or otherwise re-arranged in various embodiments. In some embodiments, memory 370 optionally stores a subset of the modules and data structures identified above. Furthermore, memory 370 optionally stores additional modules and data structures not described above.
Attention is now directed towards embodiments of user interfaces (âUIâ) that is, optionally, implemented on portable multifunction device 100.
 FIG. 4A illustrates an exemplary user interface for a menu of applications on portable multifunction device 100 in accordance with some embodiments. Similar user interfaces are, optionally, implemented on device 300. In some embodiments, user interface 400 includes the following elements, or a subset or superset thereof:
    Signal strength indicator(s) 402 for wireless communication(s), such as cellular and Wi-Fi signals; Time 404; Bluetooth indicator 405; Battery status indicator 406; Tray 408 with icons for frequently used applications, such as:
         Icon 416 for telephone module 138, labeled âPhone,â which optionally includes an indicator 414 of the number of missed calls or voicemail messages; Icon 418 for e-mail client module 140, labeled âMail,â which optionally includes an indicator 410 of the number of unread e-mails; Icon 420 for browser module 147, labeled âBrowser;â and Icon 422 for video and music player module 152, also referred to as iPod (trademark of Apple Inc.) module 152, labeled âiPod;â and 
 Icons for other applications, such as:
         Icon 424 for IM module 141, labeled âText;â Icon 426 for calendar module 148, labeled âCalendar;â Icon 428 for image management module 144, labeled âPhotos;â Icon 430 for camera module 143, labeled âCamera;â Icon 432 for online video module 155, labeled âOnline Videoâ Icon 434 for stocks widget 149-2, labeled âStocks;â Icon 436 for map module 154, labeled âMap;â Icon 438 for weather widget 149-1, labeled âWeather;â Icon 440 for alarm clock widget 149-4, labeled âClock;â Icon 442 for workout support module 142, labeled âWorkout Support;â Icon 444 for notes module 153, labeled âNotes;â and Icon 446 for a settings application or module, which provides access to settings for device 100 and its various applications 136. 
   
It should be noted that the icon labels illustrated in FIG. 4A are merely exemplary. For example, icon 422 for video and music player module 152 are labeled âMusicâ or âMusic Player.â Other labels are, optionally, used for various application icons. In some embodiments, a label for a respective application icon includes a name of an application corresponding to the respective application icon. In some embodiments, a label for a particular application icon is distinct from a name of an application corresponding to the particular application icon.
 FIG. 4B illustrates an exemplary user interface on a device (e.g., device 300, FIG. 3) with a touch-sensitive surface 451 (e.g., a tablet or touchpad 355, FIG. 3) that is separate from the display 450 (e.g., touch screen display 112). Device 300 also, optionally, includes one or more contact intensity sensors (e.g., one or more of sensors 357) for detecting intensity of contacts on touch-sensitive surface 451 and/or one or more tactile output generators 359 for generating tactile outputs for a user of device 300.
Although some of the examples which follow will be given with reference to inputs on touch screen display 112 (where the touch sensitive surface and the display are combined), in some embodiments, the device detects inputs on a touch-sensitive surface that is separate from the display, as shown in FIG. 4B. In some embodiments the touch sensitive surface (e.g., 451 in FIG. 4B) has a primary axis (e.g., 452 in FIG. 4B) that corresponds to a primary axis (e.g., 453 in FIG. 4B) on the display (e.g., 450). In accordance with these embodiments, the device detects contacts (e.g., 460 and 462 in FIG. 4B) with the touch-sensitive surface 451 at locations that correspond to respective locations on the display (e.g., in FIG. 4B, 460 corresponds to 468 and 462 corresponds to 470). In this way, user inputs (e.g., contacts 460 and 462, and movements thereof) detected by the device on the touch-sensitive surface (e.g., 451 in FIG. 4B) are used by the device to manipulate the user interface on the display (e.g., 450 in FIG. 4B) of the multifunction device when the touch-sensitive surface is separate from the display. It should be understood that similar methods are, optionally, used for other user interfaces described herein.
Additionally, while the following examples are given primarily with reference to finger inputs (e.g., finger contacts, finger tap gestures, finger swipe gestures), it should be understood that, in some embodiments, one or more of the finger inputs are replaced with input from another input device (e.g., a mouse based input or stylus input). For example, a swipe gesture is, optionally, replaced with a mouse click (e.g., instead of a contact) followed by movement of the cursor along the path of the swipe (e.g., instead of movement of the contact). As another example, a tap gesture is, optionally, replaced with a mouse click while the cursor is located over the location of the tap gesture (e.g., instead of detection of the contact followed by ceasing to detect the contact). Similarly, when multiple user inputs are simultaneously detected, it should be understood that multiple computer mice are, optionally, used simultaneously, or a mouse and finger contacts are, optionally, used simultaneously.
As used herein, the term âfocus selectorâ refers to an input element that indicates a current part of a user interface with which a user is interacting. In some implementations that include a cursor or other location marker, the cursor acts as a âfocus selector,â so that when an input (e.g., a press input) is detected on a touch-sensitive surface (e.g., touchpad 355 in FIG. 3 or touch-sensitive surface 451 in FIG. 4B) while the cursor is over a particular user interface element (e.g., a button, window, slider or other user interface element), the particular user interface element is adjusted in accordance with the detected input. In some implementations that include a touch-screen display (e.g., touch-sensitive display system 112 in FIG. 1A or touch screen 112 in FIG. 4A) that enables direct interaction with user interface elements on the touch-screen display, a detected contact on the touch-screen acts as a âfocus selector,â so that when an input (e.g., a press input by the contact) is detected on the touch-screen display at a location of a particular user interface element (e.g., a button, window, slider or other user interface element), the particular user interface element is adjusted in accordance with the detected input. In some implementations focus is moved from one region of a user interface to another region of the user interface without corresponding movement of a cursor or movement of a contact on a touch-screen display (e.g., by using a tab key or arrow keys to move focus from one button to another button); in these implementations, the focus selector moves in accordance with movement of focus between different regions of the user interface. Without regard to the specific form taken by the focus selector, the focus selector is generally the user interface element (or contact on a touch-screen display) that is controlled by the user so as to communicate the user's intended interaction with the user interface (e.g., by indicating, to the device, the element of the user interface with which the user is intending to interact). For example, the location of a focus selector (e.g., a cursor, a contact or a selection box) over a respective button while a press input is detected on the touch-sensitive surface (e.g., a touchpad or touch screen) will indicate that the user is intending to activate the respective button (as opposed to other user interface elements shown on a display of the device).
The user interface figures described below include various intensity diagrams that show the current intensity of the contact on the touch-sensitive surface relative to one or more intensity thresholds (e.g., a contact detection intensity threshold IT0, a light press intensity threshold ITL, a deep press intensity threshold ITD, and/or one or more other intensity thresholds). This intensity diagram is typically not part of the displayed user interface, but is provided to aid in the interpretation of the figures. In some embodiments, the light press intensity threshold corresponds to an intensity at which the device will perform operations typically associated with clicking a button of a physical mouse or a trackpad. In some embodiments, the deep press intensity threshold corresponds to an intensity at which the device will perform operations that are different from operations typically associated with clicking a button of a physical mouse or a trackpad. In some embodiments, when a contact is detected with an intensity below the light press intensity threshold (e.g., and above a nominal contact-detection intensity threshold IT0 below which the contact is no longer detected), the device will move a focus selector in accordance with movement of the contact on the touch-sensitive surface without performing an operation associated with the light press intensity threshold or the deep press intensity threshold. Generally, unless otherwise stated, these intensity thresholds are consistent between different sets of user interface figures.
An increase of intensity of the contact from an intensity below the light press intensity threshold ITL to an intensity between the light press intensity threshold ITL and the deep press intensity threshold ITD is sometimes referred to as a âlight pressâ input. An increase of intensity of the contact from an intensity below the deep press intensity threshold ITD to an intensity above the deep press intensity threshold ITD is sometimes referred to as a âdeep pressâ input. An increase of intensity of the contact from an intensity below the contact-detection intensity threshold IT0 to an intensity between the contact-detection intensity threshold IT0 and the light press intensity threshold ITL is sometimes referred to as detecting the contact on the touch-surface. A decrease of intensity of the contact from an intensity above the contact-detection intensity threshold IT0 to an intensity below the contact intensity threshold IT0 is sometimes referred to as detecting liftoff of the contact from the touch-surface. In some embodiments IT0 is zero. In some embodiments IT0 is greater than zero. In some illustrations a shaded circle or oval is used to represent intensity of a contact on the touch-sensitive surface. In some illustrations a circle or oval without shading is used represent a respective contact on the touch-sensitive surface without specifying the intensity of the respective contact.
In some embodiments described herein, one or more operations are performed in response to detecting a gesture that includes a respective press input or in response to detecting the respective press input performed with a respective contact (or a plurality of contacts), where the respective press input is detected based at least in part on detecting an increase in intensity of the contact (or plurality of contacts) above a press-input intensity threshold. In some embodiments, the respective operation is performed in response to detecting the increase in intensity of the respective contact above the press-input intensity threshold (e.g., a âdown strokeâ of the respective press input). In some embodiments, the press input includes an increase in intensity of the respective contact above the press-input intensity threshold and a subsequent decrease in intensity of the contact below the press-input intensity threshold, and the respective operation is performed in response to detecting the subsequent decrease in intensity of the respective contact below the press-input threshold (e.g., an âup strokeâ of the respective press input).
In some embodiments, the device employs intensity hysteresis to avoid accidental inputs sometimes termed âjitter,â where the device defines or selects a hysteresis intensity threshold with a predefined relationship to the press-input intensity threshold (e.g., the hysteresis intensity threshold is X intensity units lower than the press-input intensity threshold or the hysteresis intensity threshold is 75%, 90% or some reasonable proportion of the press-input intensity threshold). Thus, in some embodiments, the press input includes an increase in intensity of the respective contact above the press-input intensity threshold and a subsequent decrease in intensity of the contact below the hysteresis intensity threshold that corresponds to the press-input intensity threshold, and the respective operation is performed in response to detecting the subsequent decrease in intensity of the respective contact below the hysteresis intensity threshold (e.g., an âup strokeâ of the respective press input). Similarly, in some embodiments, the press input is detected only when the device detects an increase in intensity of the contact from an intensity at or below the hysteresis intensity threshold to an intensity at or above the press-input intensity threshold and, optionally, a subsequent decrease in intensity of the contact to an intensity at or below the hysteresis intensity, and the respective operation is performed in response to detecting the press input (e.g., the increase in intensity of the contact or the decrease in intensity of the contact, depending on the circumstances).
For ease of explanation, the description of operations performed in response to a press input associated with a press-input intensity threshold or in response to a gesture including the press input are, optionally, triggered in response to detecting either: an increase in intensity of a contact above the press-input intensity threshold, an increase in intensity of a contact from an intensity below the hysteresis intensity threshold to an intensity above the press-input intensity threshold, a decrease in intensity of the contact below the press-input intensity threshold, and/or a decrease in intensity of the contact below the hysteresis intensity threshold corresponding to the press-input intensity threshold. Additionally, in examples where an operation is described as being performed in response to detecting a decrease in intensity of a contact below the press-input intensity threshold, the operation is, optionally, performed in response to detecting a decrease in intensity of the contact below a hysteresis intensity threshold corresponding to, and lower than, the press-input intensity threshold.
User Interfaces and Associated Processes
Assigning Respective Portions of an Aggregate Intensity to a Plurality of Contacts
Many electronic devices sense a pressure of a user input. For example, a device with a pressure sensitive button determines an amount that the button is depressed by the user based on a pressure measurement of a pressure sensor integrated with the button. However, such methods do not provide a way to estimate the intensity of multiple different simultaneously detected contacts and thus do not provide a way to interact with an intensity sensitive user interface with multiple contacts. The device improves on these methods by assigning a first portion of an aggregate intensity (e.g., a sum of intensity measurements received from each intensity sensor of a plurality of intensity sensors) of a plurality of contacts on a touch-sensitive surface to a first contact of the plurality of contacts and by assigning a second portion of the aggregate intensity to a second contact of the plurality of contacts, while detecting the plurality of contacts on the touch-sensitive surface. The device assigns the aggregate intensity to the plurality of contacts based at least in part on: a first intensity measurement received from a first intensity sensor of the plurality of intensity sensors; a second intensity measurement from a second intensity sensor of the plurality of intensity sensors; a location of the first intensity sensor relative to the touch-sensitive surface; a location of the second intensity sensor relative to the touch-sensitive surface; and a comparison between values of a set of one or more properties of the first contact (e.g., the location of the first contact relative to a center of force) and corresponding values of the set of one or more properties of the second contact, thereby enabling the device to estimate intensity of multiple simultaneously detected contacts and use this information to control convenient and efficient user interfaces.
 FIGS. 5A-5L illustrate exemplary user interfaces and contacts with a touch-sensitive surface that are assigned respective portions of an aggregate intensity to a plurality of contacts in accordance with some embodiments. The depictions in these figures are used to illustrate the processes described below, including the processes in FIGS. 6A-6C. FIGS. 5B and 5H-5K include intensity diagrams that show the current intensity measurements of the intensity sensors relative to units of intensity. FIGS. 5F and 5H-5J include intensity diagrams that show the current intensities of a plurality of contacts on the touch-sensitive surface relative to units of intensity.
In some implementations, the intensity assigned to a respective contact is compared with one or more of a plurality of distinct intensity thresholds, for example one or more of a contact detection intensity threshold, âIT0,â a light press intensity threshold, âITL,â and a deep press intensity threshold, âITD,â and then one or more operations are performed in accordance with a result of the comparison as described in greater detail with respect to other methods described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments).
In some embodiments, the device is an electronic device with a separate display (e.g., display 450) and a separate touch-sensitive surface (e.g., touch-sensitive surface 451). In some embodiments, the device is portable multifunction device 100, the display is touch-sensitive display system 112, and the touch-sensitive surface includes tactile output generators 167 on the display (FIG. 1A). For convenience of explanation, the embodiments described with reference to FIGS. 5A-5L and 6A-6C will be discussed with reference to display 450 and a separate touch-sensitive surface 451; however, analogous operations are, optionally, performed on a device with a touch-sensitive display system 112 in response to detecting the contacts described in FIGS. 5A-5L on the touch-sensitive display system 112 while displaying the user interfaces shown in FIGS. 5A-5L on the touch-sensitive display system 112. In some implementations, a focus selector is, optionally: a respective contact, a representative point corresponding to a contact (e.g., a centroid of a respective contact or a point associated with a respective contact), or a centroid or center of force of two or more contacts detected on the touch-sensitive display system 112.
 FIG. 5A illustrates a touch-sensitive surface 451 with a plurality of intensity sensors 12902. In some implementations, touch-sensitive surface 451 has four or more intensity sensors 12902. In this example, each of the plurality of intensity sensors 12902 (e.g., four intensity sensors) are positioned in a respective corner of touch-sensitive surface 451.
 FIG. 5B illustrates detecting a plurality of contacts 12904 on touch-sensitive surface 451. In this example, the number of contacts (e.g., five contacts 12904) detected on touch-sensitive surface 451 is greater than the number of intensity sensors (e.g., four intensity sensors 12902). In some embodiments, a count of the detected contacts (e.g., five in FIG. 5B) is greater than a count of the intensity sensor units (e.g., four in FIG. 5B). FIG. 5B further illustrates respective intensity measurements of each intensity sensor 12902 (e.g., a measurement of the pressure registered at each sensor) while the plurality of contacts 12904 is detected on touch-sensitive surface 451. In this example, the intensity measurements of intensity sensors 12902-1 and 12902-4 are each 9 units of intensity, and the intensity measurements of intensity sensors 12902-2 and 12902-3 are each 7 units of intensity. Furthermore, in some implementations, an aggregate intensity is the sum of the intensity measurements of a plurality of intensity sensors 12902, which in this example is 32 intensity units. The arrangement of contacts 12904 in FIGS. 5B-5I is not necessarily a typical of human-user inputs.
 FIG. 5C illustrates determining a center of force 12906 on touch-sensitive surface 451 based at least in part on a location of the intensity sensors 12902 relative to touch-sensitive surface 451 (e.g., each intensity sensor 12902 is positioned in a respective corner of touch-sensitive surface 451) and the intensity measurements of intensity sensors 12902 (e.g., the intensity measurements of intensity sensors 12902 in FIG. 5B). In some implementations, x and y components of the center of force 12906 are determined using predefined mathematical functions, such as x=Î±(BxâAx)/(Bx+Ax) and y=Î²(DyâCy)/(Dy+Cy) where Ax is the sum of the measured intensities of sensors 12902-3 and 12902-4, Bx is the sum of the measured intensities of sensors 12902-1 and 12902-2, Cy is the sum of the measured intensities of sensors 12902-2 and 12902-3, Dy is the sum of the measured intensities of sensors 12902-1 and 12902-4, and Î± and Î² are scaling factors.
 FIG. 5D illustrates the distance from center of force 12906 to intensity sensors 12902. In this example, the distances from center of force 12906 to sensors 12902-1 and 12902-4 (e.g., DS1 and DS4, respectively) are shorter than the distances from center of force 12906 to sensors 12902-2 and 12902-3 (e.g., DS2 and DS3, respectively). In this example, center of force 12906 is closer to sensors 12902-1 and 12902-4 due to the higher intensity measurements of intensity sensors 12902-1 and 12902-4 (e.g., each 9 units of intensity in FIG. 5B) in contrast to the intensity measurements of intensity sensors 12902-2 and 12902-3 (e.g., each 7 units of intensity in FIG. 5B).
 FIG. 5E illustrates determining a location of contacts 12904 relative to center of force 12906. In this example, the distances from center of force 12906 to contacts 12904-1, 12904-2 and 12904-5 (e.g., DC1, DC2 and DC5, respectively) are less than the distances from center of force 12906 to contacts 12904-3 and 12904-4 (e.g., DC3 and DC4, respectively).
 FIG. 5F illustrates assigning the aggregate intensity (e.g., the sum of the intensity measurements of intensity sensors 12902 in FIG. 5Bâ32 intensity units) to contacts 12904 based on their distances from the center of force 12906 (e.g., the respective DC distances in FIG. 5E). In this example, each of contacts 12904-1, 12904-2 and 12904-5 are assigned 8 intensity units of the aggregate intensity, and each of contacts 12904-3 and 12904-4 are assigned 4 intensity units of the aggregate intensity. More generally, in some implementations, each contact j is assigned a respective intensity Ij that is portion of the aggregate intensity, A, in accordance with a predefined mathematical function, Ij=AÂ·(Dj/Î£Di), where Dj is the distance of the respective contact j to the center of force, and Î£Di is the sum of the distances of all the respective contacts (e.g., i=1 to last) to the center of force.
 FIG. 5G illustrates performing an operation based at least in part on the portions of the aggregate intensity assigned to a first contact and a second contact. In this example, each of contacts 12904 move from respective position (a) to respective position (b) (e.g., contact 12904-1 moved from position 12904-1-a to position 12904-1-b) on touch-sensitive surface 451. FIG. 5G further illustrates displaying lines 12908 on display 450 in accordance with a change in position of a respective contact 12904, and displaying line thicknesses of lines 12908 on display 450 in accordance with the intensity assigned to the corresponding respective contacts 12904, as described above with reference to FIG. 5F. In this example, the respective length of lines 12908 map to the corresponding respective change in position of contacts 12904 in FIG. 5G (e.g., the length of line 12908-1 maps to the change in position of contact 12904-1 from position 12904-1-a to position 12904-1-b, and the length of line 12908-3 maps to the change in position of contact 12904-3 from position 12904-3-a to position 12904-3-b). Furthermore, in this example, the thicknesses of lines 12908 map to the corresponding respective intensity assigned to contacts 12904, as described above with reference to FIG. 5F (e.g., the thickness of line 12908-1 maps to the intensity assigned to contact 12904-1 in FIG. 5F, 8 units of intensity, and the thickness of line 12908-3 maps to the intensity assigned to contact 12904-3 in FIG. 5F, 4 units of intensity).
 FIG. 5H illustrates center of force 12910 at a location closer to contact 12904-1 in comparison to center of force 12906 in FIG. 5C (e.g., due to the intensity measurements of intensity sensors 12902 in FIG. 5H). In this example, the intensity measurements of intensity sensors 12902-1 and 12902-4 are each 10 units of intensity, and the intensity measurements of intensity sensors 12902-2 and 12902-3 are each 6 units of intensity (e.g., the aggregate intensity is the sum of the intensity measurements of intensity sensors 12902â32 units of intensity).
 FIG. 5I illustrates center of force 12912 at a location closer to contacts 12904-3 and 12904-4 in comparison to center of force 12906 in FIG. 5C (e.g., due to the intensity measurements of intensity sensors 12902 in FIG. 5I). In this example, the intensity measurements of intensity sensors 12902-2 and 12902-3 are each 9 units of intensity, and the intensity measurements of intensity sensors 12902-1 and 12902-4 are each 7 units of intensity (e.g., the aggregate intensity is the sum of the intensity measurements of intensity sensors 12902â32 units of intensity).
 FIG. 5J illustrates contacts 12914 detected on touch-sensitive surface 451 (e.g., contact 12914 are positioned closer to a bottom edge of touch-sensitive surface 451 than contacts 12904 in FIG. 5C). FIG. 5J further illustrates center of force 12916 at a location relative to contacts 12914 such that the intensities assigned to contacts 12914 in FIG. 5J are the same as the intensities assigned to contacts 12904 in FIG. 5F.
 FIG. 5K illustrates a plurality of contacts 12918 detected on touch-sensitive surface 451. In this example, six contacts are detected on touch-sensitive surface 451 (e.g., contacts 12918 represent a human-user's right hand including a portion of the human-user's palm). FIG. 5K further illustrates identifying an incidental contact on touch-sensitive surface 451 (e.g., contact 12918-6âthe portion of the human-user's palm). In this example, the intensity measurements of intensity sensors 12902-1 and 12902-4 are each 10 units of intensity, and the intensity measurements of intensity sensors 12902-2 and 12902-3 are each 5 units of intensity (e.g., an aggregate intensity is the sum of the intensity measurements of intensity sensors 12902â30 units of intensity).
 FIG. 5L illustrates compensating for the presence of a respective incidental contact (e.g., incidental palm contact 12918-6) on touch-sensitive surface 451. In this example, incidental contact 12918-6 is ignored and intensity contributions due to the palm input are, optionally, attributed to the other contacts (e.g., by computing the intensities of the contacts using the total detected intensity without assigning any of the total detected intensity to incidental contact 12918-6). Alternatively, the estimated contribution of incidental contact 12918-6 to the intensity measurements of intensity sensors 12902 is canceled, when determining center of force 12920 based on contact contribution criteria (e.g., a shape, a surface area and/or an intensity of contact 12918-6). For example, in some implements, when a contact fails to satisfy predefined contact contribution criteria, the contact is ignored at least for purposes of determining a center of force, or an estimated intensity contribution of incidental contact 12918-6 (e.g., based on contact size of incidental contact 12918-6 or a predetermined value) is subtracted from the weighted average. FIG. 5L further illustrates assigning portions of the aggregate intensity (e.g., a total of 30 units of intensity) to contacts 12918 (e.g., ignoring contact 12918-6). FIG. 5L further illustrates contact 12918-6 crossed out due to it being ignored, or due to cancellation of its estimated contribution to the intensity measurements of intensity sensors 12902, in FIG. 5K.
 FIGS. 6A-6C are flow diagrams illustrating a method 13000 of assigning respective portions of an aggregate intensity to a plurality of contacts in accordance with some embodiments. The method 13000 is performed at an electronic device (e.g., device 300, FIG. 3, or portable multifunction device 100, FIG. 1A) with a display and a touch-sensitive surface. In some embodiments, the display is a touch screen display and the touch-sensitive surface is on the display. In some embodiments, the display is separate from the touch-sensitive surface. Some operations in method 13000 are, optionally, combined and/or the order of some operations is, optionally, be changed.
As described below, the method 13000 provides an intuitive way to assign respective portions of an aggregate intensity to a plurality of contacts. The method reduces the cognitive burden on a user when assigning respective portions of an aggregate intensity to a plurality of contacts, thereby creating a more efficient human-machine interface. For battery-operated electronic devices, enabling a user to assign respective portions of an aggregate intensity to a plurality of contacts faster and more efficiently conserves power and increases the time between battery charges.
The device detects (13002), on a touch sensitive surface, a plurality of contacts, where a plurality intensity sensors detect intensity of contacts with the touch-sensitive surface. FIG. 5B, for example, shows the device detecting a plurality of contacts 12904 (e.g., 5 contacts) on touch-sensitive surface 451 via a plurality of intensity sensors 12902 (e.g., 4 intensity sensors).
In some embodiments, the plurality of intensity sensors includes (13004) at least four intensity sensors. FIG. 5B, for example, shows four intensity sensors 12902. In some embodiments, the number of detected contacts (13006) is greater than the number of intensity sensors (e.g., the device detects five contacts on the touch-sensitive surface and there are four intensity sensors, one on each corner of the touch-sensitive surface). FIG. 5B, for example, shows five detected contacts (e.g., contacts 12904) and four intensity sensors 12902 (e.g., a count of the detected contacts 12904 is greater than a count of the intensity sensor units 12902).
In some embodiments, the touch-sensitive surface has (13008) a plurality of respective corners, and each respective intensity sensor of the plurality of intensity sensors is positioned proximate to a corresponding respective corner. FIG. 5B, for example, shows the each intensity sensor of the plurality of intensity sensors 12902 positioned proximate to a corresponding corner of touch-sensitive surface 451.
In some embodiments, the plurality of intensity sensors define (13010) a perimeter of the device (e.g., a perimeter of the touch-sensitive surface), and the plurality of contacts are detected within the perimeter defined by the plurality of intensity sensors. FIG. 5B, for example, shows intensity sensors 12902 defining a perimeter of touch-sensitive surface 451 and the plurality of contacts 12904 detected within the perimeter defined by intensity sensors 12902.
While detecting (13012) the plurality of contacts, the device receives (13014) a first intensity measurement from a first intensity sensor of the plurality of intensity sensors, and the device also receives (13016) a second intensity measurement from a second intensity sensor of the plurality of intensity sensors, where the first intensity sensor is different second intensity sensor. FIG. 5B, for example, shows the device receiving a first intensity measurement (e.g., intensity measurement of intensity sensor 12902-1) from a first intensity sensor (e.g., intensity sensor 12902-1) and, also, receiving a second intensity measurement (e.g., intensity measurement of intensity sensor 12902-2) from a second intensity sensor (e.g., intensity sensor 12902-2) while detecting the plurality of contacts 12904 on touch-sensitive surface 451.
While detecting (13012) the plurality of contacts, the device assigns (13018) a first portion of an aggregate intensity of the contacts to the first contact and assigns a second portion of an aggregate intensity of the contacts to the second contact. FIG. 5B, for example, shows an aggregate intensity of the contacts (e.g., the sum of the intensity measurements of intensity sensors 12902â32 units of intensity). FIG. 5F, for example, shows the device assigning a first portion of the aggregate intensity of the contacts to first contact 12904-1 (e.g., the intensity of contact 12904-1 is 8 units of intensity) while the device detects the plurality of contacts 12904 on touch-sensitive surface 451. FIG. 5F, for example, also shows the device assigning a second portion of the aggregate intensity to second contact 12904-2 (e.g., the intensity of contact 12904-2 is 8 units of intensity) while the device detects the plurality of contacts 12904 on touch-sensitive surface 451.
The device assigns (13018) portions of the aggregate intensity to the plurality of contacts based at least in part on (13020): the first intensity measurement; the second intensity measurement; a location of the first intensity sensor relative to the touch-sensitive surface; and a location of the second intensity sensor relative to the touch-sensitive surface. FIG. 5F, for example, shows the device assigning the aggregate intensity (e.g., 32 intensity units) to the plurality of contacts 12904 based at least in part on: the first intensity measurement of intensity sensor 12902-1 in FIG. 5B; the second intensity measurement of intensity sensor 12902-2 in FIG. 5B; the location of first intensity sensor 12902-1 relative to touch-sensitive surface 451 in FIG. 5B; and the location of second intensity sensor 12902-2 relative to touch-sensitive surface 451 in FIG. 5B.
The device also assigns (13018) portions of the aggregate intensity to the plurality of contacts based at least in part on a comparison (13022) between values of a set of one or more properties (e.g., location, distance from center of force, contact size) of the first contact and corresponding values of the set of one or more properties of the second contact. FIG. 5F, for example, shows the device assigning the aggregate intensity (e.g., 32 units of intensity) to the plurality of contacts based also at least in part on a comparison between values of a set of one or more properties of first contact 12904-1 (e.g., the distance from center of force 12906 to contact 12904-1 in FIG. 5EâDC1) and corresponding values of a set of one or more properties of second contact 12904-2 (e.g., the distance from center of force 12906 to contact 12904-2 in FIG. 5EâDC2).
In some embodiments, the set of one or more properties for a respective contact includes (13024) a location of the respective contact on the touch-sensitive surface. The location of the contact on the touch-sensitive surface is, optionally, relative to one or more other detected contacts, relative to a center of force (e.g., the corresponding DC distances of respective contacts 12904 in FIG. 5E), or relative to one or more intensity sensors. In some embodiments, the set of one or more properties of a respective contact includes (13026) a contact size of the respective contact on the touch-sensitive surface. In some embodiments, relative intensity of contacts can be determined based in part on an absolute contact size or a change in contact size, because as a finger is pressed onto the touch-sensitive surface, more of the finger comes into contact with the touch-sensitive surface. Thus, as a user presses a finger down harder onto the touch-sensitive surface, the size of a contact corresponding to the finger increases.
In some embodiments, the device includes (13028) a number of intensity sensors, the aggregate intensity is divided between a number of detected contacts, and the number of detected contacts is greater than the number of intensity sensors. In some implementations, the number of intensity sensors is four or more. FIG. 5F, for example, shows the aggregate intensity (e.g., the sum of the intensity measurements of intensity sensors 12902 in FIG. 5Bâ32 units of intensity) divided between the number of detected contacts 12904 on touch-sensitive surface 451 (e.g., the sum of the intensities of contacts 12904 in FIG. 5F equals the aggregate intensityâ32 units of intensity). Also, in FIG. 5F, for example, the number of detected contacts 12904 (e.g., five) is greater than the number of intensity sensors 12902 (e.g., four).
In response to detecting the plurality of contacts, the device performs (13030) an operation based at least in part on the portion of the aggregate intensity assigned to the first contact. In some embodiments, means for performing an operation are enabled while means for detecting the plurality of contacts are detecting the plurality of contacts. In some embodiments, the operation is based (13032) at least in part on the portion of the aggregate intensity assigned to the second contact. FIG. 5G, for example, shows the device performing an operation (e.g., displaying lines 12908 on display 450) based at least in part on the portions of the aggregate intensity assigned to the first contact and the second contact (e.g., the thickness of lines 12908-1 and 12908-2 correspond to the intensity assigned to corresponding contacts 12904-1 and 12904-2, respectively, in FIG. 5F).
In some embodiments, the device determines (13034) a center of force on the touch-sensitive surface based at least in part on: the location of the first intensity sensor relative to the touch-sensitive surface; the location of the second intensity sensor relative to the touch-sensitive surface; the first intensity measurement of the first intensity sensor; and the second intensity measurement of the second intensity sensor. In some embodiments, the center of force is a weighted average of the locations of intensity sensors 12902 (e.g., the corresponding DS distances from respective intensity sensors 12902 to center of force 12906), where the intensity contributions of each of intensity sensors 12902 are weighted in accordance with the respective intensity measurement that corresponds to the respective intensity sensor. FIG. 5C, for example, shows center of force 12906 determined based at least in part on: the location of the first intensity sensor 12902-1 relative to touch-sensitive surface 451; the location of the second intensity sensor 12902-2 relative to touch-sensitive surface 451; the first intensity measurement of first intensity sensor 12902-1 in FIG. 5B; and the second intensity measurement of second intensity sensor 12902-2 in FIG. 5B. In some embodiments, the center of force on the touch-sensitive surface is determined prior to, or as part of, assigning portions of the intensity of contacts on the touch-sensitive surface (as described in greater detail above with reference to operation 13018).
In some embodiments, determining the center of force includes (13036): identifying one or more incidental contacts on the touch-sensitive surface (e.g., a palm contact or accidental finger contact); and compensating for the presence of a respective incidental contact on the touch-sensitive surface (e.g., ignoring the incidental contact, or cancelling an estimated contribution of the incidental contact to the aggregate intensity). FIG. 5L, for example, shows identifying an incidental contact (e.g., contacts 12918-6) on touch-sensitive surface 451 and compensating for the presence of contact 12918-6 on touch-sensitive surface 451 (e.g., by cancelling the estimated contribution of incidental contact 12918-6 to the intensity measurements of intensity sensors 12902 in FIG. 5K) when determining center of force 13020.
In some embodiments, the device determines (13038) a location of the first contact relative to the center of force, determines a location of the second contact relative to the center of force, assigns the first portion of the aggregate intensity to the first contact based on the location of the first contact relative to the center of force, and assigns the second portion of the aggregate intensity to the second contact based on the location of the second contact relative to the center of force. In some embodiments, the aggregate intensity is divided between the detected contacts, including the first contact and the second contact, based on a comparison between the location of the first contact relative to the center of force and the location of the second contact relative to the center of force, so that more intensity is assigned to the contact that is closer to the center of force (e.g., the aggregate intensity is assigned to contacts based on the assumption that the intensity contribution of a respective contact is proportional to the distance of the contact to the center of force). In some implementations, the center of force is determined using the predefined mathematical function described above with reference to FIG. 5C. Furthermore, in some implementations, the portion of the aggregate intensity assigned to respective detected contacts is determined using the predefined mathematical function described above with reference to FIG. 5F. In some embodiments, locations of the contacts are determined prior to, or as part of, assigning portions of the intensity of contacts on the touch-sensitive surface (as described in greater detail above with reference to operation 13018).
For example, the intensity contributions of the plurality of contacts are determined so that the center of force is located on the touch-sensitive surface in accordance with a weighted average of the locations of the plurality of contacts, where the locations of each of the respective contacts is weighted in accordance with a respective portion of the aggregate intensity that is assigned to the respective contact (e.g., the portions of the aggregate intensity that are assigned to particular contacts are determined by reversing the computation of a weighted average, starting with the total intensity, the location of the weighted average and the locations of the contacts and working backwards to determine the weights for the different contacts). For example, if four intensity sensors identify an aggregate intensity of 4 units of intensity at a respective point (e.g., the center of force) on the touch-sensitive surface, and the device detects two contacts on the touch-sensitive surface, a first contact 1 centimeter from the respective point, a second contact 3 centimeters from the respective point and directly across from the first contact, the device would assign 75% of the intensity (e.g., 3 units of intensity) to the first contact and 25% of the intensity (e.g., 1 unit of intensity) to the second contact.
 FIG. 5E, for example, shows the device determining a location of first contact 12904-1 relative to center of force 12906 (e.g., distance DC1) and a location of second contact 12904-2 relative to center of force 12906 (e.g., distance DC2). FIG. 5F, for example, further shows the device assigning the first portion of the aggregate intensity (e.g., the sum of the intensity measurements of intensity sensors 12902 in FIG. 5B) to first contact 12904-1 (e.g., intensity of contact 12904-1â8 units of intensity) based on the location of first contact 12904-1 relative to center of force 12906 (e.g., distance DC1) and the second portion of the aggregate intensity (e.g., the sum of the intensity measurements of intensity sensors 12902 in FIG. 5B) to second contact 12904-2 (e.g., intensity of contact 12904-2â8 units of intensity) based on the location of second contact 12904-2 relative to center of force 12906 (e.g., distance DC2). It should be understood that the particular order in which the operations in FIGS. 6A-6C have been described is merely exemplary and is not intended to indicate that the described order is the only order in which the operations could be performed. One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments) are also applicable in an analogous manner to method 13000 described above with respect to FIGS. 6A-6C. For example, the contacts described above with reference to method 13000 optionally have one or more of the characteristics of the contacts described herein with reference to other methods described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments). For brevity, these details are not repeated here.
In accordance with some embodiments, FIG. 7 shows a functional block diagram of an electronic device 13100 configured in accordance with the principles of the various described embodiments. The functional blocks of the device are, optionally, implemented by hardware, software, or a combination of hardware and software to carry out the principles of the various described embodiments. It is understood by persons of skill in the art that the functional blocks described in FIG. 7 are, optionally, combined or separated into sub-blocks to implement the principles of the various described embodiments. Therefore, the description herein optionally supports any possible combination or separation or further definition of the functional blocks described herein.
As shown in FIG. 7, an electronic device 13100 includes: a display unit 13102 configured to display information; a touch-sensitive surface unit 13104 configured to receive contacts; a plurality of intensity sensor units 13106 to detect intensity of contacts with the touch-sensitive surface 13104; and a processing unit 13108 coupled to the display unit 13102, the touch-sensitive surface unit 13104 and the plurality of intensity sensor units 13106. In some embodiments, the processing unit 13108 includes a detecting unit 13110, a receiving unit 13112, an assigning unit 13114, a performing unit 13116, a determining unit 13118, an identifying unit 13120, and a compensating unit 13122.
The processing unit 13108 is configured to detect (e.g., with the detecting unit 13110), on the touch-sensitive surface unit 13104, a plurality of contacts. While detecting the plurality of contacts, the processing unit 13108 is further configured to: receive (e.g., with the receiving unit 13112) a first intensity measurement from a first intensity sensor unit 13106-1 of the plurality of intensity sensors unit 13106; receive (e.g., with the receiving unit 13112) a second intensity measurement from a second intensity sensor unit 13106-2 of the plurality of intensity sensor units 13106, wherein the first intensity sensor unit 13106-1 is different from the second intensity sensor unit 13106-2; and assign (e.g., with the assigning unit 13114) a first portion of an aggregate intensity of the contacts to the first contact and assign (e.g., with the assigning unit 13114) a second portion of the aggregate intensity to the second contact. The processing unit 13108 is configured to assign (e.g., with the assigning unit 13114) the aggregate intensity based at least in part on: the first intensity measurement; the second intensity measurement; a location of the first intensity sensor unit 13106-1 relative to the touch-sensitive surface unit 13104; a location of the second intensity sensor unit 13106-2 relative to the touch-sensitive surface unit 13104; and a comparison between values of a set of one or more properties of the first contact and corresponding values of the set of one or more properties of the second contact. In response to detecting the plurality of contacts, the processing unit 13108 is further configured to perform (e.g., with the performing unit 13116) an operation based at least in part on the portion of the aggregate intensity assigned to the first contact.
In some embodiments, the operation is based at least in part on the portion of the aggregate intensity assigned to the second contact.
In some embodiments, the number of detected contacts is greater than the number of intensity sensor units 13106.
In some embodiments, the device includes a number of intensity sensor units 13106, the aggregate intensity is divided between a number of detected contacts, and the number of detected contacts is greater than the number of intensity sensor units 13106.
In some embodiments, the plurality of intensity sensor units 13106 define a perimeter on the device, and the plurality of contacts are detected within the perimeter defined by the plurality of intensity sensor units 13106.
In some embodiments, the plurality of intensity sensor units 13106 includes at least four intensity sensor units.
In some embodiments, the touch-sensitive surface unit 13104 has a plurality of respective corners, and each respective intensity sensor unit of the plurality of intensity sensor units 13106 is positioned proximate to a corresponding respective corner.
In some embodiments, the set of one or more properties for a respective contact includes a location of the respective contact on the touch-sensitive surface unit 13104.
In some embodiments, the set of one or more properties of a respective contact include a contact size of the respective contact on the touch-sensitive surface unit 13104.
In some embodiments, the processing unit 13108 is further configured to determine (e.g., with the determining unit 13118) a center of force on the touch-sensitive surface unit 13104 based at least in part on: the location of the first intensity sensor unit 13106-1 relative to the touch-sensitive surface unit 13104; the location of the second intensity sensor unit 13106-2 relative to the touch-sensitive surface unit 13104; the first intensity measurement of the first intensity sensor unit 13106-1; and the second intensity measurement of the second intensity sensor unit 13106-2.
In some embodiments, determining (e.g., with the determining unit 13118) the center of force includes: identifying (e.g., with the identifying unit 13120) one or more incidental contacts on the touch-sensitive surface unit 13104; and compensating (e.g., with the compensating unit 13122) for the presence of a respective incidental contact on the touch-sensitive surface unit 13104.
In some embodiments, the processing unit 13108 is configured to: determine (e.g., with the determining unit 13118) a location of the first contact relative to the center of force; determine (e.g., with the determining unit 13118) a location of the second contact relative to the center of force; assign (e.g., with the assigning unit 13114) the first portion of the aggregate intensity to the first contact based on the location of the first contact relative to the center of force; and assign (e.g., with the assigning unit 13114) the second portion of the aggregate intensity to the second contact based on the location of the second contact relative to the center of force.
The operations in the information processing methods described above are, optionally, implemented by running one or more functional modules in information processing apparatus such as general purpose processors (e.g., as described above with respect to FIGS. 1A and 3) or application specific chips.
The operations described above with reference to FIGS. 6A-6C are, optionally, implemented by components depicted in FIGS. 1A-1B or FIG. 7. For example, detecting operation 13002, receiving operations 13014-13016, assigning operation 13018, and determining operation 13034 are, optionally, implemented by event sorter 170, event recognizer 180, and event handler 190. Event monitor 171 in event sorter 170 detects a contact on touch-sensitive display 112, and event dispatcher module 174 delivers the event information to application 136-1. A respective event recognizer 180 of application 136-1 compares the event information to respective event definitions 186, and determines whether a first contact at a first location on the touch-sensitive surface corresponds to a predefined event or sub-event, such as selection of an object on a user interface. When a respective predefined event or sub-event is detected, event recognizer 180 activates an event handler 190 associated with the detection of the event or sub-event. Event handler 190 optionally utilizes or calls data updater 176 or object updater 177 to update the application internal state 192. In some embodiments, event handler 190 accesses a respective GUI updater 178 to update what is displayed by the application. Similarly, it would be clear to a person having ordinary skill in the art how other processes can be implemented based on the components depicted in FIGS. 1A-1B.
Transitioning Between Touch Input to Display Output Relationships
Many electronic devices have graphical user interfaces that include various user interface objects that are controlled in accordance with input-output relationships between inputs and corresponding outputs. In some situations there is a constant input-output relationship between inputs and corresponding outputs. However, a constant input-output relationship can be distracting an inefficient for a user when there is a particular range of outputs that the user is likely to want to achieve. However, a variable input-output relationship can also be confusing and disconcerting to a user if the user notices discontinuities in the input-output relationship. The embodiments described below improve on these methods by providing an efficient and intuitive way of transitioning between touch input to display output relationships when interacting with user interface objects. In particular, in accordance with some embodiments described below, some user interface objects have two or more touch input to display output relationships that govern how those objects are displayed in response to user inputs, especially touch inputs. For example, in some circumstances, opening a file folder involves an animation progression with multiple stages or options depending on the properties of the user input.
 FIGS. 8A-8V illustrate exemplary user interfaces for transitioning between touch input to display output relationships using inputs on a touch-sensitive surface in accordance with some embodiments. The user interfaces in these figures are used to illustrate the processes described below, including the processes described below with reference to FIGS. 9A-9C. FIGS. 8B-8I and 8N-8T include intensity diagrams that show the current intensity of the contact on the touch-sensitive surface relative to a plurality of intensity thresholds including a respective threshold (e.g., âITDâ). In some embodiments, operations similar to those described below with reference to ITD are performed with reference to a different intensity threshold (e.g., âITLâ).
 FIG. 8A illustrates an example user interface 13204, including files icon 13205, displayed on display 450 of a device (e.g., device 300) and responsive to inputs (e.g., a finger contact) on touch-sensitive surface 451. FIG. 8A further illustrates intensity sensors 13208 to detect the intensity of contacts on touch-sensitive surface 451. FIG. 8A also shows contact 13202 and intensity of contact 13202 as well as additional intensity range 13210 corresponding to the relative location of contact 13202 on touch-sensitive surface 451 and intensity sensors 13208. In accordance with some embodiments, FIG. 8A also illustrates a displayed representation of a focus selector (e.g., cursor 13206) corresponding to input 13202 detected on touch-sensitive surface 451.
In some embodiments, the device is an electronic device with a separate display (e.g., display 450) and a separate touch-sensitive surface (e.g., touch-sensitive surface 451). In some embodiments, the device is portable multifunction device 100, the display is touch-sensitive display system 112, and the touch-sensitive surface includes contact intensity sensor(s) 165 on the display (FIG. 1A). For convenience of explanation, the embodiments described with reference to FIGS. 8A-8K and 9A-9C will be discussed with reference to display 450 and a separate touch-sensitive surface 451, however analogous operations are, optionally, performed on a device with a touch-sensitive display system 112 in response to detecting the contacts described in FIGS. 8A-8K on the touch-sensitive display system 112 while displaying the user interfaces shown in FIGS. 8A-8K on the touch-sensitive display system 112; in such embodiments, the focus selector is, optionally: a respective contact, a representative point corresponding to a contact (e.g., a centroid of a respective contact or a point associated with a respective contact), or a centroid of two or more contacts detected on the touch-sensitive display system 112, in place of cursor 13206. Likewise, for embodiments discussed with reference with a touch-sensitive display system 112 (e.g., as shown in FIGS. 8M-8V), analogous operations are, optionally, performed on a device with display 450 and a separate touch-sensitive surface 451 in response to detecting the contacts described in FIGS. 8M-8V on the touch-sensitive surface 451 while displaying the user interfaces shown in FIGS. 8M-8V on the display 450. In embodiments where a display 450 and touch-sensitive surface 451 replace touch screen 112, the focus selector is, optionally: a cursor, a magnifying glass, or a spotlight, in place of a respective contact (e.g., contact 13228 in FIGS. 8M-8V), a representative point corresponding to a contact, or a centroid of two or more contacts detected on the touch-sensitive display system 112.
In some embodiments, cursor 13206 is a displayed representation of the focus selector with a position on display 450 that is determined in accordance with contacts received by touch-sensitive surface 451. In other implementations the focus selector has a different displayed representation (e.g., a magnifying glass). Alternatively, in some implementations a representation of the focus selector is not displayed. For example, in implementations using a touch-sensitive display system, the position of the focus selector corresponds to the location on the display of a contact or gesture. Further, the focus selector is herein defined to be âoverâ a user interface object when the position of the focus selector corresponds to the location on the display of the user interface object.
 FIGS. 8B-8K illustrate an example of adjusting the progress of an animation in accordance with intensity of a contact. FIGS. 8B-8E illustrate an animation displaying the files associated with files icon 13205 progressing in accordance with a first touch input to display output relationship as intensity of contact 13202 increases from just above ITL to just below ITD. FIG. 8F illustrates a transition point in the animation progress as intensity of contact 13202 reaches ITD. FIGS. 8G-8I illustrate the animation progressing in accordance with a second touch input to display output relationship as intensity of contact 13202 increases beyond ITD. FIGS. 8J-8K illustrate lift-off of contact 13202 and an animation that returns (e.g., bounces back) the graphical representation of files associated with file icon 13205 to the state shown in FIG. 8F.
 FIG. 8L illustrates an example of adjusting an output in response to change in input (e.g., change in intensity of a finger contact). FIG. 8L shows first touch input to display output response 13216 (e.g., a linear response) corresponding to first range of intensity values 13212 between ITL and ITD. FIG. 8L also shows touch input to display output response transition point 13217 corresponding to intensity ITD and a smooth transition to second touch input to display output response 13218 (e.g., a cubic spline response) corresponding to second range of intensity values 13214 between ITD and ITMAX. FIG. 8L further shows the output approaching max output 13220 as the input approaches ITMAX.
 FIG. 8M illustrates an example user interface 13226, including menu bar 13227, displayed on touch-sensitive display 13222, which is responsive to inputs (e.g., a finger contact). FIG. 8M further illustrates intensity sensors 13232 to detect the intensity of contacts on touch-sensitive display 13222.
 FIGS. 8N-8V illustrate another example of adjusting the progress of an animation in accordance with intensity of a contact. FIGS. 8N-8O show contact 13228 detected over the âToolsâ option on menu bar 13227 and intensity of contact 13228 as well as additional intensity range 13230 corresponding to the relative location of contact 13228 on touch-sensitive display 13222 and intensity sensors 13232. FIGS. 8N-8O further show graph 13236 displaying output response (e.g., animation progress) in accordance with change in intensity of contact 13228. In FIGS. 8N-8O, the animation of âToolsâ sub-menu 13240 progresses as intensity of contact 13228 increases from just above IT0 (in FIG. 8N) to just below ITL (in FIG. 8O) in accordance with a first touch input to display output response. FIG. 8P shows intensity of contact 13228 reaching ITL and animation progress reaching touch input to display output transition point 13238. FIG. 8P also shows the entirety of âToolsâ sub-menu 13240. FIGS. 8Q-8T illustrate the animation of âToolsâ sub-menu 13240 progressing as intensity of contact 13228 increases above ITL in accordance with a second touch input to display output response. FIGS. 8U-8V illustrate lift-off of contact 13228 and an animation that returns (e.g., bounces back) the graphical representation of âToolsâ sub-menu 13240 to the state shown in FIG. 8P.
 FIGS. 9A-9C are flow diagrams illustrating method 13300 of transitioning between input-output relationships (e.g., touch input to display output relationships) in accordance with some embodiments. Method 13300 is performed at an electronic device (e.g., device 300, FIG. 3, or portable multifunction device 100, FIG. 1A) with a display and a touch-sensitive surface. In some embodiments, the display is a touch screen display and the touch-sensitive surface is on the display. In some embodiments, the display is separate from the touch-sensitive surface. Some operations in method 13300 are, optionally, combined and/or the order of some operations is, optionally, changed.
As described below, method 13300 provides an intuitive way to transition between input-output relationships. The method reduces the cognitive burden on a user when navigating user interface hierarchies, thereby creating a more efficient human-machine interface. For battery-operated electronic devices, enabling a user to transition between touch input to display output relationships faster and more efficiently conserves power and increases the time between battery charges.
In some embodiments, the device displays (13301) a user interface that includes a plurality of user interface objects, where the plurality of user interface objects respond to press inputs having intensity above corresponding activation intensity thresholds (e.g., activation intensity thresholds that correspond to respective ones of the user interface objects) and a respective activation intensity threshold for two or more of the user interface objects is the same as a transitional intensity value. For example, one or more buttons, links, menus, or other selectable user interface elements are selected by the device in response to detecting a contact with intensity above a transitional intensity value while a corresponding focus selector is over the user interface element. In these embodiments, for example, in FIG. 8N one or more of the menu options in menu bar 13227 have the same ITL and input-output transition point 13238 as the âToolsâ option.
The device detects (13302) a contact (e.g., a finger contact) on the touch-sensitive surface. For example, in FIG. 8A the device detects contact 13202 on touch-sensitive surface 451.
The device determines (13304) a location of the contact on the touch-sensitive surface (e.g., a current (x,y) position of a representative point in the contact, such as the centroid of the contact). For example, the device in FIG. 8A determines the position of contact 13202 on touch-sensitive surface 451.
The device determines (13306) an intensity of the contact on the touch-sensitive surface. In some embodiments, determining the intensity of the contact on the touch-sensitive surface includes generating a plurality of measurements of the intensity of the contact over time so as to detect changes in the intensity of the contact over time. For example, the device in FIG. 8A determines intensity of contact 13202 on touch-sensitive surface 451.
The device displays (13308) a response in accordance with the detected contact (e.g., displaying a response in accordance with an intensity of the contact and/or a change in intensity of the contact), the response being based at least in part on an input-output mapping of intensity to response at the location of the contact on the touch-sensitive surface. For example, in FIGS. 8B-8K the device displays an animation progression in accordance with intensity of contact 13202.
The input-output mapping includes (13310), for a respective location on the touch-sensitive surface: a first input-output relationship between intensity and response over a first range of intensity values, a second input-output relationship between intensity and response over a second range of intensity values, the second range of intensity values being different from the first range of intensity values, and a transitional intensity value where the first range of intensity values meets or overlaps the second range of intensity values, where, at the transitional intensity value: the first input-output relationship has a first rate of change of response with change in intensity, the second input-output relationship has a second rate of change of response with change in intensity, and the first rate of change is substantially the same as the second rate of change. In some embodiments, the first rate of change is substantially the same as the second rate of change when the first rate of change is within a margin of 10% or 20% of the second rate of change. In some embodiments, the first rate of change is the same as the second rate of change. For example, in FIGS. 8N-8T the device displays an animation progressing in accordance with intensity of contact 13228. In this example, FIGS. 8N-8O illustrate the animation progressing in accordance with a first input-output relationship as intensity of contact 13228 increases from slightly above IT0 to slightly below ITL, FIG. 8P illustrates a smooth transition in the animation at transitional intensity value ITL, and FIGS. 8Q-8T illustrate the animation progressing in accordance with a second input-output relationship as intensity of contact 13228 increases above ITL.
In some embodiments, the second input-output relationship and the first input-output relationship have (13312) a same output at the transitional intensity value (e.g., there is a continuous transition between the first input-output relationship and the second input-output relationship). For example, FIGS. 8O-8Q illustrate a continuous transition in animation progression at input-output transition point 13238 corresponding to transitional intensity value ITL.
In some embodiments, the first input-output relationship is (13314) linear. For example, in FIG. 8L first input-output response 13216, corresponding to first range of intensity values 13212, is linear.
In some embodiments, the second input-output relationship is (13316) non-linear (e.g., the second input-output relationship is a cubic spline curve). For example, in FIG. 8L second input-output response 13218, corresponding to second range of intensity values 13214, is non-linear.
In some embodiments, the second input-output relationship asymptotically approaches (13318) a maximum output as intensity of the contact increases above the transition intensity value. For example, an animation has a maximum extent and the maximum extent of the animation is approached asymptotically as the intensity of the contact increases toward a respective maximum intensity at the location of the contact on the touch-sensitive surface. In FIGS. 8Q-8T, for example, the animation asymptotically approaches maximum extent 13240 as intensity of contact 13228 increases toward the respective maximum intensity corresponding to the location of contact 13228 on touch-sensitive display 13222.
In some embodiments, a first property of the device (e.g., a dynamic range of the device for detecting intensity of a contact on the touch-sensitive surface) varies (13320) at different locations on the touch-sensitive surface. In some implementations, the first input-output relationship is the same at a first location and a second location on the touch-sensitive surface and the second input-output relationship is different at the first location than at the second location on the touch-sensitive surface. For example, the second input-output relationship is selected or defined by the device in response to current conditions of the device, so as to provide a smooth transition from the fixed first input-output relationship to the dynamic second input-output relationship while also taking into account limitations on detecting intensity at the location of the contact, such as the dynamic range of intensity detection at the location of the contact. In these embodiments, for example, the first input-output relationship in FIGS. 8N-8P is the same for different locations of contact 13228 on touch-sensitive display 13222 and the second input-output relationship in FIGS. 8Q-8T is different for different locations of contact 13228 on touch-sensitive display 13222.
In some embodiments, the response includes (13322) changing a current value of a property from a first value to a second value in a predefined range of values. For example, changing the files animation progress from a first value in FIG. 8B to a second value in FIG. 8C.
In some embodiments, the response includes (13324) adjusting one or more of: volume, brightness, user interface object spacing, user interface object size, user interface object opacity, content scrubbing, and animation progress. For example, successive adjustments to a files animation progress is illustrated in FIGS. 8B-8K.
It should be understood that the particular order in which the operations in FIGS. 9A-9C have been described is merely exemplary and is not intended to indicate that the described order is the only order in which the operations could be performed. One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments) are also applicable in an analogous manner to method 13300 described above with respect to FIGS. 9A-9C. For example, the contacts, contact locations, contact intensities, user interfaces, input-output mappings, input-output relationships, and responses described above with reference to method 13300 optionally have one or more of the characteristics of the contacts, contact locations, contact intensities, user interfaces, input-output mappings, input-output relationships, and responses described herein with reference to other methods described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments). For brevity, these details are not repeated here.
In accordance with some embodiments, FIG. 10 shows a functional block diagram of an electronic device 13400 configured in accordance with the principles of the various described embodiments. The functional blocks of the device are, optionally, implemented by hardware, software, or a combination of hardware and software to carry out the principles of the various described embodiments. It is understood by persons of skill in the art that the functional blocks described in FIG. 10 are, optionally, combined or separated into sub-blocks to implement the principles of the various described embodiments. Therefore, the description herein optionally supports any possible combination or separation or further definition of the functional blocks described herein. As shown in FIG. 10, electronic device 13400 includes display unit 13402 configured to display a response in accordance with a detected contact, touch-sensitive surface unit 13404 configured to receive user contacts, one or more sensor units 13405 configured to detect intensity of contacts with the touch-sensitive surface unit, and processing unit 13406 coupled to display unit 13402, touch-sensitive surface unit 13404, and sensor units 13405. In some embodiments, processing unit 13406 includes detecting unit 13408, determining unit 13410, and display enabling unit 13412.
Processing unit 13406 is configured to detect (e.g., with detecting unit 13408) a contact on the touch-sensitive surface unit, determine (e.g., with determining unit 13410) a location of the contact on the touch-sensitive surface unit, determine (e.g., with determining unit 13410) an intensity of the contact on the touch-sensitive surface unit, and enable display of (e.g., with display enabling unit 13412) a response in accordance with the detected contact, the response being based at least in part on an input-output mapping of intensity to response at the location of the contact on the touch-sensitive surface unit. The input-output mapping includes, for a respective location on the touch-sensitive surface unit, a first input-output relationship between intensity and response over a first range of intensity values, a second input-output relationship between intensity and response over a second range of intensity values, the second range of intensity values being different from the first range of intensity values, and a transitional intensity value where the first range of intensity values meets or overlaps the second range of intensity values. At the transitional intensity value, the first input-output relationship has a first rate of change of response with change in intensity, the second input-output relationship has a second rate of change of response with change in intensity, and the first rate of change is substantially the same as the second rate of change.
In some embodiments, the second input-output relationship and the first input-output relationship have a same output at the transitional intensity value.
In some embodiments, the first input-output relationship is linear.
In some embodiments, the second input-output relationship is non-linear.
In some embodiments, the second input-output relationship asymptotically approaches a maximum output as intensity of the contact increases above the transition intensity value.
In some embodiments, processing unit 13406 is further configured to enable display of (e.g., with display enabling unit 13412) a user interface that includes a plurality of user interface objects, where the plurality of user interface objects respond to press inputs having an intensity above corresponding activation intensity thresholds, and a respective activation intensity threshold for two or more of the user interface objects is the same as the transitional intensity value.
In some embodiments, a first property of the device varies at different locations on touch-sensitive surface unit 13404, the first input-output relationship is the same at a first location and a second location on touch-sensitive surface unit 13404, and the second input-output relationship is different at the first location than at the second location on touch-sensitive surface unit 13404.
In some embodiments, the response includes changing a current value of a property from a first value to a second value in a predefined range of values.
In some embodiments, the response includes adjusting one or more of: volume, brightness, user interface object spacing, user interface object size, user interface object opacity, content scrubbing, and animation progress.
The operations in the information processing methods described above are, optionally implemented by running one or more functional modules in information processing apparatus such as general purpose processors (e.g., as described above with respect to FIGS. 1A and 3) or application specific chips. The operations described above with reference to FIGS. 9A-9C is optionally implemented by components depicted in FIGS. 1A-1B or FIG. 10. For example, detection operation 13302, determining operations 13304 and 13306, and displaying operation 13308 are, optionally, implemented by event sorter 170, event recognizer 180, and event handler 190. Event monitor 171 in event sorter 170 detects a contact on touch-sensitive display 112, and event dispatcher module 174 delivers the event information to application 136-1. A respective event recognizer 180 of application 136-1 compares the event information to respective event definitions 186, and determines whether a first contact at a first location on the touch-sensitive surface corresponds to a predefined event or sub-event, such as selection of an object on a user interface. When a respective predefined event or sub-event is detected, event recognizer 180 activates an event handler 190 associated with the detection of the event or sub-event. Event handler 190 optionally utilizes or calls data updater 176 or object updater 177 to update the application internal state 192. In some embodiments, event handler 190 accesses a respective GUI updater 178 to update what is displayed by the application. Similarly, it would be clear to a person having ordinary skill in the art how other processes can be implemented based on the components depicted in FIGS. 1A-1B.
Adjusting Outputs with Changes in Contact Intensity and Varying Dynamic Range of Intensity Detection
Many electronic devices have touch-sensitive surfaces. The touch-sensitive surfaces optionally utilizes multiple intensity sensors and have a maximum intensity detection threshold that varies with location on the touch-sensitive surface. This variation in maximum intensity detection threshold can be addressed by using a uniform maximum intensity detection threshold for the whole touch-sensitive surface that is a lowest common denominator maximum intensity detection threshold. However, this approach keeps the device from being used to its full potential and thus provides a less efficient and effective user interface. The embodiments described below improve on these methods by dynamically adjusting input-output relationships to take advantage of maximum intensity detection thresholds that are higher than the maximum intensity thresholds on the least sensitive portions of the touch-sensitive surface. For example, in some circumstances, a touch-sensitive surface with multiple intensity sensors has, at a first location, a maximum intensity corresponding to 500 g of force, and, at a second location, a maximum intensity corresponding to 2000 g of force. In this example, it is desirable to utilize the additional intensity range at the second location. The embodiments described below provide an efficient and intuitive way of adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection, thereby enabling the device to control convenient and efficient user interfaces.
 FIGS. 11B-11U illustrate exemplary user interfaces for adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection in accordance with some embodiments. The user interfaces in these figures are used to illustrate the processes described below, including the processes described below with reference to FIGS. 12A-12D. FIGS. 11B-11J and 11M-11U include intensity diagrams that show the current intensity of the contact on the touch-sensitive surface relative to a plurality of intensity thresholds including a respective threshold (e.g., âITDâ). In some embodiments, operations similar to those described below with reference to ITD are performed with reference to a different intensity threshold (e.g., âITLâ).
 FIG. 11A illustrates an example of adjusting outputs in response to change in inputs (e.g., change in intensity of a finger contact). FIG. 11A shows first input-output mapping 13501 including: first input-output response 13502 (e.g., a linear response) corresponding to a range of intensity values between ITL and ITD, input-output response transition point 13504 corresponding to intensity ITD, a smooth transition to second input-output response 13506 (e.g., a cubic spline response) corresponding to a range of intensity values between ITD and ITMAX1, and the output approaching max output 13508 as the input approaches ITMAX1. FIG. 11A further shows second input-output mapping 13509 including: first input-output response 13510 corresponding to a range of intensity values between ITL and ITD, input-output response transition point 13512 corresponding to intensity ITD, a smooth transition to second input-output response 13514 corresponding to a range of intensity values between ITD and ITMAX2, and the output approaching max output 13516 as the input approaches ITMAX2.
 FIG. 11B illustrates an example user interface 13520, including menu bar 13521 and Tools submenu 13523, displayed on touch-sensitive display 13518. FIG. 11B further illustrates intensity sensors 13522 to detect the intensity of contacts on touch-sensitive display 13518. FIG. 11B also shows contact 13524 and intensity of contact 13524 as well as additional dynamic range 13526 corresponding to the relative location of contact 13524 on touch-sensitive display 13518 and intensity sensors 13522. FIG. 11B further shows contact 13528 and intensity of contact 13528 as well as additional dynamic range 13530 corresponding to the relative location of contact 13528 on touch-sensitive display 13518 and intensity sensors 13522.
 FIGS. 11C-11L illustrate an example of adjusting the progress of an animation in accordance with intensity of a contact. FIG. 11C illustrates user interface 13532, including files icon 13534, displayed on display 450 of a device (e.g., device 300). FIG. 11C further illustrates contact 13540 detected on touch-sensitive surface 451, intensity of contact 13540 below ITL, intensity sensors 13538, and additional dynamic range 13542 corresponding to the relative location of contact 13540 on touch-sensitive surface 451 and intensity sensors 13538. In accordance with some embodiments, FIGS. 11C-11L illustrate a displayed representation of focus selector (e.g., cursor 13536) corresponding to input 13540 detected on touch-sensitive surface 451. FIGS. 11D-11G illustrate an animation displaying the files associated with files icon 13505 progressing in accordance with a first input-output relationship as intensity of contact 13540 increases from ITL to just below ITD. FIG. 11H illustrates a transition point in the animation progress as intensity of contact 13540 reaches ITD. FIGS. 11I-11J illustrate the animation progressing in accordance with a second input-output relationship as intensity of contact 13540 increases beyond ITD. FIGS. 11K-11L illustrate lift-off of contact 13540 and an animation that returns (e.g., bounces back) the graphical representation of files associated with file icon 13534 to the state shown in FIG. 11H.
In some embodiments, the device is an electronic device with a separate display (e.g., display 450) and a separate touch-sensitive surface (e.g., touch-sensitive surface 451). In some embodiments, the device is portable multifunction device 100, the display is touch-sensitive display system 112, and the touch-sensitive surface includes contact intensity sensor(s) 165 on the display (FIG. 1A).
In some embodiments, the device is an electronic device with a separate display (e.g., display 450) and a separate touch-sensitive surface (e.g., touch-sensitive surface 451). In some embodiments, the device is portable multifunction device 100, the display is touch-sensitive display system 112, and the touch-sensitive surface includes contact intensity sensors 165 on the display (FIG. 1A). For convenience of explanation, the embodiments described with reference to FIGS. 11C-11U will be discussed with reference to display 450 and a separate touch-sensitive surface 451. However, analogous operations are, optionally, performed on a device with a touch-sensitive display system 112 in response to detecting the contacts described in FIGS. 11C-11U on the touch-sensitive display system 112 while displaying the user interfaces shown in FIGS. 11C-11U on the touch-sensitive display system 112; in such embodiments, the focus selector is, optionally: a respective contact, a representative point corresponding to a contact (e.g., a centroid of a respective contact or a point associated with a respective contact), or a centroid of two or more contacts detected on the touch-sensitive display system 112, in place of cursor 13536.
 FIGS. 11M-11U illustrate another example of adjusting the progress of an animation in accordance with intensity of a contact. FIG. 11M illustrates user interface 13544, including files icon 13546, displayed on display 450 of a device (e.g., device 300). FIG. 11M further illustrates contact 13548 detected on touch-sensitive surface 451, intensity of contact 13548 below ITL, intensity sensors 13538, and additional dynamic range 13550 corresponding to the relative location of contact 13548 on touch-sensitive surface 451 and intensity sensors 13538. FIGS. 11N-11Q illustrate an animation displaying the files associated with files icon 13546 progressing in accordance with a first input-output relationship as intensity of contact 13548 increases from ITL to just below ITD. FIG. 11R illustrates a transition point in the animation progress as intensity of contact 13548 reaches ITD. FIGS. 11S-11U illustrate the animation progressing in accordance with a second input-output relationship as intensity of contact 13548 increases beyond ITD.
 FIGS. 12A-12D are flow diagrams illustrating method 13600 of adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection in accordance with some embodiments. Method 13600 is performed at an electronic device (e.g., device 300, FIG. 3, or portable multifunction device 100, FIG. 1A) with a display and a touch-sensitive surface. In some embodiments, the display is a touch screen display and the touch-sensitive surface is on the display. In some embodiments, the display is separate from the touch-sensitive surface. Some operations in method 13600 are, optionally, combined and/or the order of some operations is, optionally, changed.
As described below, method 13600 provides an intuitive way to adjust user interface outputs with changes in contact intensity and in accordance with a dynamic input range that varies according to location of the contact. The method reduces the cognitive burden on a user when navigating user interface hierarchies, thereby creating a more efficient human-machine interface. For battery-operated electronic devices, enabling a user to navigate user interface hierarchies faster and more efficiently, while adjusting outputs with changes in contact intensity and varying dynamic range of intensity detection, conserves power and increases the time between battery charges.
The device detects (13602) a contact (e.g., a finger contact) on the touch-sensitive surface. For example, in FIG. 11B the device detects contact 13524 on touch-sensitive display 13518.
The device determines (13604) a respective location of the contact on the touch-sensitive surface (e.g., a current (x,y) position of a representative point in the contact, such as the centroid of the contact), where the respective location on the touch-sensitive surface has a respective dynamic range for detecting intensity of the contact. For example, the device in FIG. 11B determines the location of contact 13524 and corresponding additional intensity range 13526.
In some embodiments, the device determining a respective dynamic range for the respective location includes (13606) retrieving stored information concerning the dynamic range of the device for detecting intensity of the contact at the respective location (e.g., information that was previously stored at the device or at a remote computer system). For example, in these embodiments, the device in FIG. 11B retrieves stored information concerning additional dynamic range 13526 corresponding to the location of contact 13524.
The device determines (13608) an intensity of the contact on the touch-sensitive surface at the respective location. In some embodiments, determining the intensity of the contact on the touch-sensitive surface includes making a plurality of measurements of the intensity of the contact over time so as to detect changes in the intensity of the contact over time. For example, the device in FIG. 11B determines intensity of contact 13524.
In some embodiments, the sensors to detect intensity of contacts with the touch-sensitive surface include (13610) a plurality of intensity sensors placed around a perimeter of the touch-sensitive surface (e.g., the intensity sensors are located proximate to the corners of a trackpad) and locations near the perimeter of the touch-sensitive surface have a lower dynamic range than locations near a center of the touch-sensitive surface. For example, the device in FIG. 11C includes intensity sensors 13538 located proximate to the corners of touch-sensitive surface 451.
The device detects (13612) a change in intensity of the contact. In some embodiments, the change in intensity of the contact is detected while the contact remains at the respective location. For example, FIGS. 11C-11D illustrate a device detecting contact 13540 on touch-sensitive surface 451 and an increase in intensity of contact 13540 from below ITL in FIG. 11C to ITL in FIG. 11D.
In response to detecting the change in intensity of the contact at the respective location on the touch-sensitive surface, the device adjusts (13614) an output. For example, in FIGS. 11C-11L the device adjusts an animation progression of files associated with files icon 13534.
In accordance with a determination that the respective location has (13616) a first dynamic range, the output is adjusted in accordance with the change in the intensity of the contact at the respective location and a first input-output mapping of intensity to response that corresponds to the first dynamic range. For example, in FIGS. 11C-11L the device adjusts an animation progression of files associated with files icon 13534. FIGS. 11C-11J further illustrate the location of contact 13540 on touch-sensitive surface 451 and corresponding additional dynamic range 13542. In this example, the animation progresses in accordance with changes in intensity of contact 13540 and an input-output mapping corresponding to additional dynamic range 13542.
Conversely, in accordance with a determination that the respective location has (13618) a second dynamic range that is different from the first dynamic range, the output is adjusted in accordance with the change in the intensity of the contact at the respective location and a second input-output mapping of intensity to response that corresponds to the second dynamic range, where the second input-output mapping is different from the first input-output mapping. For example, in FIGS. 11M-11U the device adjusts an animation progression of files associated with files icon 13546. FIGS. 11M-11U further illustrate the location of contact 13548 on touch-sensitive surface 451 and corresponding additional dynamic range 13550, which is different from additional dynamic range 13542 in FIG. 11C. In this example, the animation progresses in accordance with changes in intensity of contact 13548 and an input-output mapping corresponding to additional dynamic range 13550.
In some embodiments, the second dynamic range is higher (13620) than the first dynamic range (e.g., the second dynamic range includes a larger range of intensity values than the first dynamic range) and the second input-output mapping maps intensity to output values for one or more intensity values that are outside of the first dynamic range (e.g., the second dynamic range includes a maximum detectable intensity that is higher than the maximum detectable intensity of the first dynamic range). For example, in FIG. 11B the device detects contact 13524 at a first location with corresponding additional dynamic range 13526 and contact 13528 at a second location with corresponding additional dynamic range 13530. In this example, contact 13528 at the second location has a larger dynamic range that includes multiple intensity values, which are outside of the dynamic range associated with the location of contact 13524.
In some embodiments, an upper bound of the first dynamic range is determined (13622) based on a first intensity that corresponds to a first intensity detection limit at a first location on the touch-sensitive surface and an upper bound of the second dynamic range is determined based on a second intensity, different from the first intensity, that corresponds to a second intensity detection limit at a second location, different from the first location, on the touch-sensitive surface. In some embodiments, the first intensity detection limit is determined based on an actual, theoretical or estimated intensity that is a maximum intensity that the device is capable of detecting at the first location. In some embodiments, the second intensity detection limit is determined based on an actual, theoretical or estimated intensity that is a maximum intensity that the device is capable of detecting at the second location. In these embodiments, for example, in FIG. 11B additional dynamic range 13526 corresponds to a first intensity detection limit associated with the location of contact 13524 and additional dynamic range 13530 corresponds to a second intensity detection limit associated with the location of contact 13528.
In some embodiments, the first input-output mapping asymptotically approaches (13624) a respective maximum output as the device detects intensity values close to the first intensity (e.g., the upper bound of the first dynamic range) and the second input-output mapping asymptotically approaches the respective (e.g., the same respective) maximum output as the device detects intensity values close to the second intensity (e.g., the upper bound of the second dynamic range). In some embodiments, both input-output mappings approach a same final animation state at a maximum detectable intensity, but the maximum detectable intensities of the input-output mappings are different. Thus, the device reaches the final animation state at the first location at an intensity that is different from the intensity at which the device reaches the final animation state at the second location. For example, FIG. 11A illustrates first input-output mapping 13501 with max response value 13508 and second input-output mapping 13509 with max response value 13516. FIG. 11A further illustrates the output response in first input-output mapping 13501 asymptotically approaching max response value 13508 and the output response in second input-output mapping 13509 asymptotically approaching max response value 13516. In this example, and in these embodiments, max response value 13508 is the same as max response value 13516.
In some embodiments, the first input-output mapping maps (13626) a first range of intensity values to a respective range of output and the second input-output mapping maps a second range of intensity values, different from the first range of intensity values, to the respective range (e.g., the same respective range) of output. For example, at the first location 0-500 g of force is mapped to a predefined range of output values (e.g., 0-130% animation progression), and at the second location 0-2000 g of force is mapped to the same predefined range of output values (e.g., 0-130% animation progression). In these embodiments, for example, the animation progression illustrated in FIGS. 11C-11J corresponds to a first input-output mapping and the animation progression illustrated in FIGS. 11M-11U corresponds to a second input-output mapping. In this example, and in these embodiments, the animation progression illustrated in FIGS. 11C-11J corresponds to the same respective output range as the animation progression illustrated in FIGS. 11M-11U.
In some embodiments, the first input-output mapping has (13628) a first portion (e.g., a linear response portion) that corresponds to a range of intensity values below a transition intensity value and a second portion (e.g., a non-linear response portion) that corresponds to a range of intensity values above the transition intensity value. In some implementations, the second input-output mapping has a first portion (e.g., a linear response portion) that corresponds to a range of intensity values below the transition intensity value and a second portion (e.g., a non-linear response portion) that corresponds to a range of intensity values above the transition intensity value. In some implementations, the first portion of the first input-output mapping is the same as the first portion of the second input-output mapping (e.g., linear portion) and the second portion of the first input-output mapping is different from the second portion of the second input-output mapping (e.g., cubic portion). For example, FIG. 11A shows first input-output mapping 13501 including first range of intensity values 13502 (e.g., a linear portion) corresponding to intensities between ITL and ITD and second range of intensity values 13506 (e.g., a non-linear portion) corresponding to intensities between ITD and ITMAX1. FIG. 11A further shows second input-output mapping 13509 including first range of intensity values 13510 corresponding to intensities between ITL and ITD and second range of intensity values 13514 corresponding to intensities between ITD and ITMAX2. It is noted that that ITMAX2 is different from ITMAX1, and in this example represents a higher intensity value than ITMAX1. In accordance with these embodiments, first range of intensity values 13502 in first input-output mapping 13501 is the same as first range of intensity values 13510 in second input-output mapping 13509 and second range of intensity values 13506 in first input-output mapping 13501 is different from second range of intensity values 13514 in second input-output mapping 13509.
In some embodiments, adjusting the output of the device includes (13630), in accordance with a determination that a maximum intensity of the contact is below the transition intensity value, generating (13632) a same output in accordance with the maximum intensity of the contact without regard to whether the respective location has the first dynamic range or the second dynamic range and, in accordance with a determination that a maximum intensity of the contact is above the transition intensity value, generating (13634) different outputs in accordance with the maximum intensity of the contact and whether the respective location has the first dynamic range or the second dynamic range (e.g., when the respective location has the first dynamic range, the device generates a first output, and when the respective location has the second dynamic range, the device generates a second output different from the first output). For example, if the device detected two substantially identical press inputs at two different locations on the touch-sensitive surface (e.g., a first location with a first dynamic range and a second location with the second dynamic range, with the two inputs detected at different times), the device produces outputs that depend at least in part on the dynamic range of the locations and whether the intensity of the contact is above the transition intensity. In this example, when the inputs are below the transition intensity, the device produces substantially identical outputs at the two locations, but, when the inputs are above the transition intensity, the device produces different outputs at the two locations even if the two inputs are substantially identical. Thus, in this example, the differences in the output, due to differing dynamic range of the location of the press input, are confined to the range of intensities above the transition intensity. Consequently, in this example, the device maintains a consistent the user experience across the touch-sensitive surface for inputs with intensities below the transition intensity while also taking advantage of increased dynamic range of some portions of the touch-sensitive surface (e.g., the center of the touch-sensitive surface, an locations near the center (e.g., within a predefined distance of the center, or within a predefined window around the center) of the touch-sensitive surface), to provide additional feedback to the user.
In some embodiments, while adjusting output of the device in accordance with the first input-output mapping, the device detects (13636) movement of the contact from a first location on the touch-sensitive surface with the first dynamic range to a second location on the touch-sensitive surface with the second dynamic range and, in response to detecting the movement of the contact from the first location to the second location, the device continues (13638) to use the first input-output mapping to adjust the output of the device while the contact is at the second location. In these embodiments, the animation illustrated in FIGS. 11C-11J is unchanged by subsequent movement of contact 13540.
Conversely, in some embodiments, while adjusting output of the device in accordance with the first input-output mapping, the device detects (13640) movement of the contact from a first location on the touch-sensitive surface with the first dynamic range to a second location on the touch-sensitive surface with the second dynamic range and, in response to detecting the movement of the contact from the first location to the second location, the device uses (13642) the second input-output mapping to adjust the output of the device while the contact is at the second location. In some embodiments, there is a smooth transition between the first input-output mapping and the second input-output mapping, so that, if the intensity of the contact is maintained at a respective intensity, the output gradually changes as the contact moves from the first location to the second location. In these embodiments, the animation illustrated in FIGS. 11C-11J is adjusted in accordance with the dynamic range corresponding to the location of contact 13540 resulting from subsequent movement of contact 13540.
It should be understood that the particular order in which the operations in FIGS. 12A-12D have been described is merely exemplary and is not intended to indicate that the described order is the only order in which the operations could be performed. One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that details of other processes described herein with respect to other methods described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments) are also applicable in an analogous manner to method 13600 described above with respect to FIGS. 12A-12D. For example, the contacts, gestures, user interface objects, intensity thresholds, focus selectors, outputs, and animations described above with reference to method 13600 optionally have one or more of the characteristics of the contacts, gestures, user interface objects, intensity thresholds, focus selectors, outputs, and animations described herein with reference to other methods described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments). For brevity, these details are not repeated here.
In accordance with some embodiments, FIG. 13 shows a functional block diagram of an electronic device 13700 configured in accordance with the principles of the various described embodiments. The functional blocks of the device are, optionally, implemented by hardware, software, or a combination of hardware and software to carry out the principles of the various described embodiments. It is understood by persons of skill in the art that the functional blocks described in FIG. 13 are, optionally, combined or separated into sub-blocks to implement the principles of the various described embodiments. Therefore, the description herein optionally supports any possible combination or separation or further definition of the functional blocks described herein.
As shown in FIG. 13, electronic device 13700 includes display unit 13702, touch-sensitive surface unit 13704 configured to receive user contacts, one or more sensor units 13705 configured to detect intensity of contacts with the touch-sensitive surface unit, and processing unit 13706 coupled to display unit 13702, touch-sensitive surface unit 13704, and sensor units 13705. In some embodiments, processing unit 13706 includes location detecting unit 13708, contact intensity detecting unit 13709, determining unit 13710, and adjusting unit 13712.
Processing unit 13706 is configured to detect (e.g., with contact intensity detecting unit 13709) a contact on touch-sensitive surface unit 13704, determine (e.g., with determining unit 13710) a respective location of the contact on touch-sensitive surface unit 13704, where the respective location on touch-sensitive surface unit 13704 has a respective dynamic range for detecting intensity of the contact. Processing unit 13706 is further configured to determine (e.g., with determining unit 13710) an intensity of the contact on touch-sensitive surface unit 13704 at the respective location and detect (e.g., with contact intensity detecting unit 13709) a change in intensity of the contact. Processing unit 13706 is further configured to, in response to detecting the change in intensity of the contact at the respective location on touch-sensitive surface 13704, adjust (e.g., with adjusting unit 13712) an output of the device, where, in accordance with a determination that the respective location has a first dynamic range, the output is adjusted in accordance with the change in the intensity of the contact at the respective location and a first input-output mapping of intensity to response that corresponds to the first dynamic range, and, in accordance with a determination that the respective location has a second dynamic range that is different from the first dynamic range, the output is adjusted in accordance with the change in the intensity of the contact at the respective location and a second input-output mapping of intensity to response that corresponds to the second dynamic range, where the second input-output mapping is different from the first input-output mapping.
In some embodiments, the device determines (e.g., with determining unit 13710) a respective dynamic range for the respective location includes retrieving stored information concerning the dynamic range of the device for detecting intensity of the contact at the respective location.
In some embodiments, the second dynamic range is higher than the first dynamic range and the second input-output mapping maps intensity to output values for one or more intensity values that are outside of the first dynamic range.
In some embodiments, an upper bound of the first dynamic range is determined (e.g., with determining unit 13710) based on a first intensity that corresponds to a first intensity detection limit at a first location on touch-sensitive surface unit 13704 and an upper bound of the second dynamic range is determined (e.g., with determining unit 13710) based on a second intensity, different from the first intensity, that corresponds to a second intensity detection limit at a second location, different from the first location, on touch-sensitive surface unit 13704.
In some embodiments, the first input-output mapping asymptotically approaches a respective maximum output as the device detects (e.g., with contact intensity detecting unit 13709) intensity values close to the first intensity and the second input-output mapping asymptotically approaches the respective maximum output as the device detects (e.g., with contact intensity detecting unit 13709) intensity values close to the second intensity.
In some embodiments, the first input-output mapping maps a first range of intensity values to a respective range of output and the second input-output mapping maps a second range of intensity values, different from the first range of intensity values, to the respective range of output.
In some embodiments, the first input-output mapping has a first portion that corresponds to a range of intensity values below a transition intensity value and a second portion that corresponds to a range of intensity values above the transition intensity value, the second input-output mapping has a first portion that corresponds to a range of intensity values below the transition intensity value and a second portion that corresponds to a range of intensity values above the transition intensity value, the first portion of the first input-output mapping is the same as the first portion of the second input-output mapping, and the second portion of the first input-output mapping is different from the second portion of the second input-output mapping.
In some embodiments, adjusting (e.g., with adjusting unit 13712) the output of the device includes, in accordance with a determination that a maximum intensity of the contact is below the transition intensity value, generating a same output in accordance with the maximum intensity of the contact without regard to whether the respective location has the first dynamic range or the second dynamic range and, in accordance with a determination that a maximum intensity of the contact is above the transition intensity value, generating different outputs in accordance with the maximum intensity of the contact and whether the respective location has the first dynamic range or the second dynamic range.
In some embodiments, sensors units 13705 configured to detect intensity of contacts with touch-sensitive surface unit 13704 include a plurality of intensity sensors placed around a perimeter of touch-sensitive surface unit 13704 and locations near the perimeter of touch-sensitive surface unit 13704 have a lower dynamic range than locations near a center of touch-sensitive surface unit 13704.
In some embodiments, processing unit 13706 is further configured to, while adjusting (e.g., with adjusting unit 13712) output of the device in accordance with the first input-output mapping, detect (e.g., with location detecting unit 13708) movement of the contact from a first location on touch-sensitive surface unit 13704 with the first dynamic range to a second location on touch-sensitive surface unit 13704 with the second dynamic range and, in response to detecting the movement of the contact from the first location to the second location, continue to use the first input-output mapping to adjust (e.g., with adjusting unit 13712) the output of the device while the contact is at the second location.
In some embodiments, processing unit 13706 is further configured to, while adjusting (e.g., with adjusting unit 13712) output of the device in accordance with the first input-output mapping, detect (e.g., with location detecting unit 13708) movement of the contact from a first location on touch-sensitive surface unit 13704 with the first dynamic range to a second location on touch-sensitive surface unit 13704 with the second dynamic range and, in response to detecting the movement of the contact from the first location to the second location, use the second input-output mapping to adjust (e.g., with adjusting unit 13712) the output of the device while the contact is at the second location.
The operations in the information processing methods described above are, optionally, implemented by running one or more functional modules in information processing apparatus such as general purpose processors (e.g., as described above with respect to FIGS. 1A and 3) or application specific chips.
The operations described above with reference to FIGS. 12A-12D are, optionally, implemented by components depicted in FIGS. 1A-1B or FIG. 13. For example, detection operations 13602, 13612, 13636, and 13640, determining operations 13604 and 13608, and adjusting operation 13614 are, optionally, implemented by event sorter 170, event recognizer 180, and event handler 190. Event monitor 171 in event sorter 170 detects a contact on touch-sensitive display 112, and event dispatcher module 174 delivers the event information to application 136-1. A respective event recognizer 180 of application 136-1 compares the event information to respective event definitions 186, and determines whether a first contact at a first location on the touch-sensitive surface corresponds to a predefined event or sub-event, such as selection of an object on a user interface. When a respective predefined event or sub-event is detected, event recognizer 180 activates an event handler 190 associated with the detection of the event or sub-event. Event handler 190 optionally utilizes or calls data updater 176 or object updater 177 to update the application internal state 192. In some embodiments, event handler 190 accesses a respective GUI updater 178 to update what is displayed by the application. Similarly, it would be clear to a person having ordinary skill in the art how other processes can be implemented based on the components depicted in FIGS. 1A-1B.
It should be understood that the particular order in which the operations have been described above is merely exemplary and is not intended to indicate that the described order is the only order in which the operations could be performed. One of ordinary skill in the art would recognize various ways to reorder the operations described herein. Additionally, it should be noted that the various processes separately described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments) can be combined with each other in different arrangements. For example, the contacts, user interface objects, tactile sensations, intensity thresholds, and/or focus selectors described above with reference to any one of the various processes separately described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments) optionally have one or more of the characteristics of the contacts, gestures, user interface objects, tactile sensations, intensity thresholds, and focus selectors described herein with reference to one or more of the other methods described herein (e.g., those listed in paragraph in the fifth paragraph of the Description of Embodiments). For brevity, all of the various possible combinations are not specifically enumerated here, but it should be understood that the claims described above may be combined in any way that is not precluded by mutually exclusive claim features.
The foregoing description, for purpose of explanation, has been described with reference to specific embodiments. However, the illustrative discussions above are not intended to be exhaustive or to limit the various described embodiments to the precise forms disclosed. Many modifications and variations are possible in view of the above teachings. The embodiments were chosen and described in order to best explain the principles of the various described embodiments and their practical applications, to thereby enable others skilled in the art to best utilize the various described embodiments with various modifications as are suited to the particular use contemplated.