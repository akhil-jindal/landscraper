Method and apparatus for substantially improving the throughput of circuit simulators 
US-4918643-A
At&T Bell Laboratories
1990-04-17
https://patents.google.com/patent/US4918643A/en
TECHNICAL FIELD
1. Field of the Invention
This invention relates to techniques of and apparatus for piecewise-linear modeling and analysis of periodic piecewise-linear systems including closed loop regulated switching mode power systems and periodically driven piecewise-linear systems and in particular is concerned with computation of the steady state operation of such systems. It further concerns achieving accelerated convergence to steady state solutions of periodic piecewise-linear systems by expediting the computation of the sensitivity to subinterval time variations.
2. Background of the Invention
The techniques of piecewise-linear modeling have been widely applied to study and analyze closed-loop regulated switching-mode power systems. One example is the derivation of small-signal models for the power stage of regulated dc-to-dc converters, enabling an engineer to inspect the frequency response of a regulated converter and examine its local stability. Due to specially adapted simulation algorithms, large-signal time-domain simulation of regulated converters through piecewise-linear modeling is becoming available tool to study the long-term transient behavior of regulated converters.
The accuracy of small-signal frequency-domain models hinges upon the accurate determination of the steady-state operating point of the system. Similarly, the accuracy of the computed time-domain large-signal transient response depends upon accurately determining the initial steady-state condition of the system. If the user has a priori knowledge of the system, a steady-state analysis with some simplifying assumptions derived from this knowledge often can be carried out. However, if not much experience has been acquired with the system under study, a brute-force transient simulation with an arbitrarily-set initial operating point is usually carried out until the results of the simulation indicate that the system is sufficiently close to steady-state operation. This is usually a very time-consuming simulation, going through possibly hundreds to thousands of switching cycles, depending on how far the initial operating point is separated from the eventual steady-state operating point.
To make the study of a regulated switching-mode system tractable, the system is often modeled by K different topologies within a switching cycle. The number of topologies K employed in the modeling is a sufficiently large number such that the system description is piecewise-linear in each topology. As a result, the system can be described by a linear vector differential equation and a linear vector algebraic equation for each of the K different topologies. ##EQU1## where x, u, and y are the standard symbols used in control theory for the state vector, the input vector, and the output vector, respectively. It is assumed that there are n state variables in the system. Ak, Bk, Ck, and Dk are matrices which contain numerical entries relating to the component values. These matrices vary from one topology to another. The subscript k is used to indicate that the corresponding matrix is associated with the kth topology.
To keep track of the values of the state variables during one switching cycle, the following convention for symbols is adopted. The symbol xk-l represents the value of the state vector at the entry to the kth topology while the symbol xk represents the value of the state vector at the exit from the kth topology. Similarly, the symbol yk-1 and yk stand for the value of the output vector at the entry and exit of the kth topology, respectively. The symbol tk represents the time duration that the system spends in the kth topology. Without any loss of generality, it is assumed that the system enters the 1st topology at the start of a switching cycle, followed by the 2nd, the 3rd, . . . , and it is in the Kth topology right before the end of a switching cycle. The waveform of one transient cycle of a first-order switching system with three different topologies is illustrated in FIG. 1. Here the system exhibits three subintervals at operation 101, 102 and 103 each subinterval having a different linear circuit topology in response to circuit switching activity. X0, X1, X2, and X3 are various valves at one state vector at the occurrence of switching. X0 is the entry state vector to subinterval 101 and X1 is the exit state vector to subinterval 101, subinterval 101 has a time duration shown by the duration t1. X1, X2, X3, t2 and t3, are defined in a similar consistent manner with respect to subinterval 102, and 103.
Although the system is switching from one topology to another during normal operation, it reduces to K different linear and time-invariant subsystems through the piecewise-linear modeling in (1) and (2). The solution to (1) can be found in any standard treatise on linear control theory.
The solution of (1), evaluated at the time of exit from the kth topology, is summarized here

 x.sub.k =Ï.sub.k (t.sub.k)x.sub.k-1 +A.sub.k -1[Ï.sub.k (t.sub.k)-I]B.sub.k u                                     (3)
where

 Ï.sub.k (t.sub.k)=e.sup.A.sbsp.k.sup.t.sbsp.k          ( 4)
The symbol Ïk (tk) stands for the state transition matrix of a square matrix Ak over a time span of tk.
The reason the system exits the kth topology is because a certain output variable, say the qth component of the output vector yk, drops to zero as a signal to change the system topology. For example, when the current through the diode of a voltage step-up (boost) converter drops from a positive value to zero, the converter goes into a new topology in which neither the transister nor the diode is conducting. Using the general symbol Îºq to represent the qth row of Îº, where Îº is either a matrix or a column vector, the time duration tk can be solved from the relationship ##EQU2## The index q changes from one topology to another since the exit from each topology is normally associated with a different output variable.
Given any initial value xi to the state vector at the start of a cycle of operation, the final value xf of the state vector at the end of the same cycle can be computed by sequentially solving for the k time intervals the evaluation of the propagation equation in (3) and the algebraic equation in (5). The xk vector computed then serves as the initial value of the state vector at the entry to the next topology. According to the convention stated earlier, x0, the state vector at the start of the last topology, is automatically equal to xi. The time duration t1 spent in the 1st topology is determined from (5), and x1, the value of the state vector at the exit of the 1st topology is determined from (3). Similarly, x2 can be computed from the knowledge of x1, x3, from x2, etc. After obtaining xk, the value of the state vector at the exit of the Kth topology, the value of xk is assigned to xf because the Kth topology is the last topology in the switching cycle.
A vector function F (xi), representing the change in the state vector over one switching cycle, is then defined in terms of the initial state vector xi and the final state vector xf [8].

 F(x.sub.i)=x.sub.f -x.sub.i                                ( 6)
In steady state, the value of xi and xf must be identical, resulting in F (x1) being equal to the null vector O. The problem of solving for the steady-state condition of a regulated switching-mode system is then reduced to finding the appropriate state vector x1 that leads to

 F(x.sub.1)=O (7)
To distinguish the solution to (7) from any arbitrary value of X1, the symbol XI is used to represent all solutions to (7), which comprise the steady-state initial state vector. That is, if the simulation is carried out with XI as the initial value of the state vector at the beginning of a cycle, then the final value xf of the state vector at the end of the cycle, which is obtained after the system has experienced K different topologies, should be identical to the initial state vector XI. Such a case is illustrated in FIG. 2 for a 3-topology system. The three different topologies are represented by three separate vector trajectories 201, 202 and 203 respectively. Steady state operation is shown in which in initial state vector xi for a switching cycle is identical to the final store vector xf in the same cycle. Given any arbitrary value of xi, (7) normally is not satisfied and the function F(xi) defined in (6) can be regarded as an error function giving an indication of how far away the given xi is from the steady-state initial state vector XI. The diagram in FIG. 3 represents such a case where the system has not yet reached steady-state operation. The closer F(xi) is to the null vector O, the closer xi is to XI. FIG. 3 discloses waveforms or state vector trajectories 301, 302, and 303 for three successive sub intervals or switched topologies. The system has not reached steady state since there is a difference between one initial state vector xi and the final state vector xf.
Although the error function F(xi) is defined in terms of a difference between xf and xi, it is a continuous function in xi and can be expanded around a small neighborhood of xi through Taylor series expansion ##EQU3## where J(xi) is the Jacobian matrix of the function F(xi) evaluated at xi). The (p,q) entry of the square matrix J(xi) is equal to the partial derivative of the pth component in the function F with respect to the qth component in the argument vector xi. The Jacobian matrix J(xi) is, in essence, a measure of the sensitivity of the steady-state equilibrium condition with respect to the variation in the initial state vector xi.
If the existing value of xi does not satisfy (7), then a correction vector Îxi must be determined so that F(xi +Îxi) is equal to the null vector O. In the method of the Newton-Raphson iteration, the higher-order terms in (8) are ignored so that

 O=F(x.sub.i +Îx.sub.i)=F(x.sub.i)+J(x.sub.i)Îx.sub.i( 9)
giving

 Îx.sub.i =-[J(x.sub.i)].sup.-1 F(x.sub.i)            (10)
With the correction vector computed from (10), the simulation can converge to the steady state at an accelerated pace over that of brute-force simulation. The flow chart shown in FIG. 4 discloses the general algorithm or simulation method used to evaluate the steady-state solution to a periodic piecewise-linear system. This process may be embodied in a circuit simulator or a general purpose computer. After this process is initiated in start 401 an initial state vector xi is selected in 402. A single cycle of operation is simulated in 403 to calculate a final state vector xf. The initial state vector xi and the final state vector xf are compared in 404 to see the extent to which they differ. If the difference is acceptably small a decision is made in 405 that steady state has been achieved. If the difference is too great an iterative process is initiated is to adjust the initial state vector xi by computing a Jacobian matrix J(xi) and employing a Newton-Raphson iteration in 407 to accelerate convergence toward a steady state solution. In practice, the iteration is stopped not when xf is equal to xi, but when the error between xf and xi is small enough to be acceptable. To meaningfully measure the error between xi and x.sub. f, two vectors having the same dimension as the state vector are introduced. First, a normalizing vector XN is defined in terms of the expected maximum magnitudes of the state variables. The qth component of XN is defined as ##EQU4## The choice of the values in XN depends on the individual system under study and they are assigned by the user. For example, if a capacitor is expected to reach a maximum voltage of 70 V in one switching cycle, the corresponding component in XN may be assigned a value of 100 V. The user only needs to supply approximate estimates of the entries in XN.
Once the normalizing vector XN is defined, a relative error vector E(xi) is defined in terms of F(xi) and XN,

 (E(x.sub.i))q=(F(x.sub.i))q/(X.sub.N)q1<q<n                (12)
That is, the qth component of E(xi) is the error between the qth components of xi and xf, normalized by the qth component of XN. A system under study is considered to be in steady-state when the Euclidean norm of E(xi), defined as the square root of the sums of the squares of the individual terms in (12), is smaller than a prescribed tolerance Îµ. Since E(xi) is a normalized error vector, the error tolerance Îµ may be assigned any small positive number less than 10-4, for example.
In order to accurately and efficiently utilize the process of FIG. 4 an accurate and efficient computation of the Jacobian matrix J(xi) is absolutely necessary. If the function F(xi) is explicitly defined in terms of xi as the vector function G(x) is defined in terms of x, the Jacobian matrix would be easily obtained by directly applying partial differentiation to the explicit terms. Unfortunately, F(xj) is implicitly defined in terms of K evaluations of (3) and (5), making the computation of the Jacobian matrix a tedious and indirect process.
Algorithms in the prior art compute the Jacobian matrix associated with the error function defined in (6). These algorithms center on establishing sensitivity circuits to aid in the computation of the Jacobian matrix. In other approaches the sensitivity circuit is obtained through the adjoint network approach while still other approaches obtain the sensitivity circuit through direct partial differentiation of the laws of interconnection, i.e., Kirchhoff's Voltage Law and Kirchhoff's Current Law, and the laws of the elements, i.e., functions relating the voltage and current of individual elements. These prior art algorithms, all assume that the time duration tk spent in any kth topology is a relatively insensitive function of the initial state vector xi. While this assumption holds for most open-loop systems, its validity is in question for a closed-loop regulated system where the timing of the system is a highly sensitive function of the initial state vector due to the closed-loop feedback.
SUMMARY OF THE INVENTION
A method of accelerating the pace at which circuit simulators are able to converge to a steady state solution of a periodic piecewise-linear system or periodically driven piecewise-linear system transforms the problem into finding the solution of a nonlinear function in terms of a state vector, which is then solved by a truncated power series such as the Newton-Raphson iterative procedure. Usage of this method requires the determination of system sensitivity with respect to the state vector. This system sensitivity is determined by solving for the sensitivity of the state vector at the exit of each subinterval of the periodic cycle with respect to the state vector at the entry of the same subinterval. This sensitivity is accurately resolved by considering the sensitivity of the time duration spent in this subinterval with respect to the state vector at the entry of the same subinterval. The sensitivity of time duration is factored into the computation process by computing a subinterval Jacobian matrix for each subinterval. This subinterval Jacobian matrix is computed by adding a subinterval correction matrix to a subinterval state transition matrix to account for changes in subinterval time duration. The cyclic Jacobian matrix for the entire periodic cycle is computed and utizlied in an iteration procedure to adjust a value of the initial state vector.
BRIEF DESCRIPTION OF THE DRAWING
FIG. 1 discloses a hypothetical state vector trajectory of a switching system with three different switched topologies in one switching cycle;
FIG. 2 discloses a state vector trajectory for a switching system that has achieved steady state operation where the initial state vector is identical to the final state vector;
FIG. 3 discloses a state vector trajectory for a single state-variable switching system that has not achieved steady-state operation;
FIG. 4 discloses a block flow process to achieve a steady state solution;
FIG. 5 discloses a sub block flow process which is part of the flow process of FIG. 4;
FIG. 6 discloses an illustrative two topology switching network useful in describing an application of the process of achieving a steady state solution to switching systems;
FIG. 7 shows waveforms in the various solutions of the network of FIG. 6 using different methods;
FIG. 8 is a schematic diagram of a typical closed-loop regulated converter which may be solved by the method of the invention;
FIG. 9 is a schematic of a piecewise-linear model of the power stages of the converter of FIG. 8;
FIG. 10 is a graph of the Euclidian norm of relative error after each pair of the simulation process;
FIGS. 11 and 12 disclose steady-state waveform for various parameters of the system shown in FIG. 8;
FIG. 13 discloses a simulator system for computing steady state solutions to periodic piecewise-linear systems.
DETAILED DESCRIPTION
A new method for the computation of the Jacobian matrix J(xi) facilitates an accelerated convergence to the steady-state solution of a periodic piecewise-linear system by more accurately computing sensitivity matrices by taking into consideration the variation of the timing of subinterval duration at the cycle with respect to changes in the state vector. An algorithm based on the solutions to the differential equations in (1) and the solutions to the algebraic equations in (5) is utilized for the computation of the Jacobian matrix J(xi). Because of the special emphasis placed on the solution to the transcendental equations in (5), this algorithm is able to accurately compute the Jacobian matrix even when the timing of the sytem is a very sensitive function of the initial state xi.
From the definition of the Jacobian matrix in (8) and the definition of the error function F(xi) in (6), the direct consequence is ##EQU5## Since X0 =x1 and xK =xf, (13) can be rewritten as ##EQU6## The vector xk depends on xk-1 according to (3) for k from 1 to K, and the chain rule can be applied to obtain the term âxK /âx0 T, yielding

 J(x.sub.i)=J.sub.k J.sub.k-l. . . J.sub.2 J.sub.1 -I       (15)
where ##EQU7## Each sensitivity matrix Jk defined in (16) shows how xk, the value of the state vector at the exit of the kth topology, changes with respect to changes in xk-1, the value of the state vector at the entry to the same topology. From now on, the matrix J(xi) is referred to either as the Jacobian matrix or the steady-state sensitivity matrix, so as not to be confused with the individual interval sensitivity matrix Jk.
To determine each interval sensitivity matrix Jk, the partial derivative âxk /âxk-1 T can be computed from (3) to (5). By applying partial differentiation to both sides of (3) with respect to xk-1, the following is obtained ##EQU8## Among the terms inside the braces in (17), only the state vector xk-1 and the state transition matrix Ïk (tk), have variational components when xk-1 changes because Ak, Bk, and u are independent of the state vector. The state transition matrix Ïk (tk) is a function of xk-1 because tk dependent on xk-1 through the implicit relationship in (5). Expanding the partial differential operations by applying the product rule and chain rule to (17) gives ##EQU9## Naturally, the derivative âxk-1 /âxk-1 T gives the identity matrix and âÏk (tk)/âtk is equal to Ak Ïk (tk) because Ïk (tk), by definition (4), is the state transition matrix. Therefore, (18) can be recast as ##EQU10## Since multiplication between a square matrix Ak and its state transition matrix Ïk (tk) is commutative (19) is further regrouped as ##EQU11##
As is evident from (20), the interval sensitivity matrix âxk /âxk-1 T is composed of two terms. The first term is the state transition matrix Ïk (tk) for the kth interval for the time duration tk, and it affects âxk /âxk-1 T under all conditions. The second term, however, affects the interval sensitivity matrix only when the time duration for the interval depends on changes in the state vector, thereby producing a partial derivative âtk /âxk-1 T which is no longer a null row vector. In other words, if tk, the time of duration of the interval, is independent of the initial state vector xk-1 upon entering the interval, then the second term is a null matrix. Therefore, the second term can be recognized as a correction square matrix Îk to account for the variation in the interval sensitivity matrix due to timing. Thus, ##EQU12## where ##EQU13## Since existing algorithms for computing the Jacobian matrix J(xi) neglect the variation of the timing with respect to changes in the state vector, they have the same effect as dropping the correction term Îk from (21), thus leading to erroneous entries to the Jacobian matrix J(xi) for certain systems.
The acceleration procedure is disclosed in FIG. 5 which illustrates a block flow diagram of the accelerated computation of the subinterval Jx (xk) matrix which is depicted in block 407 of FIG. 4. The state transition matrix Ïk (tk) is computed in block 501 in the conventional manner. A partial derivative âJk /âk-1 is computed in block 502 with respect to the initial state vector of the present interval. The value of a correction matrix Îk is computed in block 503 to account for time variations of the subinterval tk. The correction matrix Îk is summed in block 504 with the state transition matrix Ïk (tk) to obtain the corrected Jacobian matrix Jk (xk). The subinterval matrices for each subinterval are combined to obtain the cyclic Jacobian matrix as in equation (15). The subprocess is followed by the Newton-Raphson iteration process block 408 in FIG. 4 to calculate a new initial state vector.
To see the impact of neglecting the variation of timing with respect to changes in the state vector, one can look at a simple hypothetical system represented in FIG. 6. FIG. 6 discloses a simple two topology network with variable timing.
This system is composed of a sawtooth function generator 601, two voltage sources 602 and 603, a resistor 604, a capacitor 605, a voltage comparator 606 and a switch 607 is driven by the voltage comparator. Waveforms for various steady-state solutions of one circuit are shown in FIG. 7. At the start of a switching cycle, as denoted by the abrupt drop in the sawtooth voltage 701, the switch S 607 is driven to position A and the capacitor C 605 is charged by the voltage source VA 602 through resistor R 604. Switch SW 607 remains at A until the capacitor voltage x(t) 702 intersects the voltage of the sawtooth generator vs (t), at which time S 607 os switched to position B, charging the capacitor 605 toward a voltage of -VB. This is a very simple two-topology switching circuit which resembles very much the action that is typically encountered in a closed-loop regulated switching-mode system. A typical waveform for the capacitor voltage is indicated by the solid line 702 in FIG. 7. The time duration spent in the first topology is marked t1 according to the convention stated earlier.
Now suppose the capacitor 605 has an initial voltage of x0 +Îx0, instead of x0, at the entry to the 1st topology. Due to the variation Îx0 of the capacitor voltage from its original value at the entry of the 1st topology, the time duration that the system spent in the 1st topology increases according to the control law described. As a result, the capacitor will be charged for a time duration of t1 +Ît1. Hence, the waveform of the capacitor voltage will follow the bold solid line 703 in FIG. 7 up to t1, and then follow the dashed line 704 for the remaining part of the switching cycle. The bold solid waveform including line 705 is the waveform of the capacitor voltage if there is a variational change Îx0 in the beginning of the switching cycle, but the additional time Ît1 required by the control law is not accounted for in the mathematical prediction. Thus, an algorithm neglecting the variation of t1 with respect to changes in x0 predicts a variation of x1 =x1 at the end of the 1st topology which is less than the actual variation indicated by the diagram as equal to Îx1. This error is further magnified after propagation through the 2nd topology as shown in FIG. 7. Thus, it is absolutely essential to take into consideration the variation of the timing with respect to changes in the initial state vector in computing the sensitivity of the steady state with respect to the state vector.
If tk is affected by xk-1, then the p derivative âtk /âk-1 T has to be computed. The computation of this derivative must be based on an equation that determines the exit values of the system on leaving the kth topology. As explained above, the reason that the system leaves the kth topology is due to the fact that a certain output variable, say the qth component of the output vector, drops from a positive to zero, signaling a switch in the system topology. In a manner similar to the way (20) is obtained from (3), partial differentiation is applied to both sides of (5) with respect to xk-1, giving a ##EQU14## Rearranging terms in (23) gives ##EQU15## The numerator in (24) is a row vector, while the denominator is a scalar, giving the derivative âtk /âxk-1 T the dimensions of a 1Ãn row vector. The interval sensitivity matrix Jk for the kth topology can then be computed from (20) and (24).
After the interval sensitivity matrix Jk for each of the K topologies has been computed the Jacobian matrix J(xi) can be computed from (15). Once the Jacobian matrix is obtained, the Newton-Raphson iteration illustrated in FIG. 4 can be applied to predict the correction term Îx1 in converging to the steady-state solution of the system. Thus, the computation of the Jacobian matrix is equivalent to carrying out n more cycles of simulation, albeit with some special initial conditions. The full advantage of the accelerated convergence given by the simulator procedure of the invention may be ascertained by a numerical example in which steady-state solution of the circuit of FIG. 6 are obtained by brute force method, Newton-Raphson iteration without taking time interval variation into account and iteration with a Jacobian matrix including time interval variation consideration.
For the studies carried out in this example, the sawtooth voltage vs (t) swings from -2.5 V at the beginning of switching cycle to 2.5 V at the end of the switching cycle. The switching period is equal to 10 Î¼s and the capacitance of the capacitor is 0.1 Î¼F. Two studies are carried out, one for the case when R is equal to 1000 Î© and another one for the case when R is equal to 2000 Î©.
For each of the two studies, three simulations are performed, all starting from the initial condition on the capacitor voltage set to zero. The first simulation is a brute-force simulation without applying any special algorithm to accelerate the convergence toward steady state. In the second and third simulations, Newton-Raphson iteration and the Jacobian matrix are applied as discussed above to accelerate the steady-state convergence. The Jacobian matrix, in the second simulation, however, is computed from (15) and (21), neglecting Îk for both topologies. That is, the Jacobian matrix is computed without taking into account timing variation. In essence, the Jacobian matrix is obtained in a manner equivalent to the way the Jacobian matrix is computed by existing algorithms. The third simulation is similar to the second one, with the exception that the Jacobian matrix is obtained through (15), (20), and (24), taking into account the possibility of variation in system timing.

               TABLE I______________________________________CPU TIME REQUIRED FOR FIRST EXAMPLE        R = 1000Î©                 R = 2000Î©______________________________________Brute-Force    8.907 S    15.29 SSimulationNewton-Raphson 0.805 S    0.697 Siteration withouttaking into accounttiming variationNewton-Raphson 0.058 S    0.055 Siteration withJacobian matrixcomputed fromnew algorithm______________________________________
The required computation times taken by these three algorithms in reaching steady state for R equal to 1000 Î and 2000 Î are tabulated in Table 1. Both the second and the third algorithms require much less computation time compared to the brute-force simulation. The importance of taking into consideration the variation in the system timing is evident in this study. The third simulation, which computes the Jacobian matrix through the new algorithm, is able to converge to the steady-state solution at a speed 10 times faster than the second simulation. This is not so surprising a result since there is no correction to account for the variation in system timing in the second simulation, thus pointing the system to an erroneous direction to search for steady-state.
A closed loop regulated converter is shown schematically in FIG. 8. A piecewise-linear model of the power stage of this circuit is shown in FIG. 9. This is a more specific and actual circuit type example then the first example shown in FIG. 6.
The parameters associated with the power stage and the controller of this converter are listed in Table 2.

               TABLE 2______________________________________PARAMETERS FOR THECONVERTER IN THE SECOND EXAMPLE______________________________________C       50 Î¼F  Î.sub.X                     0.01Î                              VI 40VC.sub.1 0.1 Î¼F R.sub.L 5Î© V.sub.Q 0.7V.C14     1000 pF   R.sub.11                     40kÎ©                              V.sub.REF 2.5VL       40 Î¼H  R.sub.12                     10kÎ©                              T.sub.S 10 Î¼SÎC   0.05Î©             R.sub.13                     10kÎ©                              SawtoothÎD   0.1Î©             R.sub.14                     2kÎ©                              Generator:ÎQ   0.1Î             V.sub.D 0.7V     0 to 5V______________________________________
Initially the load RL is set at 5 Î©. Two simulations are carried out to reach the steady state, both starting from an initial state where all state variables are set to zero. The first simulation is a brute-force simulation while the second one is aided by Newton-Raphson iteration with the Jacobian matrix computed from (15), (20), and (24) according to the new algorithm. The CPU times required to reach steady state are tabulated in Table 3. The new algorithm is seen to enjoy a 17 times improvement in computation speed in converging to the steady state. In FIG. 10, the Euclidean norm of the relative error of F(xi) is plotted against the number of passes of simulation required. Using brute-force simulation, the relative error improves very little after 5 passes of simulation. On the other hand, Newton-Raphson iteration with the Jacobian matrix computed according to the new algorithm is able to significantly reduce the relative error on each pass of simulation. The CPU time required by each pass of the new algorithm, however, is longer than that required by the brute-force simulation since the various sensitivity matrices and the Jacobian matrix have to be computed. Table 4 provides the values of the state variables at the beginning of the switching cycle after steady state has been reached while FIG. 11 shows the steady-state waveforms, as obtained from the simulation, for the inductor current and the output voltage. No comparison is made with the Newton-Raphson iteration method where interval timing variation are not taken into account because that method failed to converage when applied to the circuit of FIG. 9.

               TABLE 3______________________________________CPU TIME REQUIRED            R.sub.L = 5Î                   R.sub.L = 25Î______________________________________Brute-Force Simulation              34 S     59 SNewton-Raphson iteration              2 S      2 Swith Jacobian matrixcomputed from newalgorithm______________________________________

               TABLE 4______________________________________STEADY-STATE INITIAL VALUES FOR X.sub.I      R.sub.L = 5Î©                  R.sub.L = 25Î©______________________________________i.sub.L      1.385A        0Av.sub.CI     -0.8159V      -1.384Vv.sub.CI4    0.3863 mV     0.5381 mVv.sub.C      12.49V        12.48V______________________________________
In a second study applied to the piecewise-linear model of FIG. 9 the load resistance RL is raised to 25 Î© moving the operation of the converter from continuous-mmf mode. Again, steady-state solutions are sought through simulations from zero initial state. The required CPU times are tabulated in the final column of Table 3. The values of the state variables at the beginning of the switching cycle after steady state has been reached are provided in the right-hand column of Table 4 while the steady-state waveforms for the inductor current and the output voltage are shown in FIG. 12. This study shows that the Newton-Raphson iteration with the Jacobian matrix computed from the new algorithm is able to reach the steady-state solution about 30 times faster than the brute-force simulation.
A circuit simulator is shown in FIG. 13 which solves for the steady-state solutions of periodic piecewise-linear systems. One input device 11 accepts the circuit parameters while a second input device 12 permits input of an initial state vector for the circuit. The circuit simulation processor 13, which may comprise a general purpose data processor suitably programmed, is set up to the system totology and in response to the parameter and state vector inputs simulates steady-state operation and claculates a final state vector for one periodic cycle of the periodic piecewise-linear system. It compares the cyclic initial and final state vector to see if the solution is truly steady state. If steady state is not achieved entry and exit vectors for each subinterval of the system being simulated are compared in comparative 16. State transition matrices and correction matrices are computed in a processor 15. Processor 15 may utilize the processing capability of processor 13. From these matrices a cyclic Jacobian matrix is generated and applied to a claculator 16 which uses power series methods such as the Newton-Raphson procedure to calculate a new initial state vector. The process is continued and a new steady state condition evaluated until agreement between the initial and final cyclic state vectors is satisfactory as determined in the steady state simulation 13. This method of obtaining steady-state solution of periodic piecewise-linear systems is significantly faster than the previous method of obtaining steady-state solutions. It includes a new faster method of computing the Jacobian matrix involved in accelerating calculation to coverge toward the steady state of regulated switching-mode systems. By applying Newton-Raphson iteration after the Jacobian matrix is obtained, the new algorithm is able to home in on the steady-state solution at a rate faster than that achieved by brute-force simulation by more than one order of magnitude.
There are two key features in this new algorithm. By taking advantage of the solution to the piecewise-linear differential equations, as formulated in (3), there is not much overhead required in the computation of the Jacobian matrix. By taking into account the variation in the system timing with respect to changes in the state vector, i.e., adding the correction matrix Îk in (21), the new algorithm is able to handle systems which have very sensitive timing with respect to the state vector. Another advantage of this algorithm is in its conceptual simplicity. The only concepts that one need employ are the ability to solve (1) and (2) and a knowledge of matrix algebra.
GLOSSARY OF SYMBOLS
Ak : plant coefficient matrix associated with the kth topology
Bk : control matrix associated with the kth topology
Ck : C matrix associated with the kth topology
Dk : D matrix associated with the kth topology
E(x): Relative error function, the qth component of E(x1) is equal to the qth component of F(x1) normalized by the qth component of XN 
F(xi): error function, equal to xf -x1 
J(x1): Jacobian matrix of F(x1) with respect to xi, also known as steady-state sensitivity matrix
Jk : sensitivity matrix associated with the kth topology
k: index to describe topology
xk-1 : the value of the state vector at the entrance to the kth topology
xk : the value of the state vector at the exit of the kth topology
XN : Normalizing vector 5, entries are expected maximum magnitude of corresponding state variables
V: output vector
yk-1 : the value of the output vector at the entrance of the kth topology
yk : the value of the output vector at the exit of the kth topology
u: input vector
Ïk (tk): state transition matrix eA.sbsp.k tk 
(k)q : the qth row of k,k is either a vector or a matrix
Îk : the correction term to Jk to account for the variation in tk, a square matrix