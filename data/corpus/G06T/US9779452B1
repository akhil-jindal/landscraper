Apparatuses, methods, and systems for remote deposit capture with enhanced image detection 
US-9779452-B1
United Services Automobile Association (Usaa)
2017-10-03
https://patents.google.com/patent/US9779452B1/en
RELATED APPLICATIONS
Applicant hereby claims priority under 35 USC Â§119 for U.S. provisional patent application Ser. Nos. 61/352,762, 61/352,772 and 61/352,775, all filed on Jun. 8, 2010 and entitled âApparatuses, Methods And Systems For A Remote Deposit Capture Platform.â
The entire contents of the aforementioned applications are herein expressly incorporated by reference.
FIELD
The present invention is directed generally to apparatuses, methods, and systems of remote deposit of financial instruments, and more particularly, to APPARATUSES, METHODS AND SYSTEMS FOR REMOTE DEPOSIT CAPTURE WITH ENHANCED IMAGE DETECTION.
BACKGROUND
Negotiable instruments such as checks, money orders, banknotes etc., have been widely used to replace cash payments. For example, a payee may receive paychecks as salary payment from his or her employer. In order to obtain the payment amount, the payee may need to deposit the check in an account at the payee's bank, and have the bank process the check. In some cases, the payee may take the paper check to a branch of the payee's bank, and cash the check at the bank counter. Once the check is approved and all appropriate accounts involved have been credited, the check may be stamped with some kind of cancellation mark by a bank clerk, such as a âpaidâ stamp.

BRIEF DESCRIPTION OF THE DRAWINGS
The accompanying appendices and/or drawings illustrate various non-limiting, example, inventive aspects in accordance with the present disclosure:
 FIGS. 1A-1, 1A-2, 1B, and 1C are of block diagrams illustrating embodiments of overview data flows between an RDC-Detection system and affiliated entities in embodiments of the RDC-Detection;
 FIG. 2A-C provide diagrams of example infrastructures of the RDC-Detection system for home deposit, mobile deposit, kiosk/ATM/Retail deposit in one embodiment of the RDC-Detection;
 FIG. 3A-G provide diagrams illustrating aspects of remote deposit of checks in one embodiment of the RDC-Detection;
 FIG. 4A-P provide diagrams illustrating aspects of instructing check image capturing and uploading in one embodiment of the RDC-Detection;
 FIG. 5A-B are of logic flow diagram illustrating aspects of processing and extracting deposit check images in one embodiment of the RDC-Detection;
 FIGS. 6A, 6B-1, 6B-2, 6C, 6D, 6E, 6F, 6G, 6H-1, 6H-2, 6H-3 and 6H-4 provide logic flow diagrams and examples illustrating aspects of an enhanced corner/edge detection in one embodiment of the RDC-Detection;
 FIG. 7A-D illustrate embodiments of processing skewed, warped or distorted in one embodiment of the RDC-Detection;
 FIGS. 8A-C provide diagrams illustrating aspects of check representment detection and check clearance in one embodiment of the RDC-Detection;
 FIGS. 9A, 9B and 9C provide logic flow diagrams illustrating aspects of alternative embodiments of the RDC-Detection;
 FIGS. 10A-C provide diagrams illustrating aspects of alternative embodiments of voiding a check of the RDC-Detection;
 FIGS. 11A-H provide a flow diagram of example screen shots of user interfaces illustrating aspects of remote deposit via a mobile device within one embodiment of the RDC-Detection;
 FIGS. 12A-O provide example screen shots of user interfaces illustrating aspects of remote deposit via a personal computer within one embodiment of the RDC-Detection; and
 FIG. 13 is of a block diagram illustrating embodiments of the RDC-Detection controller;

The leading number of each reference number within the drawings indicates the figure in which that reference number is introduced and/or detailed. As such, a detailed discussion of reference number 101 would be found and/or introduced in FIG. 1. Reference number 201 is introduced in FIG. 2, etc.
DETAILED DESCRIPTION
This patent application disclosure document (hereinafter âdescriptionâ and/or âdescriptionsâ) describes inventive aspects directed at various novel innovations (hereinafter âinnovation,â âinnovations,â and/or âinnovation(s)â) and contains material that is subject to copyright, mask work, and/or other intellectual property protection. The respective owners of such intellectual property have no objection to the facsimile reproduction of the patent disclosure document by anyone as it appears in published Patent Office file/records, but otherwise reserve all rights.
The entire disclosures of the following applications are herein expressly incorporated by reference: U.S. patent application Ser. No. 11/935,584, filed Nov. 6, 2007, entitled âSYSTEMS, METHODS, AND APPARATUS FOR RECEIVING IMAGES OF ONE OR MORE CHECKS,â U.S. patent application Ser. No. 11/868,890, filed Oct. 8, 2007, entitled âSYSTEMS AND METHODS FOR PROCESSING REMOTE DEPOSIT OF CHECKS,â U.S. patent application Ser. No. 11/926,265, filed Oct. 29, 2007, entitled âSystems and Methods to Address the Multiple Presentment of a Check,â U.S. patent application Ser. No. 11/927,814, filed Oct. 30, 2007, entitled âSYSTEMS AND METHODS TO MODIFY A NEGOTIABLE INSTRUMENT,â U.S. patent application Ser. No. 11/928,297, filed Oct. 30, 2007, entitled âSYSTEMS AND METHODS TO DEPOSIT A NEGOTIABLE INSTRUMENT,â U.S. patent application Ser. No. 11/931,670, filed Oct. 31, 2007, entitled âSYSTEMS AND METHODS TO USE A DIGITAL CAMERA TO REMOTELY DEPOSIT A NEGOTIABLE INSTRUMENT,â U.S. patent application Ser. No. 11/930,537, filed Oct. 31, 2007, entitled âSYSTEMS AND METHODS TO MULTIPLE ACCOUNT ELECTRONIC DEPOSIT OF A NEGOTIABLE INSTRUMENT,â U.S. patent application Ser. No. 12/062,143, filed Apr. 3, 2008, entitled âCASH DEPOSIT VIA MONEY ORDER,â U.S. patent application Ser. No. 12/098,609, filed Apr. 7, 2008, entitled âVIDEO FINANCIAL DEPOSIT,â U.S. patent application Ser. No. 12/137,051, filed Jun. 11, 2008, entitled âDUPLICATE CHECK DETECTION,â U.S. patent application Ser. No. 12/244,830, filed Jun. 11, 2008, entitled âDUPLICATE CHECK DETECTION,â U.S. patent application Ser. No. 12/195,723, filed Aug. 21, 2008, entitled âSYSTEMS AND METHODS FOR MOBILE DEPOSIT OF NEGOTIABLE INSTRUMENTS,â U.S. patent application Ser. No. 12/202,781, filed Sep. 2, 2008, entitled âSYSTEMS AND METHODS OF CHECK RE-PRESENTMENT DETERRENT,â U.S. patent application Ser. No. 12/254,185, filed Oct. 20, 2008, entitled âSYSTEMS AND METHODS FOR EMAILING A CHECK,â U.S. patent application Ser. No. 12/205,996, filed Sep. 8, 2008, entitled âSYSTEMS AND METHODS FOR LIVE VIDEO FINANCIAL DEPOSIT,â U.S. patent application Ser. No. 12/242,063, filed Sep. 30, 2008, entitled âATOMIC DEPOSIT TRANSACTION,â U.S. patent application Ser. No. 12/257,471, filed Oct. 24, 2008, entitled âSYSTEMS AND METHODS FOR FINANCIAL DEPOSITS BY ELECTRONIC MESSAGE,â U.S. patent application Ser. No. 12/253,278, filed Oct. 17, 2008, entitled âSYSTEMS AND METHODS FOR ADAPTIVE BINARIZATION OF AN IMAGE,â U.S. patent application Ser. No. 12/388,005, filed Feb. 18, 2009, entitled âSYSTEMS AND METHODS OF CHECK DETECTION,â U.S. patent application Ser. No. 12/397,671, filed Mar. 4, 2009, entitled âSYSTEMS AND METHODS OF CHECK IMAGE UPLOAD FOR DEPOSIT,â U.S. patent application Ser. No. 12/397,930, filed Mar. 4, 2009, entitled âSYSTEMS AND METHODS OF CHECK PROCESSING WITH BACKGROUND REMOVAL,â U.S. patent application Ser. No. 12/545,127, filed Aug. 21, 2009, entitled âSYSTEMS AND METHODS FOR IMAGE MONITORING OF CHECK DURING MOBILE DEPOSIT,â U.S. patent application Ser. No. 12/509,613, filed Jul. 27, 2009, entitled âSYSTEMS AND METHODS FOR REMOTE DEPOSIT OF NEGOTIABLE INSTRUMENT USING BRIGHTNESS CORRECTION,â U.S. patent application Ser. No. 12/509,680, filed Jul. 27, 2009, entitled âSYSTEMS AND METHODS FOR CHECK DATA PROCESSING FOR CHECK RECREATION,â U.S. patent application Ser. No. 12/509,680, filed Jul. 27, 2009, entitled âSYSTEMS AND METHODS FOR CHECK DATA PROCESSING FOR CHECK RECREATION,â U.S. patent application Ser. No. 11/591,131, filed Oct. 31, 2006, entitled âREMOTE DEPOSIT OF CHECKS,â U.S. patent application Ser. No. 11/321,027, filed Dec. 29, 2005, entitled âREMOTE DEPOSIT OF CHECKS,â U.S. patent application Ser. No. 11/487,537, filed Jul. 13, 2006, entitled âMETHODS AND SYSTEMS FOR IMPROVING NOTIFICATION OF AND ACCESS TO REMOTE DEPOSITS,â U.S. patent application Ser. No. 11/591,008, filed Oct. 31, 2006, entitled âDEAD-CHECK REPOSITORY,â U.S. patent application Ser. No. 11/591,014, filed Oct. 31, 2006, entitled âSYSTEMS AND METHODS FOR REMOTE DEPOSIT OF CHECKS,â U.S. patent application Ser. No. 11/591,003, filed Oct. 31, 2006, entitled âSYSTEMS AND METHODS FOR REMOTE DEPOSIT OF CHECKS,â U.S. patent application Ser. No. 11/591,273, filed Oct. 31, 2006, entitled âSYSTEMS AND METHODS FOR REMOTE DEPOSIT OF CHECKS,â U.S. patent application Ser. No. 11/591,262, filed Oct. 31, 2006, entitled âSYSTEMS AND METHODS FOR CLEARING NEGOTIABLE INSTRUMENTS IN LIEU OF USING DIGITAL IMAGES,â U.S. patent application Ser. No. 11/590,998, filed Oct. 31, 2006, entitled âSYSTEMS AND METHODS FOR DISPLAYING NEGOTIABLE INSTRUMENTS DERIVED FROM VARIOUS SOURCES,â U.S. patent application Ser. No. 11/686,930, filed Mar. 15, 2007, entitled âSYSTEMS AND METHODS FOR VERIFICATION OF REMOTELY DEPOSITED CHECKS,â U.S. patent application Ser. No. 11/686,928, filed Mar. 15, 2007, entitled âSYSTEMS AND METHODS FOR CHECK REPRESENTMENT PREVENTION,â U.S. patent application Ser. No. 11/747,219, filed May 10, 2007, entitled âSYSTEMS AND METHODS FOR REAL-TIME VALIDATION OF CHECK IMAGE QUALITY,â U.S. patent application Ser. No. 11/877,307, filed Oct. 23, 2007, entitled âSYSTEMS AND METHODS FOR OBTAINING AN IMAGE OF A CHECK TO BE DEPOSITED,â U.S. patent application Ser. No. 11/876,889, filed Oct. 23, 2007, entitled âSYSTEMS, METHODS, AND APPARATUS FOR RECEIVING IMAGES OF ONE OR MORE CHECKS,â and U.S. patent application Ser. No. 12/549,443, filed Aug. 28, 2009, entitled âSYSTEMS AND METHODS FOR ALIGNMENT OF CHECK DURING MOBILE DEPOSIT,â.
INTRODUCTION
The RDC-Detection provides a platform that allows a user to deposit a check by taking an image of the check and electronically transmitting the image to the user's bank. For example, in one embodiment, the user may operate a smart phone (e.g., an Apple iPhone, etc.) to initiate the remote deposit, wherein the smart phone may automatically download and instantiate a remote deposit software component, which controls the smart phone to capture via its built-in camera, process and send the image of the check. For another example, the user may perform remote deposit by downloading and instantiating the remote deposit software component on their home computer connected to a standard home-use or office-use scanner/photocopier/fax machine. In one embodiment, the user's bank may receive and process the image of the check to obtain deposit information (e.g., via optical character recognition, etc.), and complete the requested deposit based on the deposit information.
The various embodiments described herein may be electronically performed by different entities such as, but not limited to a bank server, a user device, a third party agent, and/or the like. Those embodiments may also be performed by other entities.
 FIG. 1A-1 is a block diagram illustrating Remote Deposit Capture (âRDCâ). In various embodiments, a user 101 can use various client devices 133 to capture an image of a check 102, send it to their bank 165 over a communications network, and cause the deposit of the check 103 a, 103 b remotely. For example, the user 101 a may use a desktop computer with a scanner, webcam, camera, etc. 133 a to scan, video, photograph, etc. a digital copy of the check 102. In another embodiment, the user 101 b may use a mobile device equipped with a camera 133 b to capture a copy of the check, such as a: cellphone, PDA, smartphone, tablet, etc. Once a copy of the check is captured, the user's client 133 sends a check deposit message 102 a, 102 b to the user's, i.e., the payee's, bank 165; the check deposit image may include an image of the check and accompanying client account information (e.g., account number, deposit amount, etc.). The bank's server(s) may then evaluate the check deposit message and deposit the check 103 (e.g., via the desktop client 133 a and the web, via an application component on the mobile device 103 b, etc.).
 FIG. 1A-2 is a block diagram further illustrating data flows within entities of the RDC detection system. In various embodiments, a user 133 may initiate a deposit request 101 a/101 b on a client device, such as a personal computer 133 a connected to a web camera, a digital camera, a scanner and/or the like, a mobile phone (e.g., an Apple iPhone) 133 b, and/or the like. In one embodiment, a deposit request message 102 a/102 b may be sent from the client device 133 a/133 b to the payee's bank 165 via the communication network 113, and the bank server 165 may deliver a RDC processing component 103 a/103 b to the client device 133 a/133 b. For example, the RDC processing component may be Java applets downloaded from a remote deposit web site hosted by the RDC-Detection platform.
The client device 133 a/133 b may then generate a check capture image 104 a/104 b via camera, scanner, web camera, mobile phone, etc., under control of the RDC processing component 103 a/103 b running on the personal computer 133 a and/or the mobile phone 133 b, and generate a check deposit message 105 a/105 b. For example, the check deposit message 105 a/105 b may comprise the captured check image 104 a/104 b, and any check deposit metadata, such as user entered deposit amount, user account number, and/or the like.
In one implementation, the payee's bank 165 may process the received check message 105 a/105 b to generate a deposit check message 106 for the clearinghouse 166 and payor's bank 167. Upon clearing the check, the payee's bank 165 may receive deposit confirmation message 103 from the payor's bank for amount withdrawal confirmation from the payor's account, and a confirmation message 107 from the clearinghouse 166 for check clearance confirmation.
RDC-Detection
This disclosure details the implementation of apparatuses, methods and systems of remote deposit capture with enhanced check image detection (hereinafter, âRDC-Detectionâ). RDC-Detection systems may, in one embodiment, implement a remote deposit application on a secured network system, whereby the remote deposit application may obtain, process and store images of a negotiable instrument, and generate virtualized negotiable instruments for deposit.
For example, in one embodiment, a user (e.g., the payee) who wants to deposit a check, may capture an image of the check by a user image capture device, e.g., a scanner connected to a computer, a mobile device having a built-in camera, a digital camera, and/or the like. In another implementation, the user may take a video clip of the check and submit the video file. In one embodiment, the user may send the captured check image to a financial institution, e.g., a payee's bank with RDC-Detection service. The RDC-Detection platform receiving the check image may then process the check image and extract deposit data from the digital check image. For example, in one implementation, the RDC-Detection may perform a series of image analysis procedures to enhance the received check image and extract deposit information such as payee's name, payee's bank, account number, bank routing number, deposit amount, and/or the like. In one implementation, after initial verification of the extracted deposit data, the RDC-Detection may post the deposit through direct banking and save the check image and the associated check deposit information in a transaction depository. In one implementation, the RDC-Detection may generate a substitute check (e.g., an X9.37 cash letter file) based on the received check image and send it to a clearinghouse bank (e.g., a regional branch of the Federal Reserve) for check clearance. In one implementation, the RDC-Detection may confirm, or cancel the soft posting of deposit funds based on the result of check clearance.
In another example implementation, a user may deposit cash or a check at a third party agent which is located remotely from a bank. For example, the third party agent may include, but is not limited to a point of sale at a store participating in the RDC-Detection service, a RDC-Detection terminal located at a gas station, and/or the like. In another implementation, the third party agent may be an express mailing service representative carrying a portable check/cash reading device to provide RDC-Detection service, e.g., UPSÂ®, FedexÂ®, etc. In one implementation, the user may walk in a RDC-Detection participating store and present a check or cash for deposit. The third party agent may process the remote deposit request by generating and sending an image of the check to a remote deposit server, or by calculating and verifying the presented cash for deposit.
It is to be understood that, depending on the particular needs and/or characteristics of a RDC-Detection application, associated IDE, associated operating system, user interface, object, administrator, server, hardware configuration, network framework, and/or the like, various embodiments of the RDC-Detection may be implemented that enable a great deal of flexibility and customization. The instant disclosure discusses embodiments of the RDC-Detection primarily within the context of remote deposit of âchecksâ from a payee to a bank hereinafter. However, it is to be understood that the system described herein may be readily adopted for deposits of other types of negotiable instruments, such as a money order, a bank note, and/or the like, and configured/customized for a wide range of other applications or implementations. It is to be understood that the RDC-Detection may be further adapted to other implementations or communications and/or data transmission applications, such as but not limited to a general entity-to-entity payment system.
For example, In some embodiments, the RDC-Detection may allow a payee to apply the deposit, or a portion thereof, to the payment of one or more bills, such as a credit card payment, insurance bill payment, car payment, etc.
For another example, in some embodiments, the RDC-Detection may allow users to apply the deposit (or portion thereof) to a non-US Dollar denominated account. For example, in one implementation, a user may wish to apply a deposit of a $100 (USD) check into a Euro-denominated account. In one implementation, if the user selects an âUSD to Euroâ deposit option, the RDC-Detection may determine and notify the user of the exchange rate that will be used for the transaction (i.e., how much, in Euros, will be deposited into the user's account). In some embodiments, the RDC-Detection may prompt the user to approve the conversion, while in other embodiments, the conversion and deposit will occur automatically.
RDC-Detection Block View
 FIG. 1B is of a block diagram illustrating an overview of an implementation of data flows between a RDC-Detection system and affiliated entities in embodiments of the RDC-Detection. In FIG. 1, a user (or users) 105 operating different depositing devices 106-109, a RDC-Detection platform 120, a RDC-Detection database 119, a payer's bank 165, a payee's bank 160 and a system administrator 140 are shown to interact via a communication network 113.
In one embodiment, the user 105 may be a payee who may deposit a check into an account at the payee's bank 160 by converting the check into electronic data (e.g., digital check images, etc.) and sending the data to the bank via a communication network 113. In one implementation, secured transport protocol such as SSL, and/or the like may be employed for the communication between the user 105 and the RDC-Detection platform 120. In one embodiment, the user 105 may deposit the check on different occasions and through a variety of different devices and technologies of generating electronic check data. For example, in one implementation, the user 105 may deposit the check at home 106 by obtaining a check image via an image capture device (e.g., a camera, a scanner, etc.) controlled by a home computer. In another implementation, the user 105 may use a mobile device with a built-in camera (e.g., iPhone, BlackBerry, etc.) to take a picture of the check. In another implementation, the user 105 may deposit the check at a retail Point of Sale (POS) terminal 108, a kiosk or a Check 21 ATM 109, etc. by submitting the paper check to the deposit facility to generate images of the check for deposit. In a further implementation, the user 105 may take live video of the check via a device with built-in video camera (e.g., Apple iPhone, etc.) and send the video clip of the check to the RDC-Detection platform 120.
In one embodiment, the electronic data sent from the user 105 may include extracted data information from the check. For example, in one implementation, the user 105 may use a Magnetic Ink Character Recognition (MICR) device to scan and translate the MICR information (e.g., account number, routing number, check number, etc.) located on the check and transmit the data to the RDC-Detection platform 120 along with digital image files or video clip files of the check. In one implementation, the electronic data may include a user entered value indicating an amount to be deposited, and/or other user submitted information.
The RDC-Detection facilitates connections through the communication network 113 based on a broad range of protocols that include WiFi, Bluetooth, 3G cellular, Ethernet, ATM, and/or the like. In one embodiment, the communication network 113 may be the Internet, a Wide Area Network (WAN), a public switched telephone network (PSTN), a cellular network, a voice over internet protocol (VoIP) network, a Local Area Network (LAN), a Peer-to-Peer (P2P) connection, an ATM network and/or the like. In one implementation, the user 105 may communicate with financial institutions 125 by phone, email, instant messaging, facsimile, and/or the like.
In one embodiment, the financial institutions 125 may be any type of entity capable of processing a transaction involving a check deposit. For example, the financial institution 125 may be a retail bank, investment bank, investment company, regional branch of the Federal Reserve, clearinghouse bank, correspondent bank, and/or the like. In one embodiment, the financial institution 125 may include a RDC-Detection platform 120, the payee's bank 160 and the payer's bank 165. In one implementation, the RDC-Detection platform 120 may be housed within the payee's bank 160 as a built-in facility of the payee's bank for processing remote check deposits. In another implementation, the RDC-Detection platform 120 may be associated with an entity outside the payee's bank, as a remote deposit service provider.
In one embodiment, the RDC-Detection platform 120 may receive and process electronic data of deposit information from the user 105 via the communication network. For example, in one implementation, the RDC-Detection platform 120 may generate check image in compliance with deposit formats (e.g., a Check 21 compliant check image file, a X9.37 cash letter check image, and/or the like), based on the received electronic data from the user 105. In one implementation, the RDC-Detection platform may analyze metadata associated with the received check image/video files such as GPS information, time stamp of image capture, IP address, MAC address, system identifier (for retail POS/kiosk deposits) and/or the like.
In one implementation, upon receipt and approval of the electronic deposit data, the payee's bank 160 may credit the corresponding funds to the payee's account. In one implementation, the RDC-Detection platform 120 may clear the check by presenting the electronic check information to an intermediary bank 170, such as a regional branch of the Federal Reserve, a correspondent bank and/or a clearinghouse bank. In one embodiment, the payer's account at the payer's bank 165 may be debited the corresponding funds.
In one embodiment, the RDC-Detection entities such as the RDC-Detection platform 120, and/or the like, may also communicate with a RDC-Detection database 119. In some embodiments, distributed RDC-Detection databases may be integrated in-house with the RDC-Detection platform 120, and/or the payee's bank 160. In other embodiments, the RDC-Detection entities may access a remote RDC-Detection database 119 via the communication network 113. In one embodiment, the RDC-Detection entities may send data to the database 119 for storage, such as, but not limited to user account information, application data, transaction data, check image data, user device data, and/or the like.
In one embodiment, the RDC-Detection database 119 may be one or more online database connected to a variety of vendors and financial institutions, such as hardware vendors (e.g., Apple Inc., Nokia, Sony Ericsson, etc.), deposit banks (e.g., Bank of America, Wells Fargo, etc.), service vendors (e.g., clearinghouse banks, etc.) and/or the like, and obtain updated hardware driver information, software updates from such vendors. In one embodiment, the RDC-Detection platform 120 may constantly, intermittently, and/or periodically download updates, such as updated user profile, updated software programs, updated command instructions, and/or the like, from the RDC-Detection database 119 via a variety of connection protocols, such as Telnet FTP, HTTP transfer, P2P transmission and/or the like.
In one embodiment, a system administrator 140 may communicate with the RDC-Detection entities for regular maintenance, service failure, system updates, database renewal, security surveillance and/or the like via the communication network 113. For example, in one implementation, the system administrator 140 may be a system manager at the payee's bank, who may directly operate with the RDC-Detection platform 120 via a user interface to configure system settings, inspect system operations, and/or the like.
 FIGS. 2A-C show diagrams of example infrastructures of the RDC-Detection system for home deposit, mobile deposit, kiosk/ATM/Retail deposit in one embodiment of the RDC-Detection. In some embodiments, as shown in FIGS. 2A-C, the RDC-Detection infrastructure 200 may contain a number of functional modules and/or data stores. A RDC-Detection controller 203 may serve a central role in some embodiments of RDC-Detection operation, serving to orchestrate the reception, generation, modification, and distribution of data and/or instructions, to, from, and between RDC-Detection modules and/or mediate communications with external entities and systems.
In one embodiment, the RDC-Detection controller 203 may be housed separately from other modules and/or databases within the RDC-Detection system, while in another embodiment, some or all of the other modules and/or databases may be housed within and/or configured as part of the RDC-Detection controller. Further detail regarding implementations of RDC-Detection controller operations, modules, and databases is provided below.
In the implementation illustrated in FIG. 2A, the RDC-Detection controller 203 may be configured to couple to external entities via a user interface and a network interface. The user interface may, for example, receive and configure user control commands sent to/from the RDC-Detection, secured user account information, user submitted configuration data, and/or the like. In one implementation, the user interface may include, but not limited to devices such as, keyboard(s), mouse, stylus(es), touch screen(s), digital display(s), and/or the like. In various implementations, the network interface may, for example, serve to configure data into application, transport, network, media access control, and/or physical layer formats in accordance with a network transmission protocol, such as, but is not limited to, FTP, TCP/IP, SMTP, Short Message Peer-to-Peer (SM PP) and/or the like. For example, the network interface 210 may be configured for receipt and/or transmission of data to an external and/or network database. The network interface may further be configurable to implement and/or translate Wireless Application Protocol (WAP), VoIP and/or the like data formats and/or protocols. The network interface may further house one or more ports, jacks, antennas, and/or the like to facilitate wired and/or wireless communications with and/or within the RDC-Detection system.
In one implementation, the RDC-Detection controller 203 may further be coupled to a plurality of modules configured to implement RDC-Detection functionality and/or services. The plurality of modules may, in one embodiment, be configurable to establish a secured communications channel with a remote image capture device and implement a remote deposit service application. In some embodiments, the remote deposit service application may obtain and analyze check images, and generate virtual checks (e.g., Check 21 X9.37 cash letter files, etc.) for deposit. In one embodiment, the daemon application may comprise modules such as, but not limited to a Image Upload module 205, a Virus Scan module 206, a Check Image Persistence module 210, an Image Analysis module 212, a TRA & EWS Service module 214, a Soft Post module 215, a MICR Extraction module 218, a TIFF Generation module 220, a Check Information Extraction module 222, an Endorsement Detection 224, a Cash Letter Generation module 225, and/or the like.
In one embodiment, the Image Upload module 205 may establish a secured communications channel with a user image capture device and receive submitted check images. In one embodiment, the Image Upload module 205 may initialize an image upload application which may remotely control the image capture device to obtain and upload check images via the secured communications channel as will be further illustrated in FIGS. 4A-C. In one embodiment, the Image Upload module 205 may also receive streamed video and/or video files of checks. In one embodiment, the Virus Scan module 206 may inspect the received digital files to prevent, detect, and remove malware, including computer viruses, worms, trojan horses and/or the like. For example, in one implementation, the RDC-Detection may employ antivirus software such as, but not limited to McAfee VirusScan, Symantec AntiVirus Scan, and/or the like.
In one embodiment, the Check Image Persistence module 210 may check the persistence of the received check image files. For example, in one implementation, the Check Image Persistence module 210 may check the image file format, file storage pattern, and/or the like. In one implementation, the Check Image Persistence module 210 may check the storage format of the metadata associated with the check image file.
In one embodiment, the Image Analysis module 212 may process the received check digital file, such as image usability and quality check, video frame image grab, and/or the like, as will be further illustrated in FIGS. 5 and 6A-H. In one embodiment, the TIFF Generation module 220 may convert a received color image to a grayscale image prior to image processing of module 212.
In one embodiment, the Magnetic Ink Character Recognition (MICR) Extraction module 218 may perform an optical character recognition (OCR) procedure on the processed check image and extract the MICR line on the check. Checks typically contain MICR information (e.g., routing number, account number and check number) on the bottom left-hand corner of the check. In one embodiment, the Check Information Extraction module 222 may perform an optical character recognition (OCR) procedure to extract information of the check, including the payee's name, the deposit amount, check number, and/or the like. In one embodiment, the Endorsement Detection module 224 may detect whether the check image contains a depositor's signature.
In another embodiment, the MICR information may consist of characters written in a magnetic ink. The MICR information may be read electronically by passing the check through the MICR device, which may translate the characters by magnetizing the ink. If a user converts the check into electronic data by scanning the check using a MICR device, the MICR module may directly parse the information contained in the MICR data submitted by the user.
In one embodiment, the Soft Post module 215 may provisionally credit the payee's account with the deposit amount after processing the received check image. In one embodiment, the Cash Letter Generation module 225 may generate and submit an X9.37 cash letter check image file to a clearinghouse bank (e.g., a regional branch of the Federal Reserve Bank, etc.) to clear the transaction and/or implement representment check after the soft post, as will be further illustrated in FIGS. 8A-C.
In one implementation, the RDC-Detection controller 203 may further be coupled to one or more databases configured to store and/or maintain RDC-Detection data. A user database 226 may contain information pertaining to account information, contact information, profile information, identities of hardware devices, Customer Premise Equipments (CPEs), and/or the like associated with users, device configurations, system settings, and/or the like. A hardware database 228 may contain information pertaining to hardware devices with which the RDC-Detection system may communicate, such as but not limited to Email servers, user telephony devices, CPEs, gateways, routers, user terminals, and/or the like. The hardware database 228 may specify transmission protocols, data formats, and/or the like suitable for communicating with hardware devices employed by any of a variety of RDC-Detection affiliated entities. A transaction database 230 may contain data pertaining to check deposit transactions. In one embodiment, the transaction database 230 may include fields such as, but not limited to: check deposit timestamp, payee's name, payeeâ² bank name, account number, bank routing number, deposit amount, deposit method, deposit device, check image index, check clearance information, and/or the like. A check image database 235 may contain a repository of processed check images associated with a transaction.
The RDC-Detection database may be implemented using various standard data-structures, such as an array, hash, (linked) list, struct, structured text file (e.g., XML), table, and/or the like. For example, in one embodiment, the XML for a transaction in the transaction database 225 may take a form similar to the following example:
<Transaction>
    . . . <ID> MyTransaction1-0008</ID> <Receive Time> 5/12/2009 11:30:00</Receive Time> <Device_ID>iPhone 6HS8D </Device_ID> <Payee_Name> Joe Dow </Payee_Name>
         <Payee_Bank> First Regional Bank </Payee_Bank> 
 <Deposit_amount>1000.00<Deposit_amount>
         <Post_Time>5/12/2009 11:31:23</Post_Time> 
 <Image_ID> MyImage3214232</Image_ID>
         <Clearance_bank> Clearinghouse Bank 
 </Clearance_bank> <Deposit_status> confirmed </Deposit_status> . . .   
</Transaction>
In FIG. 2A, in one implementation, a home scanner or other home image capture device connected to a computer may be utilized for home deposit. In one embodiment, the home deposit may be implemented via a web application 240 and/or an enterprise capture applet 242 (if the depositor is an enterprise entity) embedded in a deposit website. For example, in one implementation, a user may visit a RDC-Detection website to perform remote deposit. In one implementation, the deposit web service may include scan service 245 to control the scanner to obtain images of a check, image service 248 to allow a user to save and edit check image files, file selection service 247 and image upload service 249 to facilitate a user to select and upload a check image file and/or the like, as will be further illustrated in FIGS. 4A-C.
In another embodiment, for mobile deposit 250, as shown in FIG. 2B, a pre-installed RDC application on the mobile device, or the embedded RDC component of a website may control the mobile device to perform member authentication 255, image capturing 258, grayscale conversion 257 of the check image, and image upload 259. For example, in one implementation, the RDC-Detection may prompt the mobile device user to login at the RDC website with a username and password. For another example, the RDC-Detection may identify the user mobile device to authenticate the user as a member if the mobile device is registered for the RDC service.
In another embodiment, as shown in FIG. 2C, for kiosk/ATM/retail deposit 260, the facility may provide scan service 265, image upload service 269 and check franking service 268. For example, in one implementation, the deposit facility at the kiosk/ATM/retail may print âELECTRONICALLY PRESENTEDâ across the front of the original check when the check is scanned to avoid representment of the check, and endorse the back of the check with deposit confirmation.
 FIG. 1C is a block diagram illustrating RDC-Detection data flows in an alternative embodiment. In one embodiment, a user 105 may deposit a check 1001 or cash 1002 into his bank account at a third party agent 1010. For example, in one implementation, the user 105 may deposit at a RDC-Detection participating store, such as a convenience store, a book store, a grocery store, a gas station, and/or the like. In another example, the user 105 may present a check or cash to a mailing service agent for deposit, such as, but not limited to UPSÂ®, FedexÂ® and/or the like. Also, the third party agent may be a remote deposit terminal such as an automatic teller machine, point of sale deposit service terminal, and/or the like.
In one implementation, the RDC-Detection third party agent 1010 may be equipped with a RDC-Detection facility, such as a card reader, check scanner, and/or the like, so that a user may swipe the check for scanning. In another implementation, the RDC-Detection third party agent may generate check images for deposit with a general purpose computer and image capture device, such as a flatbed scanner, a camera, a facsimile machine, a webcam, and/or the like.
In one embodiment, the RDC-Detection third party agent 1010 may send deposit requests and deposit information to the financial institution 125 via the communication network 113. An RDC-Detection platform 1020 may communicate with the RDC-Detection third party agent 1010 to process the deposit request. In one implementation, the RDC-Detection platform 1020 may be housed within the payee's bank 160. In an alternative implementation, the RDC-Detection platform 1020 may be associated with an intermediate deposit service institute that is independent of the payee's bank, payer's bank and the clearinghouse bank 1030.
RDC-Detection Third-Party Deposit
 FIG. 3A is of a logic flow diagram illustrating an overview of RDC-Detection workflow in one embodiment of the RDC-Detection. In one embodiment, a RDC-Detection user may present a check 1001 or cash 1002 for deposit to a third party agent, such as an authorized RDC-Detection storefront deposit site, or a participating store or home/office equipped with RDC-Detection facility.
In one implementation, for cash deposit 1002, the third party agent may receive and calculate cash bills from the user and accumulate cash deposit totals 3105 associated with the user, and send deposit information to the RDC-Detection platform 1020. The RDC-Detection platform 1020 may wire the deposit amount to the user's bank account periodically. For example, in one implementation, the RDC-Detection platform 1020 may wire the received cash amount for deposit during the previous day to the payee's bank for posting 3130 on a daily basis, as further discussed in FIG. 4H.
In another implementation, for check deposit 1001, the user may provide a bank card as deposit authorization to the third party agent. For example, the user may have his ATM debit card swiped at a card reader equipped at a RDC-Detection participating store 3115 (e.g., a Point of Sale (POS) terminal), via which the third party agent may obtain and forward the user's bank account information to the RDC-Detection platform 1020.
In one implementation, deposit information may be sent to the RDC-Detection platform via a secure and dedicated communication channel established between the third party agent 1010 and the RDC-Detection platform 1020. For example, the RDC-Detection platform may remotely communicate with and control the deposit facility, e.g., the card reader, the check scanner, etc. installed at the POS terminal or a participating store, an ATM machine, and/or the like. In another implementation, the third party agent who operates a general purpose home/office device, such as a smart phone, a computer, and/or the like, may communicate with the RDC-Detection platform and submit deposit information in a similar manner as discussed in FIGS. 2A-B.
In one embodiment, the RDC-Detection platform 1020 may verify the user's card information and determine whether the user's bank account is eligible for RDC-Detection service 3120. Upon authorization, the third party agent 1010 may process the check deposit 3125, including generating one or more images of the check and sending the check images to the RDC-Detection platform 1020, as further illustrated in 4C
In one implementation, the check images may be sent to and updated at the RDC-Detection platform 1020 in real time, and real time credit may be posted to the user's bank account 3130, as further FIGS. 4C-D.
In one embodiment, upon soft posting the deposit amount to the user's bank account, the RDC-Detection platform 1020 may clear the transaction. In one implementation, an Image Cash Letter (ICL) complying with the Check 21 Act, may be generated based on the received check images and deposit data 3135 at the RDC-Detection platform and sent to a clearinghouse bank 1030 for clearing 3140. For example, in one implementation, the check clearing 3135 and 3140 may take a similar procedure as further illustrated in FIGS. 8A-C.
In one implementation, upon soft posting of the deposit funds, the RDC-Detection server may send notification to the user 3150 to the user 105, so that the user may view the conformation message. For example, in one implementation, the user may receive a confirmation via email 3155. For another example, the user may receive a text message of confirmation via his cellular phone, or receive an automatic confirmation call 3160.
 FIG. 4A provides a logic flow diagram illustrating work flows between a user and the RDC-Detection third party agent within embodiments of the RDC-Detection. As discussed in FIG. 3A, a user 105 may present cash or a check to the third party agent 1010 to request deposit 4105. The third party agent 1010 may verify whether the user is an East-Deposit service member 4106. For example, in one implementation, a RDC-Detection service representative may ask for membership information from the user. For another example, if the user possesses a membership card (e.g., a bank ATM/debit card authorized for RDC-Detection service, a RDC-Detection membership verification card, etc.), he may swipe the card at a card reader to provide membership authentication 4110.
If the user is not a member of RDC-Detection, or the card reader fails to recognize the user's bank card, the user may be directed to a RDC-Detection service representative (e.g., a store clerk, an express mailman, etc.) for further assistance 4108. The RDC-Detection service may be continued with the service representative 4109.
In one embodiment, upon sending member card information to a RDC-Detection platform, system approval may be received at the third party agent, and the user may be presented with a list of available accounts for deposit for selection 4112 via user interface, and determine whether an expected account 4118 is presented. For example, a user may have a number of accounts available for deposit, but a user preferred account may not be associated, or registered for RDC-Detection service, and thus such an account may not be presented to the user during RDC-Detection service. In such case, RDC-Detection may instruct the user to contact a service assistant 4120, e.g., by displaying instructions and contact information of RDC-Detection customer service via a user interface.
In another implementation, if the user selects an account from the presented list for depositing funds 4125, the third party agent may proceed to process the deposit request 4126, as further illustrated FIG. 4C. After receiving a notice of soft posting from the RDC-Detection platform, the third party agent may send a deposit notification to the user 4128, e.g. via emails, text messages, or displaying a deposit receipt on a user interface.
 FIG. 4B provides a logic flow diagram illustrating work flows for cash deposit between a user and the RDC-Detection third party agent in an alternative embodiment of the RDC-Detection. In one embodiment, after user swiping membership card at the third party agent, the third party agent may collect deposit items from the user 4130. In one implementation, if a cash deposit request is received at 4130, the third party agent may proceed to process the received cash 4132, as further illustrated in FIG. 4D.
If it a check is presented for deposit 4131, the third party agent may inspect the check 4133 to verify the check is qualified 4135. For example, in one implementation, a service representative at the RDC-Detection participating store may manually inspect the presented paper check to see whether it is a proper check, and whether it has been endorsed. For another example, the user may insert and scan the check at the check deposit facility equipped at the RDC-Detection participating store, and the RDC-Detection may perform an initial optical character recognition (OCR) upon the captured check image to inspect check formalities. If the check is qualified for deposit 4135, the third party agent may proceed with process the check for deposit 4136. Otherwise, the third party agent may return the check to the user 4139, and inform the user of the ineligibility of the check and suggest the user mail the check to a RDC-Detection enabled bank branch for deposit 4138.
In one implementation, the check processing may include courtesy amount recognition (CAR) and/or legal amount recognition (LAR) 4137. For example, in one implementation, the third party agent may capture images of the paper check for OCR and extract deposit information from the check images. The RDC-Detection may compare the extract deposit amount from the check image and an amount entered by the user to confirm consistency, as further illustrated in FIG. 4E. In an alternative implementation, the RDC-Detection may perform intelligent character recognition (ICR) to recognize CAR/LAR amount to inspect the quality of the check image.
In one implementation, the third party agent may inquire the user for additional deposit requests 4140 until the agent ends the deposit service.
 FIG. 4C provides a logic flow diagram illustrating work flows of processing check deposit between the user, the third party agent, the RDC-Detection platform and the clearinghouse within embodiments of the RDC-Detection. Within embodiments, upon the receipt of an endorsed check from the user, the third party agent may enter a deposit amount 4142 and generate an image of the check 4143. For example, in one implementation, a RDC-Detection representative or the user may be prompted to manually enter a deposit amount at a RDC-Detection terminal. The third party agent may also generate images of the check via an image capture device within similar embodiments discussed in FIGS. 2A-C.
In one implementation, the third party agent 1010 may determine whether the generated check images are eligible for further processing. In one implementation, a service representative may view the check image on screen to determine whether the image is disoriented, blurred or skewed. In another implementation, the third party agent may send the check images to the RDC-Detection platform where an initial OCR may be performed on the check image to inspect whether the check is readable. If the check image fails to pass the initial formality inspection, the third party agent may receive an error message 4145, and the user may be directed to customer service 4146 with returned check 4147 for further assistance in RDC-Detection service. In one implementation, the user may cancel the deposit 4165 and close the transaction.
When the third party agent determines the check image is eligible for deposit processing, a deposit request may be forwarded to the RDC-Detection platform 1020. For example, in one implementation, a data package including the captured check images and user entered check metadata, such as a deposit amount, a selected deposit account, and/or the like, may be send to the RDC-Detection platform. In one implementation, the RDC-Detection platform may conduct duplicate detection 4152, as discussed in similar embodiments in FIGS. 8A-C. If the check is a duplicate, the RDC-Detection platform may reject the deposit 4155 and end the transaction. Otherwise, if not, the RDC-Detection platform may provisionally post the deposit amount to the user's selected deposit account, and send the deposit information to the clearinghouse 1030 for soft post check 4155. For example, the soft post check may be performed within similar embodiments discussed in FIG. 8C.
In one implementation, upon receiving verification of the soft post status from the clearinghouse 4156, the RDC-Detection platform may forward the soft post status to direct banking 4157, e.g., the payee's bank. If the payee's bank confirms the deposit, the RDC-Detection platform may generate a data record of the transaction and store it in the RDC-Detection database 4158. For example, in one implementation, the RDC-Detection platform may keep a deposit record repository for duplicate check, as discussed in one implementation in FIGS. 9A-C.
In a further implementation, the RDC-Detection platform may communicate with the payee's bank to control funds availability 4159. For example, in one implementation, the RDC-Detection service may apply a deposit constraint to the deposit, allowing an available deposit amount to be deposited based on the existing amount in the user's bank account, as discussed in one implementation in FIG. 3E.
In one implementation, after the funds availability control, if there remains an unauthorized deposit amount 4160, the user may be directed to customer service 4146. If not, the third party agent may void the paper check 4162. For example, the paper check may be permanently modified by a âPAIDâ stamp printed thereon. For another example, the RDC-Detection facility at the third party agent may destroy the paper check by an electronic MICR spray to mark the check as deposited. The voided check may then be returned to the user 4163 and the deposit transaction is closed.
 FIG. 4D provides a logic flow diagram illustrating work flows of processing cash deposit between the user, the third party agent and the RDC-Detection platform within embodiments of the RDC-Detection. In one embodiment, the user 105 may present cash at the third party agent 1010, wherein the third party agent may inspect the cash 4170. For example, in one implementation, the third party agent may be equipped with a bill/coin counter to calculate the cash amount 4172 and detect any counterfeit. If the presented cash does not pass the initial inspection, e.g., counterfeit detected, etc., the user may be alerted and directed to RDC-Detection customer service 4175. In one implementation, the user may choose to cancel the deposit 4176 and exit the transaction with the third party agent.
In one implementation, if the cash is qualified, the third party agent may verify the calculated cash amount with the user 4173 to confirm the consistency in deposit amount. If the user agrees the deposit amount is correct 4174, the third party agent may send deposit information 4175 to the RDC-Detection platform. For example, the deposit information may include, but not limited to the user's RDC-Detection membership information, deposit account information, deposit amount, and/or the like. In one implementation, the user may be prompted to select an available account for cash deposit in a similar way to that in check deposit as discussed in one implementation in FIG. 3G. In another implementation, if the calculated amount is inconsistent with the user specified amount, the third party agent may cancel the deposit 4180.
In one embodiment, upon receiving deposit details from the third party agent 4182, the RDC-Detection platform may process the deposit 4183. For example, in one implementation, the RDC-Detection may control the funds availability of the user selected account in a similar manner as discussed in one implementation in FIG. 3E. If the RDC-Detection platform authorizes the deposit into the user specified account, the third party agent may receive a request to confirm the deposit from the RDC-Detection platform, and prompt the user to accept the deposit status. If the user or the third party agent does not agree with the deposit status at 4176, e.g., the deposit amount may be capped by fund availability control, etc., the third party agent may cancel the deposit 4177 upon user approval.
In an alternative implementation, if the user agrees with the deposit at 4176, the third party agent may print a deposit receipt 4188 for the user to conclude the transaction. In one implementation, after receiving a deposit confirmation from the third party agent 4190, the cash deposit amount may be soft posted to the user's account 4191 and a notification of the soft post may be sent to the user. In a further implementation, the RDC-Detection platform may create a transaction record of the cash deposit 4193, which may include a time stamp of the transaction, the deposit amount, the deposit account, and/or the like.
 FIG. 4E provides a logic flow diagram illustrating check deposit processing at the third party agent within embodiments of the RDC-Detection. For example, in one implementation, after receiving deposit information and processing the check 4136, the third party may capture an image of the check, via which the courtesy amount written on the check may be extracted to compare with a user entered deposit amount 4201. If the extracted courtesy amount from the check matches the manually entered amount, the third party may proceed with the check deposit processing, e.g., the deposit may be queued for a manual review 4202, as further illustrated in one implementation in FIG. 4I. Otherwise, if inconsistency occurs, the third party agent may choose to close the transaction.
 FIG. 4F provides a logic flow diagram illustrating membership verification between the third party agent and the RDC-Detection platform in one embodiment of the RDC-Detection. In one embodiment, the third party agent may receive membership information from the user when the user swipes his membership card at a card reader 4110. For example, the membership card may include, but not limited to an ATM debit card, a membership identification card, and/or the like. In one implementation, the card reader at the third party agent may forward the membership information, such as, but not limited to user name, user account, user's bank information to the RDC-Detection platform 1020, and the RDC-Detection platform may then verify the member information 4205. If the user has been verified to be an eligible RDC-Detection member 4206, the RDC-Detection platform may retrieve account details associated with the user 4207, and determine whether the retrieved bank accounts are a are available for RDC-Detection service 4208. If yes, a response may be formatted and sent to the third party agent via a user interface, presenting a list of authorized user bank accounts 4210. Otherwise, if the user is not a valid RDC-Detection member 4206, or if the user has not validated any of his bank accounts for RDC-Detection 4208, a denial may be sent to the third party agent 4212.
 FIG. 4G provides a logic flow illustrating deposit notification at the RDC-Detection platform within embodiments of the RDC-Detection. In one embodiment, the after receiving a confirmation of soft post 4190 (e.g., from a payee's bank if the RDC-Detection platform is independent of the payee's bank, etc.), the RDC-Detection platform may determine whether the deposit is successful. If yes, the RDC-Detection platform may notify the user by sending an email or text message to inform the deposit is received 4215. In an alternative implementation, the RDC-Detection platform may send the deposit confirmation to a third party agent terminal. The RDC-Detection platform may then create a virtual deposit slip 4216, and store the record 4217. For example, the virtual deposit slip may include images of the check and check metadata, such as, but not limited to the time and place of the deposit, user account, user name, deposit amount, and/or the like. Other implementations of storing deposit record may be discussed in FIG. 9A.
In one implementation, if the deposit notification indicates the soft post is not completed, the RDC-Detection platform may also generate a deposit slip for the check as âpresented but not depositedâ and store it in the RDC-Detection database.
 FIG. 4H provides a logic flow illustrating fund wiring from the third party agent to the RDC-Detection platform within embodiments of the RDC-Detection. In one embodiment, the third party agent may process the cash deposit in a batch. For example, in one implementation, at the start of a business day, the third party agent may accumulate cash deposit total from the wire timeframe 4220, e.g., the total cash deposit from the previous day. In one implementation, the third party agent may wire the accumulated funds 4222 to the RDC-Detection platform. In another implementation, the third party agent may build a daily cash deposit report 4224 and send the report to the RDC-Detection platform 4225.
At the RDC-Detection platform 1020, upon receipt of the wired funds 4226, the RDC-Detection platform may retrieve a clearinghouse cash deposit report 4228. In another implementation, the RDC-Detection platform may also receive the daily cash deposit report 4227 and compare it with the retrieved clearinghouse cash total to verify the wired amount 4230. If the received wired amount is correct 4231, the RDC-Detection may confirm the cash deposit 4234. Otherwise, the wire transaction may be denied 4233 and a denial notification may be sent back to the third party agent.
 FIG. 4I provides a logic flow illustrating an alternative embodiment of check deposit within embodiments of the RDC-Detection. In one embodiment, the RDC-Detection may process a plurality of checks in a batch. For example, in one implementation, the RDC-Detection platform may start with processing a plurality of received images of checks 4235. For the first check image 4236, the RDC-Detection platform may inspect the quality of the check image. If the image is qualified, the RDC-Detection platform may add it to ICL 4238. The process may be repeated until there is no additional deposit 4240. Otherwise, if the first check image fails to pass the initial inspection, the RDC-Detection may direct the check image to RDC-Detection manual processing.
For example, in one implementation, the disqualified check image may be sent to a review queue for manual review 4245. In one implementation, the RDC-Detection may prompt RDC-Detection staff to open and review the queued check images via a user interface terminal. In one implementation, the RDC-Detection staff may make modify the check image. For example, the RDC-Detection staff may improve the check image by proper cropping, deskewing, dewarping and format changes. After enhancement, an image replacement document (IRD) may be generated 4248 based on the check image and added to the documents to be went to the payor's bank 4250. The RDC-Detection staff may continue reviewing the check images in the queue until the queue is completed.
RDC-Detection User-Server Flow Overview
 FIG. 3B is of a logic flow diagram illustrating aspects of remote deposit of checks in one embodiment of the RDC-Detection. In FIG. 3A, a user may submit a remote deposit request 300. For example, in one embodiment, the RDC-Detection may operate a web site which guides a user through the process of collecting images of a check to be deposited. In some implementations, the web site may facilitate a browser-executable component (e.g., applets, scripts, etc.), that drives the process of collecting images. In one implementation, a user may visit a website controlled by the RDC-Detection via a web browser on the user's home computer and submit a request for remote deposit via the user interface of the webpage.
In another embodiment, for kiosk/ATM/retail deposit, a user may be instructed from an ATM/kiosk screen to place or insert the check into a check deposit slip for scanning, and/or the like.
In another embodiment, for mobile deposit, a user operating a mobile device may access the RDC-Detection website via the mobile device, or may launch a RDC-Detection component pre-installed on the mobile device and connect to the RDC-Detection platform to submit deposit requests via the RDC-Detection component.
In one embodiment, in response to the user request, the RDC-Detection platform may initialize a remote deposit component 302. For example, in one implementation, the RDC-Detection may retrieve and load a user interface page for remote deposit. In one embodiment, the RDC-Detection may instruct the user to capture and submit an image or video streaming of the check 305-306, as will be further illustrated in FIGS. 4A-C and 5B-C. In one implementation, the initialized remote deposit component may authenticate the user by prompting the user to login a remote deposit system with a user name and password if the user is an existing member of the RDC-Detection. For example, in one implementation, a remote depositor may access a remote deposit service website, and submit a request by clicking on a âdepositâ button on the webpage. The RDC-Detection may then lead to a login webpage, prompting the depositor to login to the remote deposit service with a user name and password.
For another example, for mobile deposit via a mobile device, the user may launch a âremote depositâ application on a menu of the mobile device to send a request for mobile deposit (e.g., via SMS, etc.), and the RDC-Detection may determine whether the mobile device has been registered based on its physical address (MAC address). In a further implementation, the RDC-Detection may instruct the user to submit biometrics information for authentication. For example, if the user is operating a video camera, video files and/or live video streaming of the user may be transmitted to the RDC-Detection to authenticate the user by face recognition procedures.
In one embodiment, the RDC-Detection may process the received check image or video file 310 (as will be further illustrated in FIGS. 6A, 6B-1, 6B-2, 6C, 6D, 6E, 6F, 6G, 6H-1, 6H-2, 6H-3 and 6H-4). For example, in one implementation, the RDC-Detection may process the received check image or video file to generate an enhanced digital check image in order to extract deposit information, and convert the check image to an image file format in compliance of virtual check standard (e.g., X9.37 cash letter image files, etc.). In one embodiment, the RDC-Detection may extract check deposit information from the processed check image 312. For example, in one implementation, an Optical Character Recognition (OCR) procedure may be applied to the enhanced check image and extract information such as the amount of deposit, the account number, banking routing number, payee's name, deposit date, endorsement, the magnetic ink character recognition (MICR) line which contains information of the account number of bank routing number, and/or the like. In another implementation, the RDC-Detection may analyze any metadata and additional submitted information associated with the check image, such as GPS information if image is submitted by a GPS enabled mobile device, time stamp of image capture, IP address of the image capture device, MAC address, system identifier (for retail POS/kiosk deposits), manually entered deposit amount, user identification (such as account name and password) and/or the like.
In one implementation, the RDC-Detection may determine the check is a duplicate or representment 315, (as will be further illustrated in FIG. 8). In one implementation, the RDC-Detection may perform the representment inspection at a payee's bank prior to provisional deposit 325. In another implementation, the RDC-Detection may send deposit data to an external agency for representment service
In one embodiment, the RDC-Detection may verify the check image based on the extracted information, e.g., determining whether the extracted check information is valid 317. For example, in one implementation, the extracted information from the check image may be compared with the user submitted deposit information, e.g., payee's name, deposit amount, etc. For another example, the RDC-Detection may check if a proper endorsement is contained on the back side of the check image.
In one embodiment, if the check is not valid 320, the bank may reject the check image and abort check deposit 321. In another embodiment, if the check is valid, the RDC-Detection may provisionally credit the indicated amount of funds into the user's amount 325. For example, in one implementation, the RDC-Detection may post the deposit to the payee's bank, and the payee's bank may provisionally credit the deposit amount to the payee's account.
In one embodiment, the RDC-Detection may perform a check clearing procedure to control fraudulent items 330, as will be further illustrated in FIG. 8B. For example, the RDC-Detection may send x9-37 cash letter check images to a regional branch of the Federal Reserve, a correspondent bank, a clearinghouse bank and/or the like to clear the check. If the RDC-Detection receives a positive result of the check clearing 332, the deposited credit may be confirmed 335. Otherwise, the provisionally credited funds may be deducted from the payee's account 334, and the transaction details may be provided to the user 328.
In an alternative embodiment, the bank may process the ACH debit entry, substitute check, and/or electronic image. As noted above, the bank may present the ACH debit entry to an ACH service provider (e.g., EPN), which may be responsible for settling the transaction between the payee's bank and the payer's bank. The bank also may convert the digital image into a substitute check and present the substitute check to an intermediary bank (e.g., a regional branch of the Federal Reserve) to complete the check clearing process. In one implementation, the bank may debit the payee's account if the original check is not received and/or sent within a predetermined period of time. For example, the bank may require that the payee send the check and have it postmarked within five business days of sending the electronic data representative of the check. If the check is not postmarked within the predetermined period of time, the financial institution may void the provisional credit (e.g., withdraw funds from the account).
In one embodiment, upon completion of the deposit, the RDC-Detection may further instruct the user to void the physical check 340 to avoid representment. For example, in one embodiment, the RDC-Detection may instruct the user to place the physical check to certain equipment such that a stimulus may be applied to the physical check to permanently modify the check as âvoidâ. For another example, if the deposit takes place at a kiosk or ATM, the deposit facility may print âELECTRONICALLY PRESENTEDâ across the front of the original check when the check is scanned by equipment designed to convert the check to an electronic image for further processing. For another example, the physical check may contain a radio frequency identification 3 (RFID) tag. When the RFID tag receives a particular radio signal, the RFID tag may be modified as âvoidâ. For further examples, if the physical checks contain tags sensitive to heat, the check may be voided by the heat generated by the application of a bright light source, such as one that may be found in a scanner.
In another implementation, the RDC-Detection may void the physical check by MICR line destruction. For example, the RDC-Detection may punch holes on the MICR line printed on the paper check. In one implementation, the punch mechanism may comprise a roller placed with the image capture device, e.g., inside a scanner, etc., and may be positioned to coincide with the placement to the MICR characters on the check item inserted into the scanner. The roller may comprise a spindle with several sharp protrusions (e.g., conical) on its sides, wherein the height of the spindle may be equal to or around the height of the MICR characters. In one implementation, the remote processing component running on the depositor device, e.g., the depositor's computer, Apple iPhone, and/or the like, may control the roller to enable or disable it against the paper check inserted in the scanner, e.g., to punch holes on the check. In one implementation, when the roller is enabled by the remote processing component, the roller may rotate around its central axis to progressively punch holes along the MICR line of the paper check fed into the scanner, which may permanently distort or destroy the MICR characters. In a further implementation, the sharp protrusions on the side of the roller may be shaped to form a specific punch character, such as an âXâ shape, a â#â shape, and/or the like. The design of the punch character may adopt standardized E13B fonts and/or other international MICR fonts so that it will be recognized by a financial institution as a MICR destruction symbol.
For another example, the RDC-Detection may utilize a magnetic ink spray to chemically destroy the MICR line, which may be printed using on the paper check in a magnetic ink or toner containing iron oxide. In one implementation, a magnetic ink sprayer may be placed in the scanner used to capture images of the check. For example, the sprayer may be included in a printer cartridge with a rectangular slit, wherein the slit has the length to at least cover the height of the MICR characters. When the sprayer is enabled, the magnetic ink sprays out of the slit which generates a magnetic rectangle of the height of MICR line characters. Thus when the paper check is fed into the scanner, the magnetic sprayer may generate a line of magnetic rectangles to cover the original MICR characters. In a further implementation, similar to the punch characters as previously discussed, the split of the sprayer may be designed to form a specific magnetic character, which may represent a âMICR disabled characterâ instead of being a rectangle slit, and standardized E13B fonts and other international MICR fonts may be adopted.
In one embodiment, the RDC-Detection may allow the user to manually start the MICR destruction mechanism. For example, a user may press a button to initiate the roller puncher, or the magnetic sprayer, after confirming a soft post status notification is received to ensure the check deposit has been processed. For another example, the RDC-Detection may remotely control the image capture device (e.g., the scanner) via the remote processing component to automatically start the MICR destruction when the check deposit has been processed. In one implementation, once the MICR destruction is launched, instructions programmed and stored with the MICR destruction mechanism (e.g., stored in an EPROM memory of the scanner, etc.) may execute commands including, placing the coordinates of the starting punch or spray, performing the punching or spraying within the pre-programmed time frame, stopping the punching or spraying when the pre-programmed time frame is reached. In a further implementation, the length of the punching or spraying time frame may be programmable, and configurable by a user via the remote processing component.
In an alternative implementation, the RDC-Detection may instruct the user to physically destroy the check and submit digital evidence of check detriment. For example, the user may tear the check, capture an image of the torn check pieces, and submit the captured image to the RDC-Detection for verification, as shown in FIG. 11H. For another example, if the user operates a video camera, the user may submit live video streaming, and/or a video file, showing the deposited paper check being destroyed.
In one embodiment, the RDC-Detection may create a record of the deposited check and store the deposited check record in a repository to prevent check re-presentment. For example, in one implementation, the RDC-Detection may store an image of the check associated with extracted information, such as payee's name, deposit date, bank name, MICR information including the bank routing number and account number, and/or the like. In another implementation, the RDC-Detection may create a record of the check based on a portion of the check image which may be unique to represent the check. For example, in one implementation, the created check record may only include an image of the front side of a check.
Alternative Embodiments of RDC-Detection User-Server Flow Overview
 FIGS. 3C-D provide logic flow diagrams illustrating aspects of remote deposit of checks in alternative embodiments of the RDC-Detection.
 FIG. 3C is a flow diagram illustrating an example method of remotely depositing checks. As shown in FIG. 3B, at 345, an account owner (i.e., the payee) may receive a check from a third party (i.e., the payer). At 346, the payee may endorse the check by signing the back of the check in the designated field. If the payee wishes to deposit the check into an account, such as a savings and/or checking account, the payee also may write an account number below the signature. At 347, the payee may convert the check into electronic data. This may be accomplished in any number of ways. For example, the payee may create a digital image of the first side of the check, the second side of the check, or both. The digital image may be created using a general purpose flatbed scanner, digital camera, photocopier, fax machine, and the like.
The payee also may convert the check into electronic data by scanning the check using a Magnetic Ink Character Recognition (MICR) device. Checks typically contain MICR information (e.g., routing number, account number and check number) on the bottom left-hand corner of the check. The MICR information usually consists of characters written in a magnetic ink. The MICR information may be read electronically by passing the check through the MICR device, which may translate the characters by magnetizing the ink.
As shown in FIG. 3C, at 348, the payee may send the electronic data to a bank that is associated with an account for depositing funds. Any means for transmitting electronic data over a communications network is consistent with an embodiment. For example, if the payee creates a digital image of the check, the image may be sent to the bank by attaching the image to an email. If the electronic data is in the form of MICR information captured by a MICR device, the device may have an output component for transmitting the electronic data to the bank over the communications network. In addition, the electronic data may include information pertaining to the account for depositing funds, such as the account number and/or the name on the account. The account number may appear on the check itself, below the signature endorsing the check. The account number and/or name on the account also may appear in an email, either with or without the digital image, for example.
At 349, the payee may void the check. For example, the payee may write and/or stamp âvoidâ on the check. At 350, the payee may send the check to the financial institution associated with the account for depositing funds. The check may be sent via a common carrier, such as the United States Post Office, FedExÂ®, United Parcel ServiceÂ®, and the like. The process may then proceed to 350. It will appreciated that 349 and 350 may be performed to provide additional security features. For example, by removing the check from circulation, it may be less likely that the check will be deposited more than once.
At 351, the bank may receive the electronic data representative of the check along with information pertaining to the account for depositing funds. At 352, the bank may credit funds to the account. The credit may be a provisional credit, enabling the payee to access the funds while the check is being cleared. A provisional credit may be voided if the bank determines that the transaction is erroneous and/or fraudulent.
At 353, the bank may generate an Automated Clearinghouse (ACH) debit entry, substitute check, and/or electronic image. ACH transactions typically include payment instructions to debit and/or credit an account. Banks often employ ACH service providers to settle ACH transactions. Examples of ACH service providers include regional branches of the Federal Reserve and the Electronic Payments Network (EPN). In an embodiment, a payee may receive a check in return for the sale of goods, such as a used car, for example. The payee may endorse the check and/or send electronic data representative of the check to the payee's bank, which may be referred to as the originating depository financial institution (ODFI). As noted above, the electronic data may be generated in any number of ways. For example, the payee may use a MICR device to scan and translate the MICR information (e.g., account number, routing number, check number, etc.) located on the check and transmit the data to the payee's bank along with information pertaining to the account for depositing funds. Upon receipt of the MICR information and account information, the payee's bank may credit funds to the payee's account and generate an ACH debit entry to the payer's account, which may be presented to the ACH service provider for processing.
The ACH service provider may process the debit entry by identifying the account and bank from which the check is drawn. The bank from which the check is drawn (i.e., the payer's bank) may be referred to as a receiving depository financial institution (RDFI). If the payer's bank verifies the transaction, the ACH service provider may settle the transaction by debiting the payer's bank and crediting the payee's bank. The payer's bank may then debit the payer's account.
A substitute check is typically a paper reproduction of an original check and may be the legal equivalent of the original check. Substitute checks were authorized under The Check Clearing for the 21st Century Act, commonly known as Check 21. The Act was enacted to facilitate the check clearing process by allowing banks to transmit electronic images of checks (e.g., substitute checks) to other banks rather than physically sending the original paper checks. Check 21 does not require that banks use substitute checks. In fact, many banks may have voluntary agreements to accept certain electronic images of checks even though the images may not qualify as substitute checks under Check 21. If a bank does not have a voluntary agreement and/or refuses to accept an electronic image, the financial institution is required under Check 21 to accept a substitute check in lieu of the original check.
In an embodiment, a payee may receive a check as a birthday gift, for example. The payee may endorse the check and/or send electronic data representative of the check to the payee's bank. As noted above, the electronic data may be generated in any number of ways. For example, the payee may use a general purpose flatbed scanner and/or digital camera to create a digital image of the front and back of the check. The payee may then attach the digital images to an email and send the digital image to the payee's bank along with information pertaining to the account for depositing funds. Upon receipt of the digital images and/or account information, the payee's bank may credit funds to the payee's account. If the payee's bank and the payer's bank have a voluntary agreement for accepting electronic images of checks, the payee's bank may generate an electronic image of the check and/or simply forward the digital images received from the payee to the payer's bank. If there is no agreement between the banks, the payee's bank may convert the digital images into a substitute check and present the substitute check to the payer's bank and/or a check clearing service provider (e.g., a regional branch of the Federal Reserve) to clear the check.
Returning to FIG. 3C, at 354, the bank may process the ACH debit entry, substitute check, and/or electronic image. As noted above, the bank may present the ACH debit entry to an ACH service provider (e.g., EPN), which may be responsible for settling the transaction between the payee's bank and the payer's bank. The bank also may convert the digital image into a substitute check and present the substitute check to an intermediary bank (e.g., a regional branch of the Federal Reserve) to complete the check clearing process. At 355, the bank may debit the payee's account if the original check is not received and/or sent within a predetermined period of time. For example, the bank may require that the payee send the check and have it postmarked within five business days of sending the electronic data representative of the check. If the check is not postmarked within the predetermined period of time, the financial institution may void the provisional credit (e.g., withdraw funds from the account). At 356, the financial institution may receive the check from the payee. It will appreciated that 355 and 356 may be performed to provide additional security features by removing the check from circulation.
 FIG. 3D is a flow diagram illustrating an alternative embodiment of an example method of remotely depositing checks. As shown in FIG. 3C, at 358, a payee may receive a check from a third party payer. At 360, the payee may endorse the check by signing the back of the check in the designated field. If the payee wishes to deposit the check into an account, such as a savings and/or checking account, the payee also may write an account number below the signature. At 362, the payee may call a bank associated with an account for depositing funds and request that the check be deposited into the account. Any method of contacting the bank is consistent with an embodiment. For example, the payee may use a phone, email, instant messaging, and/or a fax machine to make the request.
At 363, the payee may convey the check information and/or information pertaining to the account for depositing funds. For example, the payee may convey the MICR information (e.g., account number, routing number, check number, etc.) on the check. In addition, the payee may convey the account number of the account where the funds are to be deposited. Any method of conveying the information is consistent with an embodiment. For example, as noted above, the payee may use a phone, email, instant messaging, and/or fax machine. At 364, the payee may void the check and/or send the check to the bank. The process may then proceed to 365.
It will be appreciated that 364 may be performed to provide additional security features. For example, by removing the check from circulation, it may be less likely that the check will be (willfully or accidentally) deposited more than once. In addition, by requiring the payee to produce the check, the financial institution may prevent the deposit of fraudulent checks.
At 365, the bank may receive the check information and account information. At 366, the bank may credit funds to the account. As noted above, the credit may be a provisional credit, enabling the payee to access the funds while the transaction is being processed. At 367, the bank may void the provisional credit if the original check is not sent and/or received within a predetermined period of time. At 368, the bank may receive the check. At 369, the bank may generate an ACH debit entry, substitute check, and/or electronic image. At 370, the bank may process the ACH debit entry, substitute check, and/or electronic image. It will appreciated that 369 and 370 may be performed to provide additional security features.
Other security features may be consistent with an embodiment. For example, the bank may only permit certain payees to remotely deposit checks. By way of example, and not limitation, the bank may accept electronic data representative of a check and/or accept a request to deposit a check if the payee's account is in good standing. The payee's account may be considered in good standing if the payee has a positive account balance, has a predetermined amount of funds in the account, and/or is not delinquent on any payments to the bank. The bank also may receive the electronic data and/or request but credit funds to the account if the account is in good standing as of the time the electronic data and/or request was received. In addition, the bank may impose additional requirements on a payee remotely depositing a check into an account that is not in good standing. For example, as noted above, the bank may provisionally credit the payee's account upon receipt of the electronic data and/or request but may require the payee to send the check to the bank. Thus, the account may be debited if the check is not sent and/or received within a predetermined amount of time.
In some embodiments, the RDC-Detection may impose limitations on the deposit amount and/or the availability of the deposit. For example, the RDC-Detection may place a daily, weekly, and/or other periodic limit for the total amount of remote deposits for a given period. The RDC-Detection may additionally or alternatively limit the number of periodic transactions for a given user. Depending on the implementation, such limits may be pre-specified for users (such as a default of limiting users to 3 remote deposits per day, and limiting total daily deposits to $10,000) and/or determined based on risks associated with a use and/or a transaction. For example, a user may have a pre-specified deposit limit of $10,000 per day, but if the user requests and/or attempts to deposit an amount greater than that (e.g., a check for $15,000), rather than simply rejecting the deposit, the RDC-Detection may notify the user that the amount is greater than there specified deposit limit. In some such embodiments, the RDC-Detection may allow the user to request that the deposit limit be raised for this transaction, in some embodiments for an associated fee, and the RDC-Detection may notify a pre-specified bank or financial institution administrator to approve or reject the request.
In some embodiments, the RDC-Detection may include user and/or transaction information in the notification to assist the administrator in making the decision, such information including the location of the user requesting the deposit, the bank on which the deposited information is drawn, the amount of time the user has been associated with the institution, prior deposit/banking history, etc. The RDC-Detection may additionally or alternatively limit the availability of some or all of the funds of deposit(s) that exceed the pre-specified amount.
Similarly, the RDC-Detection may limit the availability of deposited funds according to similar defaults and/or determinations. For example, if the user is depositing funds from a location (e.g., as determined by GPS metadata associated with a deposit from a mobile device) that is outside the user's normal geographic region (e.g., the user's mailing address and surrounding area), the amount of funds made immediately available may be less than if the user is making the deposit from his or her home. Similarly, the amount of the deposit, the account(s) to which the deposit is applied, user account balance(s), user tenure with the financial institution, and/or other information may be utilized by the RDC-Detection in determining the amount(s) and timeline for availability.
In one implementation, the RDC-Detection utilizes a risk matrix, with various weighted risk factors corresponding to risk information, to determine account limitations. In another implementation, the RDC-Detection may utilize risk information in a risk calculation, in which each piece of risk information is assigned a value and the amount available is determined based on the total risk value of the collected information. For example, a deposit of over $5000 may have a higher risk value than a smaller deposit amount, and, as such, may have more restrictions on availability of the full amount. Similarly, a deposit by a user that had been with a bank for 10 years may be determined to have a lower risk value than a user who had just become a member of the bank. In some implementations, the amounts available and/or the deposit limits may be determined by the RDC-Detection utilizing determined risk scores and thresholds such that a user who is determined to have a very low risk value has very few limitations imposed on his or her account, a user that has a determined risk value that exceeds a first threshold but is less than a second threshold may have moderate restrictions associated with his or her account, and a user that has a determined risk value that exceeds the second threshold may have even more restrictions applied to his or her account. In some embodiments, the RDC-Detection may utilize local and/or national regulations in determining and/or applying limitations to accounts and/or deposits.
RDC-Detection Exemplary User Interface for Deposit Limit
 FIG. 3E shows a schematic user interface illustrating In some embodiments, the RDC-Detection may impose limitations on the deposit amount and/or the availability of the deposit. For example, the RDC-Detection may place a daily, weekly, and/or other periodic limit for the total amount of remote deposits for a given period. The RDC-Detection may additionally or alternatively limit the number of periodic transactions for a given user. Depending on the implementation, such limits may be pre-specified for users (such as a default of limiting users to 3 remote deposits per day, and limiting total daily deposits to $10,000) and/or determined based on risks associated with a use and/or a transaction. For example, a user may have a pre-specified deposit limit of $10,000 per day, but if the user requests and/or attempts to deposit an amount greater than that (e.g., a check for $15,000), rather than simply rejecting the deposit, the RDC-Detection may notify the user that the amount is greater than there specified deposit limit as shown in FIG. 3D. In some such embodiments, the RDC-Detection may allow the user to request that the deposit limit be raised for this transaction 371, in some embodiments for an associated fee, and the RDC-Detection may notify a pre-specified bank or financial institution administrator to approve or reject the request.
In some embodiments, the RDC-Detection may include user and/or transaction information in the notification to assist the administrator in making the decision, such information including the location of the user requesting the deposit, the bank on which the deposited information is drawn, the amount of time the user has been associated with the institution, prior deposit/banking history, etc. The RDC-Detection may additionally or alternatively limit the availability of some or all of the funds of deposit(s) that exceed the pre-specified amount.
Similarly, the RDC-Detection may limit the availability of deposited funds according to similar defaults and/or determinations. For example, if the user is depositing funds from a location (e.g., as determined by GPS metadata associated with a deposit from a mobile device) that is outside the user's normal geographic region (e.g., the user's mailing address and surrounding area), the amount of funds made immediately available may be less than if the user is making the deposit from his or her home. Similarly, the amount of the deposit, the account(s) to which the deposit is applied, user account balance(s), user tenure with the financial institution, and/or other information may be utilized by the RDC-Detection in determining the amount(s) and timeline for availability.
In one implementation, the RDC-Detection utilizes a risk matrix, with various weighted risk factors corresponding to risk information, to determine account limitations. In another implementation, the RDC-Detection may utilize risk information in a risk calculation, in which each piece of risk information is assigned a value and the amount available is determined based on the total risk value of the collected information. For example, a deposit of over $5000 may have a higher risk value than a smaller deposit amount, and, as such, may have more restrictions on availability of the full amount. Similarly, a deposit by a user that had been with a bank for 10 years may be determined to have a lower risk value than a user who had just become a member of the bank. In some implementations, the amounts available and/or the deposit limits may be determined by the RDC-Detection utilizing determined risk scores and thresholds such that a user who is determined to have a very low risk value has very few limitations imposed on his or her account, a user that has a determined risk value that exceeds a first threshold but is less than a second threshold may have moderate restrictions associated with his or her account, and a user that has a determined risk value that exceeds the second threshold may have even more restrictions applied to his or her account. In some embodiments, the RDC-Detection may utilize local and/or national regulations in determining and/or applying limitations to accounts and/or deposits.
In one implementation, if the RDC-Detection determines the deposit amount has exceeded a maximum one-time remote deposit amount defined by the payee's bank. If yes, the RDC-Detection may notify the user via a user interface and provide options for the user to proceed. For example, the user may select to submit q request to raise the deposit limit 371, cancel the remote deposit and exit 372, or to only deposit the maximum available amount for next business day availability and send the deposit information to a closest branch for in-person deposit service 373.
RDC-Detection Account Selection
 FIG. 3F provides a logic flow diagram illustrating aspects of remote deposit with account selection in one embodiment of the RDC-Detection. To reduce the processing necessary to deposit a check remotely into an account other than a primary financial account, such as a checking account, the RDC-Detection may provide the depositor the ability to select from a list of accounts an account in which to deposit the check. In one embodiment, upon initializing the RDC-Detection component 310, the RDC-Detection platform may prompt the user to login the RDC-Detection system. For example, in one implementation, the RDC-Detection may display a user interface for login 381 at the RDC website, and instruct the user to submit user login information 382, such as a username and a password etc. In another implementation, the RDC-Detection may directly recognize the user device by its hardware tag, e.g., the mobile device MAC address, and/or the like, if the user has registered the user device with the RDC-Detection.
In one embodiment, the RDC-Detection platform may authenticate the user login, and then retrieve user profile 383. In one implementation, the user profile may record information including the user name, user contact information, user credit history, user account information, and/or the like. In one implementation, to assist the depositor in determining which accounts may be available for deposit, the RDC-Detection may determine a list of available accounts associated with the user for deposit 384. For example, the RDC-Detection may retrieve a list of user authorized accounts for remote deposits. For another example, if the RDC-Detection is affiliated with a payee's bank, the RDC-Detection may only retrieve a list of user accounts associated with the payee's bank. For another example, the RDC-Detection may determine that, based upon the types of the accounts, checking, savings, and investment accounts, may be available for deposit of the negotiable instrument.
In an alternative implementation, if an indication of deposit amount is available at 384, for example, the user has submitted an amount of deposit to RDC-Detection, or the account selection 381-391 take place after the user has submitted a check image and the RDC-Detection has processed the check image to obtain deposit data, the RDC-Detection may determine a list of available accounts for deposit based on the requirement of each account. For example, the RDC-Detection may filter accounts that have a maximum allowable deposit amount lower than the deposit amount. For another example, to assist the depositor in determining which accounts may be available for deposit, a financial institution may display a list of financial accounts to the depositor. In a further implementation, if the RDC-Detection is affiliated with a financial institution, the RDC-Detection may generate a list of accounts, wherein the RDC-Detection is granted access to the account by the account owner even if the account is at a different financial institution. For example, a user may submit a remote deposit request to the RDC-Detection platform at Bank A but Bank A may provide an option for the user to directly deposit the check into his/her account at Bank B, if Bank A is authorized by the user to access his/her account at Bank B.
In one embodiment, the RDC-Detection may display a user interface for account selection 385, e.g., a dropdown list, a click-and-choose list, etc., and the user may submit a selection of account 386. The RDC-Detection may then determine whether the RDC-Detection is granted permission to access the selected account 387. For example, in one implementation, as discussed above, if the RDC-Detection is associated with a first payee's bank, but the selected account is associated with a different payee's bank, then the first bank needs to be granted permission by the account owner to access the account at the different bank in order to proceed with check deposit. For another example, if the RDC-Detection is a remote deposit service agency, then the RDC-Detection may only access an account at a payee's bank only with authorization of the account owner.
In one embodiment, if the permission is granted 390, the RDC-Detection may proceed to determine whether the submitted selection of accounts include more than one account 392; and otherwise, the RDC-Detection may notify the user that the selected account is unavailable 391. In one embodiment, if there are multiple accounts selected 392, the RDC-Detection may display a user interface for amount allocation 393 the user and request the user submit amount allocations 394 for each selected account. For example, in one implementation, if the user selected to deposit into both a checking account and a savings account, the user may then split the deposit amount and enter the portions of amount associated with each account for deposit processing.
 FIG. 3G provides an example of a schematic screen shot illustrating a user interface presenting a list of selectable accounts within one embodiment of RDC-Detection. A financial institution may determine that, based upon some criteria as discussed above, checking account, saving account, and investment account, may be available for deposit of the negotiable instrument. A depositor may then select from a list of selection boxes which account to deposit the negotiable instrument. As shown in FIG. 3F, the depositor has selected the checking account and the investment account. Thus, the depositor may be further requested to enter a first amount to be deposited into the checking account and a second amount to be deposited into the investment account, respectively.
RDC-Detection Image Submission
 FIG. 4J provides a logic flow diagram illustrating aspects of instructing check image capturing and uploading in one embodiment of the RDC-Detection. In one embodiment, upon receiving a remote deposit request from a user, the RDC-Detection may determine whether a user image capture device is controllable 405. In one implementation, the RDC-Detection platform may remotely control a scanner connected to a home computer, a built-in camera of a mobile device, an ATM/kiosk machine, and/or the like. For example, in one implementation, if a user visits a RDC-Detection website via a home computer, a mobile device and/or the like, an embedded browser component running on the website, such as JAVA applets, Flash scripts, etc., may determine whether the RDC-Detection platform can control a user image device via the user terminal device. For another example, in one implementation, the RDC-Detection platform may establish a secure communications channel with a user mobile device, and directly control the built-in camera of the mobile device via hardware interfaces. For another example, in one implementation, the RDC-Detection platform may directly control an ATM/kiosk machine via a specialized deposit communications channel.
In one embodiment, for different devices (e.g., scanners, digital camera, mobile devices, etc.), certain permissions may be used in order to allow the browser component to remotely control the image capture device. For example, in one implementation, a user image device may require certificate authentication to allow secure remote control from the RDC-Detection platform. Such certificates may be digital signatures interfacing an image capture device driver, a Secure Socket Layer (SSL) encrypted certificate, and/or the like.
In one embodiment, if the image capture device is a scanner, the drivers of the scanner may be different for different operating environmentsâe.g., the same scanner may use a different driver depending on whether it is being operated from an environment based on one of the WINDOWS operating systems, an environment based on one of the operating systems used in APPLE computers, an environment based on a version of the LINUX operating system, etc. For example, a Canon imageFORMULA DR-7580 Production Scanner requires a DR-7580 ISIS/Twain Driver version 1.7 for Windows 2000 SP4, XP 32 bit SP3, XP 64 bit SP3, Vista 32 bit SP2, Vista 64 bit SP2, Windows 7 32 bit and Windows 7 64 bit, and Canon LiDE 50 drivers for Mac OS X. In that case, each driver may use different certificates, and different environments may use various different environment-specific technologies to allow the scanner to be controlled from a remote web server. In such cases, the RDC-Detection may obtain a large number of certificates, and may interface with a large number of different technologies, to support a large number of scanner-environment combinations and/or other image capture device environment, in order to allow its software to control scanners for a variety of customers.
As such, in one embodiment, if the user image capture device is remotely controllable by the RDC-Detection platform via 410, the RDC-Detection may retrieve security certificate for the corresponding image capture device 435, and control the image capture device to obtain the check images. For example, in one implementation, the browser component, which may be a security JavaScript running on the web browser application, may create a device digital certificate to enable HTTPS on the image capture device. In one implementation, the JavaScript may download a certificate from the remote RDC-Detection if available to interface with the driver of the image capture device, and create a public key for the certificate to be used in SSL encryption to establish an encrypted channel between the RDC-Detection platform and the image capture device.
In one implementation, the RDC-Detection may instruct a user to place the front/back sides of the check in front of the image capture device to create images of the check 440. For example, in one implementation, if a scanner connected to a computer is used, the browser component running on a home computer connected to a scanner may control the home scanner to start upon user request and automatically collect the images in an appropriate format and resolution, and can then upload the image for deposit. In such cases, the user may place the physical check in the scanner bed and to click âstartâ on the browser interface. In one implementation, the browser component may instruct the user to flip the physical check and repeat the process for both sides of the check via a web page interface, in order to obtain images of the front and the back.
For another example, in one implementation, a mobile device, such as an Apple iPhone may initiate a pre-installed program, or download and install a software package instantly from the RDC-Detection platform, which may facilitate the RDC-Detection controlling the mobile device (e.g., the iPhone) to obtain and upload check images. In such cases, a user may position the mobile device and take pictures or videos of both sides of the check, as illustrated in FIG. 11A-H. In a further implementation, if the mobile device is an Apple iPhone, the RDC-Detection may further instruct the user to configure the system settings of the built-in camera to obtain images in compliance with quality standards, such as grayscale requirement, resolution requirement, image file size requirement, and/or the like.
For another example, in one implementation, for kiosk/ATM deposit, a user may be instructed from the screen of a kiosk/ATM machine to place or insert the check into a check deposit slip for scanning, and/or the like.
In one implementation, the RDC-Detection may also instruct the user to enter an amount of the check to be deposited. For example, in one implementation, the user may enter a deposit amount on a RDC-Detection website, on a kiosk/ATM machine, or send an amount number to the RDC-Detection platform from a mobile device, and/or the like.
In an alternative implementation, the RDC-Detection may implement an âatomic depositâ without requesting the user to input deposit information in addition to the check image submission. In this case, the user device (e.g., the mobile device, the home scanner, etc.) may be decoupled from the transaction once the submission of the digital image file for deposit of the check is made. The transaction is thereafter managed by the RDC-Detection platform. In this manner, incomplete transactions are avoided by moving the transaction processing to the RDC-Detection platform side at a financial institution (e.g., payee's bank, etc.) after the user submits the digital image file. Any loss or severing of a communications connection between the user computing device and the RDC-Detection platform, such as due to browser navigation away from the RDC-Detection web page, communication failures, user logouts, etc. on the user side, will not affect the processing and the deposit of the check in the digital image file. Thus, the transaction will not be left in an orphaned state.
In another embodiment, if the image capture device is not controllable by the browser application component, the RDC-Detection may load an instruction user interface page 415, and instruct the user manually upload the check images. For example, in one implementation, the RDC-Detection platform may not have certificates for scanner drivers for a Macintosh computer. In one implementation, the RDC-Detection may instruct the user to enter a deposit amount 420 (as illustrated in a schematic user interface 450 shown in FIG. 4K), and to scan front/back side of the check and save the scanned image files 425. In one implementation, the RDC-Detection may instruct the user to save the scanned image files in a specified format (e.g., tiff, JPEG etc.) 430, as illustrated in the schematic user interface 456 and 458 of FIG. 4K. In one implementation, the RDC-Detection may instruct the user to edit the check image file prior to uploading 430. For example, in one implementation, as shown in FIG. 4L, the RDC-Detection may instruct the user to crop the check image via an image editing component, during which the user may submit a selection of check image corner 472 via a user interface. In a further implementation, the RDC-Detection may instruct the user to convert the obtained check image into a grayscale image prior to uploading the image file. In one implementation, the user may send the obtained check images to RDC-Detection platform via email, mobile MMS, RDC-Detection browser uploading, and/or the like.
In one embodiment, the RDC-Detection may receive check digital files 445 from the remote user device. In one implementation, the user may send the obtained check images to RDC-Detection platform via email, mobile MMS, RDC-Detection browser uploading, and/or the like. In one embodiment, if the user image capture device is video-enabled, the RDC-Detection may receive video clips of the check. In one implementation, video files may be saved in a series of compliant formats (e.g., AVI, MPEG4, RM, DIVX, etc.) and submitted to the RDC-Detection platform in similar manners with those of submitting check image files as discussed above. In one implementation, the RDC-Detection may instruct or assist the user to compress one or more video files into a package (e.g., WinZip package, etc.) and submit the pack to the RDC-Detection.
 FIG. 4M shows an exemplary apparatus for obtaining an image of the check in one embodiment of RDC-Detection. In one embodiment, a check sleeve or a check holder, with space to hold one or more checks, may be used to capture an image of a check. The checks sleeve may, for example, be made of a flexible material, such as plastic, and may have mechanisms to hold one or more checks in place in one or more designated spaces. For example, the check sleeve may have a flap or corners that hold a check in place during scanning. The type of flap or corners that are used may be chosen to hold the check in place, while also allowing certain parts of the image to be captured without optical interferenceâe.g., by having cutouts that directly expose the check in portions that are expected to undergo optical character recognition. The mechanism may also be configured to allow optical detection of the presence or absence of a check within the sleeve.
Within various embodiments, Markings or other features may be incorporated into the check sleeve to assist in orienting an image of the check to the proper angle, or in distinguishing portions of the image that represent the check from non-check portions. For example, horizontal and vertical lines may be printed on the check whose position on an image can be detected allow the skew angle of the image to be determined and offset. Also, the background of the sleeve may be printed in a color or opacity that is expected to contrast with the checks that are to be placed in the sleeve, thereby providing contrast that can be used to distinguish check portions of the image from non-check portions. Additionally, one or more barcodes can be printed on the sleeve that can encode information such as the type of sleeve, the account number to which the checks are to be deposited, or a digital signature.
In further embodiments, a sleeve can be constructed that holds a plurality of checksâe.g., two or more checksâthereby allowing plural checks to be deposited at the same time.
As shown in FIG. 4M, a check holder may take a form similar to a foldable, self-locking stand 473, which may be made of flexible and bendable material, such as plastic, paper, and/or the like, and may have mechanisms to hold one or more checks in place in one or more designated spaces. In one embodiment, the check holder 473 may have a front side 473 a on which the check to be scanned or taken a picture of will be placed. To reduce reflection, the front side of the check may provide dark background in contrast to the color of the paper check. The front side may be made of light absorbing materials to reduce reflection. In one implementation, the front side 473 a may comprise a rectangular area with printed information âplace the check hereâ 474 a to instruct the user to place the check. In another implementation, instructions of how to position the check may be included, e.g., the user may be instructed to place the check in a horizontal or vertical position.
In another implementation, the front side of the check holder may comprise printed information with regard to instructions 474 d of remote deposit, such as instructions as to how to initiate the remote deposit capture application, download an application package from a remote server, place the paper check in the check holder, capture an image of the check holder containing the check and send the captured image to the remote server using the downloaded application package. In another implementation, the frond side of the check holder may comprise an institution trademark logo and promotion information for the RDC-Detection.
In a further implementation, to facilitate the remote deposit, the check holder may be customized for an individual depositor. For example, in one implementation, the front side of the check holder may comprise a barcode printed thereon 474 c, which includes information with regard to the depositor, such as, but not limited to depositor name, depositor account number, depositor bank routing number, and/or the like. In a further implementation, a user may capture an image of the check placed on the check holder, creating a visualization of the check associated with the barcode so that the RDC-Detection may process the received image and obtain depositor information from the barcode. In another implementation, other information may be printed on the front side of the check holder, such as, but not limited to, the depositor's RDC-Detection membership name, the payee's bank name, and/or the like.
For another example, the barcode 474 c may be a code that enables a given financial institution to recognize its own check holder, and verify that the customer is using a holder provided by that particular financial institution as opposed to a holder provided by a different financial institution. In one implementation, a financial institution may provide various different check holders (e.g., check holders for different sized checks, holders with different types of line markings, holders with different luminescence properties, etc.), and the barcode may be used to assist the processing of the image that results from scanning checks positioned in the sleeve. For example, if one check holder has particular line markings or particular luminescence properties, the barcode may comprise information indicative of those properties so that the image processing techniques can be tuned for use with the particular check holder being used. As another example, each customer of a financial institution can be provide with one or more check holders that are customized for that customer, and the barcode may encode the customer's account number, customer number, or other identifying information. If the barcode encodes the customer's account number or customer number, that information may be used to determine the account to which a check is to be deposited. For another example, the barcode may also encode certain security techniques, such as digital signatures, to deter against counterfeit sleeves and/or counterfeit barcodes.
Within various implementations, the barcode 474 c may use a variety of formats. For example, the barcode may be a line format, such as a alphanumeric code, or a two-dimensional code, such as data matrix. As another example, the barcode can be used to orient the angle of an image of the checkâe.g., by detecting the skew of the lines or boundaries of the code, and correcting for the detected angle. As another example, the front side of the check holder may comprise more than one rectangular areas to place the check, and there may be multiple barcodes associated therewith, e.g., one barcode next to each area into which a check may be inserted.
In one embodiment, the check holder 473 may comprise a small flap extension 473 c at the bottom of the front side to hold the check be placed within the area 474 a, and the small flap may hold the check at a slight angle so as to deflect glare-light which may be incurred by a camera lens. In a further implementation, the front side of the check may comprise a transparent layer affixed thereon, so that the check may be inserted between the transparent layer and the front side of the check, wherein the transparent layer may assist to hold the check within the rectangular area 474 a and to reduce reflection on the surface of the check.
In one embodiment, the check holder is supported by foldable flaps 473 d on the left and the right side of the front side. The foldable flaps may be adjusted to create a steep fold angle to hold the check upright and deflect light away from the camera. In an alternative embodiment, as shown in FIG. 4N, the foldable flaps may be folded to the back of the front side of the check holder, so that the folded check holder 476 may be inserted in to a mobile phone sleeve 475. A depositor may carry the folded check holder 476 which is conveniently placed in his mobile phone sleeve 475 together with the mobile phone 476, and may capture images of a check with the check holder and the camera built in the mobile phone for remote deposit conveniently.
In one implementation, the user may capture an image of the check placed on the check holder and submit the image to the RDC-Detection. In one implementation, the captured images may be processed to identify which portion(s) of the images represent the check. The process of determining which portions of the check represent the image may include image enhancement, check corner detection, dewarping, cropping and/or the like, as further illustrated in FIGS. 6A, 6B-1, 6B-2, 6C, 6D, 6E, 6F, 6G, 6H-1, 6H-2, 6H-3 and 6H-4.
In further implementations, the RDC-Detection may process the received image of the check holder comprising the check. The RDC-Detection may detect the barcode on the received image, and obtain information embedded in the barcode. For example, a barcode reader may be adopted to obtain information encoded in the barcode, such as, but not limited to the depositor's name, depositor account number, payee's bank information, etc. In one implementation, upon performing OCR on the check image to extract deposit information, the RDC-Detection may compare the extracted deposit information with the relevant information obtained from barcode reading. If any inconsistency is detected, the RDC-Detection may send a notification to the user, e.g., by displaying a message to the smart phone or the home computer, to reject the image and request re-submission of the check image.
For example, for security concerns, a payee's bank may provide individualized check holder for a user to engage in remote deposit service, e.g., the individualized check holder may comprise a barcode with embedded information of the user's account information and the payee's bank's routing number. If the user uses the check holder, attempting to capture an image of a check belonging to his spouse, child, friends, and/or the like, the payee's bank may reject the remote deposit.
In an alternative implementation, if the RDC-Detection determines the extracted deposit information from OCR matches the barcode information, the RDC-Detection may proceed with processing the deposit with 315.
RDC-Detection Mobile Deposits Via MMS
 FIG. 4O shows a logic flow illustrating deposit via multimedia message service (MMS) in one embodiment of RDC-Detection. In one embodiment, a user may be requested to register for the MMS deposit service prior to deposit processing. For example, a user may submit registration request 480, via a text message, a call to customer service, mails to the RDC-Detection service/payee's bank, and/or the like. The RDC-Detection platform may then evaluate the user eligibility for the MMS deposit service 481. For example, the RDC-Detection platform may obtain information related to the user's credit history, income information, crime history, and/or the like. In another implementation, the RDC-Detection platform may also impose an automatic registration procedure, wherein a user having an amount more than a minimum required amount in his deposit account is automatically considered for MMS deposit service. The RDC-Detection platform may register the user for MMS service by recording the user submitted cellular phone number as âeligibleâ 482. In another implementation, the RDC-Detection platform may register the hardware identification of the user mobile device, such as the MAC address.
In one embodiment, a user may submit a remote deposit request 483 by sending a MMS message to the RDC-Detection platform 120. In one implementation, a cellular messaging application server may be equipped at the RDC-Detection platform associated with a MMS identification number. For example, FIG. 4P shows an exemplary diagram of RDC-Detection remote deposit via multimedia messaging service (MMS) within embodiments of the RDC-Detection, wherein the user may send a message to phone number â1111,â which represents the MMS deposit service.
In one implementation, upon verification at the RDC-Detection platform 484, if the user is not registered, a text message may be sent to deny deposit request 485. Otherwise, if yes, the user may generate and send a remote deposit message, 486 by taking a picture 480 of the check and attach the captured image in a MMS message 495. For example, the MMS message may comprise an image of the front side of the check and an image of the back side of the check. In one implementation, the user may enter deposit information in the MMS body such as, deposit amount, deposit account number, and/or the like.
Within various embodiments, deposit via MMS may require registration with the RDC-Detection platform as discussed above. For example, the RDC-Detection platform may verify whether the user is a qualified member for MMS deposit service. In one implementation, the user may register his cellular phone number with the RDC-Detection platform as a member qualified for MMS service, and RDC-Detection may verify whether the cellular phone number associated with a MMS message is registered. If not, the RDC-Detection platform may send a message back to the user indicating transaction has been denied.
In another implementation, the user may include a personal identifying pin 483 in the MMS body for verification. For example, in one implementation, a qualified MMS deposit user may first send a text message to RDC-Detection (e.g., number â1111â as in FIG. 4O) to request deposit, and may receive a verification pin from the RDC-Detection platform. The user may then send the MMS deposit message including the identification pin as an authorization of the deposit.
In another implementation, as shown at 481, live video streaming of a check may be captured and transmitted to the RDC-Detection platform. For example, a user may request to establish a real-time video streaming link with the RDC-Detection platform when submitting the remote deposit request. In such cases, the user device and the RDC-Detection platform may employ streaming video streaming software packages such as Apple Quicktime Streaming Servers, Marcromedia Communication Server, and/or the like. In one implementation, the user may create a video in a common streaming media format such as MPEG4, 3GPP and/or the like, and upload an encrypted HTTP streaming video on the RDC-Detection web server. For example, in one implementation, a user may employ an Apple iPhone may establish HTTP live streaming to the RDC-Detection platform via Quicktime Software systems.
In one embodiment, upon receiving the MMS message from a user mobile phone, the RDC-Detection system may process the check image attached in the MMS message to extract deposit information, such as discussed at 310. For example, the check image may be enhanced, deskewed, dewarpped and cropped to generate a Check-21 image, as further illustrated in FIGS. 6A, 6B-1, 6B-2, 6C, 6D, 6E, 6F, 6G, 6H-1, 6H-2, 6H-3 and 6H-4.
RDC-Detection Check Image Enhancement
 FIG. 5A is of a logic flow diagram illustrating aspects of processing and extracting deposit check images in one embodiment of the RDC-Detection. In one embodiment, the RDC-Detection may determine a type of the received digital deposit file 505, e.g., whether it is streaming video, a video file, or an image file. For example, in one implementation, the RDC-Detection may rely on the file extension of the received digital file to determine its type, i.e., âwmv,â âavi,â ârmâ, â3GPPâ are video files, and âjpg,â âtiff,â âbmpâ are image files.
In one embodiment, if a video file is received or live video streaming is detected 506, the RDC-Detection may generate still check images from the video streaming 510. For example, in one implementation, the RDC-Detection may utilize video screen capture software packages to generate screen frame grabs and save the grabbed image files. In one implementation, software such as Apple QuickTime, WM Capture, CamStudio, and/or the like, may be employed to obtain frame grabs of the check video streaming.
In one embodiment, if the received digital deposit file is an image file, or at least one check image file has been grabbed from the received video clip, the RDC-Detection may determine whether the check image is valid 515. In one implementation, the RDC-Detection may determine the usability and quality of the check image. For example, in one implementation, the RDC-Detection may check whether the check image is in compliance with the image format requirement, the resolution requirement (e.g., at least 200 dpi), and/or the like.
In a further implementation, the RDC-Detection may perform an Optical Character Recognition (OCR) procedure on the generated check image to determine whether the characters on the check image is legible, and/or whether an endorsement is contained on the back side image of the check. Depending upon the standards imposed by the Check 21 Act and the payee's bank's own internal image standards, the verification of the digital image may vary. For example, the Check 21 Act may require that the image be of a certain image quality. Although there are several ways in which image quality may be determined, one manner in which it may be done is to perform an OCR operation on the check to determine if at least a portion of the information in the image is determinable. The bank may first attempt to extract and recognize characters within the digital image. Any extracted characters may then be compared to previously known information or information submitted by the account owner in the deposit request. For example, the bank may attempt to find and OCR the MICR line at the bottom of the digital image. If the MICR line is unreadable or the characters identified do not correspond to known and verifiable information, the bank may reject the image.
In one implementation, if the check image fails to meet the system requirements 520, the RDC-Detection may send a request to the user for resubmission of a check image 522. In another implementation, if the check image is determined to be valid 520, the RDC-Detection may proceed to process the check deposit image 525, including large image file compression 530, image quantumization and enhanced edge/corner detection 532, and dewarping/cropping the check image 534 for presentment, as will be further illustrated in FIGS. 6B-1, 6B-2, 6C, 6D, 6E and 6F. For example, in one implementation, the RDC-Detection may compress the image file in order to save storage space (e.g., 2 megabytes per image).
In one embodiment, the RDC-Detection may convert the processed check image for presentment and deposit 540. For example, in one implementation, the RDC-Detection may save the check image in compliance with the requirements of the payee's bank for substitute checks, such as a Check 21 X9.37 cash letter file, and/or the like.
 FIG. 6A provides a logic flow diagram illustrating aspects of an enhanced corner/edge detection using image quantumization 532 in one embodiment of the RDC-Detection. In one implementation, the image enhancement and corner detection described herein within embodiments may be performed at the RDC-Detection platform. In another implementation, the image enhancement and corner detection may be performed at the client device. For example, the RDC processing component 103 a/103 b delivered to and instantiated on the client device may comprise an image processing package to enhance, crop and prepare the captured check image.
As shown in FIG. 6A, the RDC-Detection may determine whether the check image is a grayscale image 602. If not, the RDC-Detection may convert the color image into a grayscale check image 605. For example, in one implementation, the RDC-Detection may turn the luminance value of every pixel of the color check image into a grayscale pixel luminance value, and a C# implementation may take a form similar to:
public Bitmap ConvertToGrayscale(Bitmap source)
{
Bitmap bm=new Bitmap(source.Width,source.Height);
for(int y=0;y<bm.Height;y++)
{
for(int x=0;x<bm.Width;x++)
{
Color c=source.GetPixel(x,y);
int luma=(int)(c.R*0.3+c.G*0.59+c.B*0.11);
bm.SetPixel(x,y,Color. FromArgb(luma,luma,luma));
}
}
return bm;
}
In one embodiment, the RDC-Detection may determine and divide the check image into a number of tiles/sub-images 608. For example, a sub-image may be parsed from the original check image at pixel (100,350) with a width of 100 pixels and height of 50 pixels. In one implementation, the number of tiles/subimages may be pre-determined by a system operator as a constant. In another implementation, the number may be determined by a formula in proportion to the size of the image. In one embodiment, for each tile/sub-image, a histogram may be generated 610. FIG. 6C shows an example histogram chart, wherein the X axis denotes the gray value and the Y axis 505 denotes the number of counts of gray.
In one embodiment, grayscale threshold values for each histogram may be determined 613, using a variety of algorithm such as, but not limited to statistical analysis (as will be further illustrated in FIG. 6D), minimum fuzziness algorithm (as will be further illustrated in FIG. 6E), Otsu algorithm, and/or the like. In one embodiment, grayscale threshold values may be determined by image binarization are then determined (309) (405) using statistical analysis of the histogram 501. In one embodiment, the grayscale check image may be quantumized 615 based the determined threshold values for each tile/sub-image. For example, in one implementation, the background of the check in a relatively dark color may be converted to black. For another example, the grayscale check image may be binarized into black and white only, i.e., if the gray value of a pixel is greater than the determined threshold value, it is determined as âwhiteâ; otherwise it is determined as âblackâ.
In one embodiment, the RDC-Detection may apply image filters to the quantumized image 618 to generate a virtual image for corner detection. For example, in one implementation, each tiled image may be blurred by convolving the tiled grayscale thresholded image with an array of ones, which causes dilation effect to the image, whereby the dilation array may be a square matrix of ones of size 3Ã3 or 5Ã5 depending on the virtual image size.
In an alternative implementation, a convolution filter matrix may be applied, which is designed to sharpen and enhance edges of the quantumized check image. For example, in one implementation, the RDC-Detection may employ a Java Advanced Image (JAI) package for one implementation of applying a sample edge-enhancing convolution filter matrix, which may take a form similar to:
float data [ ]=
{0f, 0f, 0f, â1f, â1f, â1f, 0f, 0f,
0f, 0f, â1f, â1f, â3f, â3f, â1f, â1f,
0f, 0f, â1f, â3f, â3f, â1f, â3f, â3f,
â1f, 0f, â1f, â3f, â3f, â6f, 20f, â6f,
â3f, â3f, â1f, â1f, â3f, â1f, 40f, 20f,
40f, â1f, â3f, â1f, â1f, â3f, â3f, â6f,
20f, â6f, â3f, â3f, â1f, âf, â1f, â3f,
â3f, â1f, â3f, â3f, â1f, 0f, 0f, â1f,
â1f, â3f, â3f, â3f, â1f, â1f, 0f, 0f,
0f, 0f, â1f, â1f, â1f, 0f, 0f, 0f};
KernelJAI kernel=new KernelJAI (new Kernel (9, 9, data));
PlamarImage temp=JAI.create(âconvolveâ, img, kernel);
In alternative embodiment, a black and white virtual image may be obtained via a 3Ã3 kernel, which may take a form similar to the following:
    float data [ ]={
         â6f, 20f, â6f, 
 40f, 20f, 40f,
         â6f, 20f, â6f, 
 };   
In one embodiment, upon generating the virtual image, the RDC-Detection may recombine the quantumized and enhanced tiles/subimages into a single check image 620, and then proceed to detect edges/corners of the check image 622 (as will be further illustrated in FIG. 6F) based on the enhanced image.
 FIGS. 6B-1 and 6B-2 provide examples of check image processing illustrating changes in the check image during the process of FIG. 6A in one embodiment of the RDC-Detection. In one implementation, after determining corners of the check image 622, the RDC-Detection may dewarp the check image 625, and recover the virtual image to a grayscale image 626, and then crop the extracted image 627, as further discussed in FIGS. 7A-C. In FIG. 6B-2, an exemplary check image captured by a mobile device (e.g., an Apple iPhone, etc.) in one implementation of the RDC-Detection. For example, a user may take a grayscale check image 6105 via the RDC-Detection application launched at his Apple iPhone, as further illustrated in FIGS. 11A-11H. In one implementation, the grayscale check image may be converted to a black and white virtual image 6108 for corner detection. After determining the corners and edges of the check, the check image may be cropped 6110 to remove the unnecessary parts from the original grayscale image.
 FIG. 6D provides a logic flow diagram illustrating aspects of determining threshold values for the example histogram shown in FIG. 6B-1 by statistical analysis in one implementation of the RDC-Detection. In one embodiment, the point having the highest Y value (counts of gray) on the histogram may be located 630. This point may be denoted as âsecond_highâ for the example histogram shown in FIG. 6B-1 since there are two peaks of Y values. Then the point on the histogram having the second highest Y value is located, denoted as âfirst_highâ 633. The indexed gray value is also tracked for these Y values âfirst_highâ and âsecond_highâ.
In one implementation, âfirst_highâ may be located by going from left to right on the histogram and comparing the number of counts (Y) of each indexed value (X) to the previous value until the reaching a right X limit. This may be started with a maximum value number of gray level counts being the gray level count Y at point [0][0] of the histogram. The right X limit going from left to right is set to a mode value unless the âsecond_highâ X value is less than the mode value. In that case, the right traversing limit becomes âsecond highâ. The âfirst_highâ gray index X value is then obtained 635. For discrete distributions, in one implementation, the mode is the value with the greatest frequency; and for continuous distributions, it is the point where the probability density is at a maximum. It is possible for a distribution to have two or more modes.
In one embodiment, the lowest Y value traversing from left to right on the histogram may be located, denoted as âfirst_minâ 637. Also, the lowest Y value traversing from right to left on the histogram may be located, denoted as âsecond_minâ 638. In one implementation, the procedures for locating âfirst_minâ and âsecond_minâ may be similar with that of finding âfirst_highâ and âsecond_highâ on the histogram within the interval bounded by âfirst_highâ and the mode value. The resulting point found is denoted as âfirst_minâ. In one implementation, âfirst_minâ may be set to 0 by default. If nothing is found, the index gray value is at point [0][0] or the gray value count for gray value zero (black). In one implementation, the RDC-Detection may then locate âsecond_minâ by traversing from right to left on the histogram within the interval bounded by âfirst_minâ and âsecond_high.â The resulting minimum value located is denoted as âsecond_min.â
In one embodiment, âfirst_minâ and âsecond_minâ may be adjusted 640 in special cases. In one implementation, if âfirst_minâ and âsecond_minâ are the same, then the RDC-Detection may check whether âsecond_minâ is greater than a boundary value B1,â wherein boundary values âB1â and âB2â are defined such that B1 is the upper bound of gray value encompassing significant magnitudes of order in gray value counts and B2 is the lower bound of the gray value on the histogram such that magnitudes of order in gray value counts converge to sufficiently small count value or zero from the histogram. For example, in one implementation, the image boundaries may be 0 and 255 if there exists a full gray value usage for a given image. In one implementation, if the âsecond_minâ is greater than âB1,â then âsecond_minâ is reset to be the resulting value of âsecond_minâ minus the standard deviation times a scaling factor âkâ, e.g., a suggested scaling factor in such cases is k=0.3. In that case, the adjusted âsecond_minâ would be (second_minâ(standard deviation*0.3)), the âfirst_minâ may then be set to B1.
In another implementation, if the determined âfirst_minâ as of 638 is greater than zero but the determined âsecond_minâ as of 637 returns empty or by default is 0, then the âsecond_minâ may be reset to be âfirst_minâ subtracted by the standard deviation multiplied by a scaling constant k. In this case, a suggested scaling constant is k=1.
For example, in one implementation, a Java implementation of the algorithm of locating âfirst_min,â âsecond_minâ on a given histogram by statistical analysis 630-640, may take a form similar to:



 



 




âââ...


ââprivate static int[ ]findHistExtremaLows(Histogram histogram, 


ââint numberBins)


âââ{


ââââint histoBins=histogram.getBins( );


ââââint max=0;


ââââint low=0;


ââââint i=0;


ââââint flag=0;


ââââint[ ]highs=new int[2];


ââââint[ ]lows=new int[2];


âââint numb=histoBins[0] [i];


âââint holder;


âââint q=0;


âââint first_min =


âââ0;


âââlow=numb;


âââint j=â1;


âââdo{


ââânumb=histoBins[0] [i+1];


âââif(numb>histoBins[0] [i]&&numb>max)


âââ{


âââmax=numb;


âââj=i;


âââj++;


âââ}


âââ//q=i;


while(numb==histoBins[0][i]&&numb==max&&(i+1)<histoBin s.length)


âââ{


âââânumb=histoBins[0] [i+1];


ââââi++;


ââââq++;


âââ}


âââif(j>0)


âââ{


ââââj+=(q/2);


ââââq=0;


âââ}


âââi++;


âââ}while(i<numberBins-1);


âââhighs[0]=j;


âââint second_high=j;


âââ//System.out.println(â³\n\n second


âââhigh:â³+second_high);


ââânumb=histoBins[0][i];


âââ//System.out.print(â³\nMode:


ââââ³+histogram.getModeThreshold(2) [0] );


âââmax=histoBins[0][0];


âââj=0;


âââint limit= (int)


âââhistogram.getModeThreshold(2) [0];


âââif(second_high<histogram.getModeThreshold(2) [0])


âââ{


âââlimit=second_high;


âââ}


âââfor(i=0; i<limit; i++)


âââ{


ââânumb=histoBins[0] [1+1];


âââif(numb>=histoBins[0] [i]&&numb>max)


âââ{


âââââmax=numb;


âââââj=i;


âââââj++;


âââ}


âââwhile(numb==histoBins[0] [i]&&numb==max)


âââ{


ââânumb=histoBins[0] [i+1];


âââi++;


âââ}


âââif(j>0)


âââ{


âââââj+=(q/2);


âââââq=0;


ââââ}


ââââ/// i++;


âââ}


âââint first_high=j;


âââ//System.out.println(â³\n\n first high:â³+(first_high));


âif(first_high>=histogram.getModeThreshold(2) [0])


ââââ{


ââââfirst_high=(int)


âââhistogram.getModeThreshold(2) [0];


ââââ}


ââââint min=histoBins[0] [first_high];


ââââint empty flag=0;


ââââif(second_high<0)


ââââ{


âââââsecond_high=100;


âââââempty_flag=1;


ââââ}


for(i=first_high;i<second_high&&i<numberBins-1;i++)


ââââ{


ââââânumb=histoBins[0] [i+1];


âââââif(numb<=histoBins [0][i]&&numb<min)


ââââ{


ââââââmin=numb;


ââââââj=i;


ââââââj++;


ââââ}


while(numb==histoBins [0][i]&&numb==min&&numb<min)


ââââ{


ââââânumb=histoBins [0] [i+1];


âââââi++;


âââââq++;


ââââ}


ââââif(j>0)


ââââ{


âââââj+=(q/2);


âââââq=0;


ââââ}


ââââ}


ââââif(empty_flag==1)


ââââ{


ââââsecond_high=0;


ââââ}


ââââfirst_min=j;


ââââ//System.out.println(â³\n\n first min:â³+(first_min));


ââââj=0;


ââââmin=histoBins [0] [second_high];


ââââfor(i=second high;i>first_min; iââ)


âââ{


âââânumb=histoBins [0] [iâ1];


ââââif(numb<histoBins [0] [i]&&numb<min)


ââââ{


âââââmin=numb;


âââââj=i;


âââââjââ;


ââââ}


ââwhile(numb==histoBins [0][i]&&numb==min&&numb<min)


ââââ{


âââââânumb=histoBins [0][iâ1];


ââââââiââ;


ââââââqââ;


ââââ}


ââââif(j>0)


ââââ{


âââââj+=(q/2);


âââââq=0;


ââââ}


âââ}


ââââint second_min=j;


ââââ//System.out.println(â³\n\n second min:â³+(second_min));


âââââlows[0]=first_min;


âââââlows[1]=second min;


ââââââ//i will be first boundary


ââââreturn lows;


âââ}


ââ...


 





In one embodiment, threshold values may then be determined using the determined and adjusted âfirst_minâ and âsecond_minâ as lower and upper bounds 642. In one implementation, an image processing clamp method may be adopted which requires input parameters such as the boundary gray level values âfirst_minâ and âsecond_minâ, and returns the threshold value. For example, in one implementation, a Java implementation of a clamp function may take a form similar to:
    int clamp(int x, int low, int high){
         return (x<low) ? low: ((x>high) ? high: x); 
 }   
 FIG. 6E is of a logic diagram illustrating aspects of determining grayscale threshold values by minimization of fuzziness in an alternative embodiment of the RDC-Detection. In one embodiment, the RDC-Detection may determine a member function 660 for, e.g., a standard S function which may be defined as:






S
â¡

(
x
)


=


1
2

â¡

[


erf
â¡

(

x

2


)


+
1

]



,



 


and move the membership function pixel by pixel on the X-axis of the histogram over the range of gray values 663 (as shown in 675). At every position of the membership movement, a measure of fuzziness may be calculated 665 based on the a variety of measure definitions, such as but not limited to linear index of fuzziness, quadratic index of fuzziness, logarithmic fuzzy entropy, fuzzy correlation, fuzzy expected value, weighted fuzzy expected value, fuzzy divergence, hybrid entropy, and/or the like. For example, in one implementation, the measure of fuzziness may be calculated via the logarithmic fuzzy entropy, which may be defined as:









H
â¡

(
S
)


=


1

MN
â¢

 

â¢
ln
â¢

 

â¢
2


â¢


â
m

â¢


â
n

â¢


G
n

â¡

(

S
mn

)






,



 


where Gn(Smn)=âSmn ln Smnâ(1âSmn)ln(1âSmn), and Smn is the membership function value at pixel (m,n) for an image of size MÃN.



In one embodiment, the RDC-Detection may determine the position with a minimum value of the calculated fuzziness measure 668, and then define the grayscale threshold as the gray value corresponding to the minimum fuzziness position 670, as shown in 680.
In one embodiment, if the grayscale check image has vague corners or edges, the enhanced quantumized image may contain reflection at the edge/corners, as shown in 693-694 of FIG. 6G. In one embodiment, a reflection detection algorithm may be implemented to avoid false corner detection.
 FIG. 6F provides a logic flow diagram illustrating aspects of edge/corner detection of the check image based on reflection in one embodiment of RDC-Detection. In one embodiment, for a given check image, the RDC-Detection may divide the grayscale check image into four quadrants and calculate the histogram of each quadrant 681, or retrieve the generated histogram of four quadrants if available at 608 and 610, and calculate/retrieve the statistics and the determined threshold of each histogram 683. For example, in one implementation, statistical information such as the histogram entropy, maximum entropy threshold, mean grayscale count, maximum variance of grayscale count, mode threshold, moment, deviation, and/or the like, may be calculated.
In one embodiment, grayscale bin values N1 and N2 may be determined based on a predetermined bin count limit L 684 satisfying: (i) N1 and N2 are greater than or equal to the corresponding gray value of the bin count limit L; (ii) N1 is less than the minimum fuzziness threshold T of the histogram; and (iii) N2 is greater than the minimum fuzziness threshold T of the histogram. FIG. 6F shows an example of determining N1 and N2 on a given histogram in one embodiment of the RDC-Detection.
In one embodiment, the RDC-Detection may determine a minimum bin count value M and an average bin count value AVG within the histogram window defined by the range [N1+1, N2â1] 685 (as illustrated by the red circle 695 in FIG. 6G). The RDC-Detection may then proceed to calculate a reflection score of the histogram 686. For example, in one implementation, the reflection score may be calculated based on the following formula: Score=(AVGâM)/(AVG+M), where the score is normalized to [0,1].
In one embodiment, if the calculated reflection score is less than a predetermined minimum score P 687 (e.g., P=0.4), then it may indicate a corner sub-image without reflection. The RDC-Detection may proceed to implement corner detection algorithm of the quadrant 688. In one implementation, the corner detection may be performed on the generated virtual image of the check. For example, a JAI application of corner detection may take a form similar to the following:
    int minSamples=(int)(1.0*150/ImageProcessingConstants. virtualImageScaleFactor); int sampleSpace=(int) (1.0*5/ImageProcessingConstants. virtualImageScaleFactor)+1;   
Within implementations, the RDC-Detection may detect edges of the check on the virtual image both inwardly and outwardly, and when the inward and outward edge detection for a given spot matches, the detected spot may be considered as a successfully detected point on the edge of the check image, as further illustrated in FIG. 7C-7D.
In one embodiment, if the reflection score is less than P, then the corner sub-image is considered to be with reflection, and the corner detection implementation may be skipped to avoid a false or misleading corner. In this case, the determined corners may be less than four. In one embodiment, the RDC-Detection may determine whether the determined corners are sufficient to project all four corners by symmetry 689. For example, in one implementation, if there are three corners with tolerable reflection levels and one corner with reflection, or two diagonal corners without reflections, then the position(s) of the corner(s) with reflection may be determined by symmetric projection 692. In another implementation, if there is only one corner with tolerable reflection, or two corners with tolerable reflection on a horizontal/vertical line, the RDC-Detection may determine that there is not sufficient information to project all four corners. In that case, the RDC-Detection may implement corner detection algorithm of a quadrant with reflection 690 (e.g., a corner with relatively higher reflection score), and provide additional information to determine all four corners of the check image 692.
Within alternative implementations, the corner/edges detection may also be applied to check images with other anomalies. For example, in addition to reflections, a check image may be captured under undesirable lighting conditions (e.g., with poor room light, with a dark background, etc.), interfered by reflective objects (e.g., a coffee cup placed close to the check, etc.), with other objects (e.g., miscellaneous items placed around the check, etc.), resulting in an image with shadows. In one implementation, the RDC-Detection may apply corner detection to remove such anomalies based on similar scoring procedure described in FIG. 6F.
 FIGS. 6H-1, 6H-2, 6H-3 and 6H-4 provide examples of the histogram analysis of the four quadrants of the grayscale image 693 of FIG. 6F in one embodiment of the RDC-Detection. In FIGS. 6H-1, 6H-2, 6H-3 and 6H-4, the histogram analysis shows that the bottom two quadrants are with no reflection, but the top two are with reflection. In that case, the determined bottom corners may not provide sufficient information to project the other two corners. In one implementation, the RDC-Detection may determine the corner of the top left quadrant with some reflection, and determine the top right corner with large reflection by symmetry.
In one embodiment a received check image may contain a skewed, distorted or warped image of a check. In such cases, the check image needs to be âdewarpedâ prior to information extraction. For example, skew is the difference in rotation off an axis between a feature in the digital image and the same feature in the physical embodiment of the digital image. The determination of skew of digital images captured using handheld digital cameras typically are computed in 3-dimensions. For exemplary purposes only, the following deskew process uses an x and y axis, though it should be understood that the principles and methods for determining skew in three (3) dimensions use the same principles and are considered to be incorporated into the present subject matter.
 FIG. 7A illustrates examples of digital images of check 700 which are skewed, warped or distorted. In one embodiment, the original check 700 has a box 708 which has character â+â 710 within the box. As shown in the figure, if the check was not properly positioned when the check image was captured, there may be a significant skew of the check image, for Example, character â+â 710 may be interpreted as an âXâ rather than a â+â. In order to determine the identification of characters in check 700, the skew of the digital image may need to be determined and compensated for prior to character extraction and recognition, as described below.
In another embodiment, the digital image may be distorted to a degree so that the shape of the check image is not rectangular, but rather, trapezoidal, as shown in the figure. The image may be distorted in other manners, and thus, the present subject matter is not limited to a trapezoidal distortion. It should be appreciated that an image may be distorted in ways other than the non-limiting and exemplary trapezoidal distortion. The present disclosure is not limited to any one type of distortion.
For example, in one implementation, check 700 has sides 704 a-d and corners 705 a-d. The check image may have a trapezoidal shape instead of a rectangle as sides 704 a and 704 b do not parallel; parallel sides 704 c and 704 d do not have equal lengths; be equal in length; and the inner angles 706 a and 706 b are not 90 degrees. In such cases, the RDC-Detection may process the skewed image to recover the check image in a rectangular shape.
 FIG. 7B provides a logic flow embodiment illustrating processing check images 525 with combined corner detection and check image dewarping in an alternative embodiment of the RDC-Detection. To proceed from 520, the RDC-Detection may obtain a grayscale image 720 and divide the grayscale image into four quadrants and calculate a reflection score for each quadrant 722, as discussed in one implementation in FIGS. 6A, 6B-1, 6B-2, 6C, 6D, 6E and 6F. In one implementation, if at least three quadrants have reflection scores above the minimum threshold as discussed at 687, the RDC-Detection may proceed with deskewing and dewarping. Otherwise, the RDC-Detection may reject the check image and request the user resubmit another image.
Within embodiments, the deskewing/dewarping process may be implemented for each quadrant of the check image. In an alternative embodiment, the RDC-Detection may perform dewarping/deskewing after recombining the quadrants to generate an enhanced black and white virtual image 622.
In one implementation, based on the detected four corners of the check image, the RDC-Detection may determine whether the check image is skewed, warped or distorted 722. For example, in one implementation, the slope of a line between two corners may be used to determine the amount of distortion. If the line is strictly horizontal or vertical, then the image is considered to be without distortion. Otherwise, the image may be modified to remove the distortion.
In one implementation, the RDC-Detection may adjust skewed angles of the virtual image 725. For example, to deskew the image, the RDC-Detection may determine the angle(s) of one or more reference line(s) within the check image. In one implementation, the angle of the line or lines may be determined using a coordinate system as a reference. For example, the angle of the line may be determined in reference to a set of horizontal and vertical axes 703 established within the check image, as shown in FIG. 7A. The image may then be digitally rotated towards the direction that the check image may be horizontally positioned, e.g., the angle may be zero.
In one implementation, the RDC-Detection may use reference points in the check to facilitate the proper rotation of the image. In one implementation, a check may have several horizontal lines near the bottom of the check, used by the check writer to sign the check and to note the use of the check. In such cases, the RDC-Detection may rely on the two long edges of the digital image and/or the printed lines within the check as reference points/lines. If the image is rotated so that the long lines and/or the lines within the check are horizontal (e.g., the angle between the reference line and the established horizontal axis 703 is zero), then the check image may be properly deskewed. In one implementation, after the deskewing procedure, the RDC-Detection may then perform a test OCR to determine whether proper deposit information printed on the check may be extracted, recognized and verified based on the check image.
In an alternative implementation, the RDC-Detection may take sample points from the check image to perform deskewing. For example, four points at the upper edge and four points at the lower edge may be sampled; an angle between the line connecting an upper and/or lower corner point and the sampled point may be calculated to evaluate the level of skew; and the check image within the detected edges may be rotated at the smallest angle to horizontalize the check image.
In one implementation, after adjusting the skewed angle of the check image, the RDC-Detection may refine the corners/edges 726, by repeating the corner detection procedure.
In one implementation, the RDC-Detection may dewarp the image 728. For example, the RDC-Detection may stretch, or flatten the check image if it is not in a rectangular shape based on the detected corner points. In one implementation, the RDC-Detection may implement techniques such as spatial transformation (also known as image warping) and/or the like based on the determined four corners of the check image to remove distortion and skew. For example, a Java implementation using the JAI packages of dewarping a check image may take a form similar to:
. . .
    ParameterBlockJAI pb=new ParameterBlockJAI(âWarpâ); pb.addSource(image); pb.setParameter(âwarpâ, new WarpPerspective (pt)); pb.setParameter(âinterpolationâ, new Interpolation Bilinear( )); RenderedOp rop=null; rop=new RenderedOp(âWarpâ, pb, null);   
The RDC-Detection may then crop the check image in a rectangular shape 729 and return the cropped image 730 for further deposit processing 540.
 FIGS. 7C-7D provide flow diagrams illustrating corner detection in another embodiment of the RDC-Detection. For example, based on the obtained black and white virtual image at 622 in FIGS. 6B-1 and 6B-2, the RDC-Detection may obtain edge sample points 750 by starting from the middle in width and height on the left side and move from outside to inside, until it hits a white blob, and repeat the procedure moving inside to outside 738. The procedure may be repeated on the left, right, upper and lower edges of the check image to obtain samples points on the edge, as shown in one example by the red âXâ at 740 in FIG. 7C. In one implementation, the RDC-Detection may filter the sample points to keep those where both the inner detection and outer detection match 753 by a minimal distance constraint, and points that do not satisfy the minimal distance constraint may be discarded 754. For example, the minimal distance constraint may be dynamically configured based on a variety of parameters of the image, such as the image size, image resolution, and/or the like. In one example, the minimal distance constraint may be configured as, but not limited to 3 pixels.
In one embodiment, the RDC PLATFOR may apply edge refinement 755 based on the sample points. In one implementation, the RDC-Detection may take the âX mode,â e.g. finding the most recurrent X-coordinate value of the vertical top left samples, vertical top right samples, vertical bottom left samples, vertical bottom right samples, and the âY Modeâ to find the most recurrent Y-coordinate value the horizontal top left, horizontal top right, horizontal bottom left, horizontal bottom right samples. Differences between the X-coordinate and Y-coordinate values to determine whether the upper or lower edges are horizontal, or the left or right edges are vertical. For example, if the difference between the Y-coordinate values between horizontal bottom left samples and the horizontal bottom right samples is smaller than an acceptable constraint, such as, but not limited to 3 pixels, then the horizontal bottom edge is considered to be strictly horizontal without skew.
In one implementation, false samples due to noise or other unnecessary samples may be removed. For example, vertical bottom samples whose Y-coordinate values exceed the Y-coordinate range defined by the horizontal samples as discussed above, may be discarded.
In one implementation, the RDC-Detection may apply similar procedures on the top samples of the horizontal top left and right and see if the difference is smaller than the minimum constraint. If yes, the vertical top left and right samples that exceeds the range defined by the horizontal Top Left and Top right may be discarded. In this way, the RDC-Detection may eliminate points that have reflection that hugged the top and bottom edges.
In one embodiment, line projections may be performed based on the sample points in a progressive manner. For example, in one implementation, for every 10 sample points 758, the RDC-Detection may apply least squares to project a line 760; and for every projected line base on the 10 sample points, the angle of the current line with the last projected line 762. For another example, the RDC-Detection may project the sample line based on a different number of sample points, e.g., determined based on the quality of the check image, and/or the like. If the angle is greater than a predetermined constraint, denoted by âAngleMax,â the current line may be discarded 765, but may be kept track in place of the newly detected line. In one embodiment, the entire array of sample points may be exhausted to search for the best line, which may be the last available line that is within the constraint of AngleMax.
In one implementation, if the Y-coordinate values of sample points for detecting a horizontal line have a maximum variance less than the minimal distance constraint, e.g., 3 pixels, the average Y-coordinate values of these samples may be calculated as the Y-coordinate value of the horizontal line applying. Similarly, for vertical line projections, such average line calculation may be adopted if the X-coordinate values of the sample points are sufficiently close.
In an alternative implementation, for projected horizontal lines, a Y-coordinate value may be extracted from the currently projected line and the old projected line at the same X-coordinate value. If the difference in the Y-coordinate values is significantly large, the currently projected line may be discarded, to counter noise and reflection around the check image that may not be filtered out.
After detecting projected lines, the RDC-Detection may locate the four corners by calculating intersections of the four lines 768. For example, in one implementation, the Kramers Rule may be applied to use determinants to calculate the intersections for each line. In one implementation, the RDC-Detection may keep four lines (two horizontal and two vertical) to calculate the corners. In alternative implementations, the RDC-Detection may obtain at eight lines: vertical left top, vertical left bottom, vertical right top, vertical right bottom, horizontal top left, horizontal top right, horizontal bottom left, and horizontal bottom right, to locate the corners. For example, the intersection of the vertical top left line and horizontal top left line may be located as the top left corner.
In one implementation, the RDC-Detection may determine whether an intersection is a good corner by calculating the inner angles 743. For example, in one implementation, the four inner angles may be calculated and summed up. If the sum is equal to, or within a sufficiently small difference to 360 degrees, the corners are considered to be good. Otherwise, in one implementation, the RDC-Detection may assume three out of the four corners are good, and may detect the bad corner 770.
In one implementation, the RDC-Detection may calculate the differences between the angles to detect the bad corner. For example, if the difference between the bottom left and bottom right angles, the difference between the top right and bottom right angles are sufficiently small, but the difference between the top left and top right angles is greater than a maximum tolerance level, e.g., AngleMax, the RDC-Detection may determine the top left corner is a bad corner. In such cases, the RDC-Detection may re-calculate the top left corner by rectangular projection based on the other three corners.
In an alternative implementation, the RDC-Detection may utilize the projected lines to re-calculate the detected bad corner 745. In the above example, if the top left corner is detected as bad, which may imply the projected vertical left top line and the horizontal top left line are not accurate, then the last available vertical left bottom sample line 746 and the last available horizontal top right sample line 747 may be extended so that there intersection may be re-calculate as the top left corner 748.
In one implementation, in the dewarping and cropping 728-729. the virtual images may be oriented to make the bottom horizontal based on the lines from the horizontal bottom projections. In one implementation, if multiple bad corners exist, the RDC-Detection may apply a large median filter to the virtual image to remove noise, and reapply the line projection to refine corners 726.
In another example, the RDC-Detection may implement detection algorithm such as the Moravec corner detection algorithm, the multi-scale Harris operator, the Shi and Tomasi corner detection algorithm, the level curve curvature approach, LoG, DoG, and DoH feature detection, the Wang and Brady corner detection algorithm, the SUSAN corner detector, the Trajkovic and Hedley corner detector, the FAST feature detector, automatic synthesis of point detectors with Genetic Programming, affine-adapted interest point operators, and/or the like . . . .
RDC-Detection Video Deposit
 FIG. 5B provides a logic flow diagram illustrating video deposit within embodiments of the RDC-Detection system. In one embodiment, a user operating a personal computer (e.g., a desktop, a laptop, etc.) connected with a web camera, a cellular phone with built-in camera, a smartphone with built-in camera, and/or the like, may use the camera to capture video of the check for remote deposit.
Within various embodiments, upon receiving a deposit request from a user, the RDC-Detection platform may deliver a remote deposit processing component to the user device as discussed in FIGS. 1A-1, 1A-2, and 3B. In a further implementation, the user may select to submit identification information 542 for the deposit via the camera. For example, the RDC-Detection platform may receive and process biometrics data from the user 105, e.g., a payee may be instructed to submit an image or video clip of himself by posing his face in front of the web camera, or the cellular phone camera. In one implementation, the remote deposit processing component running on the user's device may provide a user interface which instructs the user to position his face within a specified area in order to produce a quality front side view.
In one implementation, the RDC-Detection platform may take a snap picture of the video of the user to perform face recognition procedures for user authentication, obtaining payee information for check clearance, and/or the like. In one implementation, in order to obtain quality images of the user, the RDC-Detection platform may automatically take multiple snap images from the video. If none of the obtained photos is qualified during the facial recognition, for example, the photo is too blurred, the user submitting a profile view of his face, and/or the like, the RDC-Detection platform may request the user to re-submit identifying information. In one implementation, the user may select re-producing facial recognition video, or switch to other identifying methods, such as submitting login information, and/or the like.
Upon identifying the user, the RDC-Detection platform may instruct the user to hold the check in front of the camera to produce video capture 545. For example, the RDC-Detection platform may display a message âplease hold your check up to your web cameraâ via the user interface of the remote deposit application running on the user's computer, and display another message âyou may remove the check nowâ after a short period of time (e.g., 3 seconds, etc.), during which the remote deposit application has captured a video clip of the check holding in front of the camera.
In one implementation, the user may send the whole video clip file to the RDC-Detection platform to generate snap images from the video clips 546. In an alternative implementation, as a video file is usually large, to achieve efficiency, the remote processing component may generate images from the video clip 547. For example, in one implementation, the RDC-Detection system may utilize video screen capture software packages to generate screen frame grabs and save the grabbed image files. In one implementation, software such as Apple QuickTime, WM Capture, CamStudio, and/or the like, may be employed to obtain frame grabs of the check video streaming.
In another implementation, the remote deposit application at the user's computer may automatically take consecutive snap pictures of the check when the user holds the check in front of the camera. For example, the user may be requested to hold the check in position for 3 seconds, during which the remote deposit application may capture snap pictures every 100 ms to generate 30 frames of the check, and submit the images to the RDC-Detection platform.
In one implementation, the RDC-Detection system may determine whether the snapped images are usable 548. For example, the resolution and file format of the check images may be checked. For another example, the RDC-Detection system may perform an initial OCR on the images to examine whether the texts in the image are legible. If the RDC-Detection system obtains multiple images of the check, then the image with the best quality may be used to optimize performance. For example, the RDC-Detection system may select the image with the highest solution, with the least corner reflection as discussed in FIGS. 6E, 6H-1, 6H-2, 6H-3 and 6H-4, with the least skewness or distortion as discussed in FIGS. 7A-7D, and/or the like. In one embodiment, if none of the images is qualified, the RDC-Detection may request the user to re-produce check images via the camera at 543. In one implementation, the user device may transmit the grabbed frames of check to the RDC-Detection platform in real-time, so that the RDC-Detection may examine the received images in real-time to select an optimal shot, and/or notify the user whether re-capture is required due to poor image quality.
In one embodiment, upon obtaining check images, the RDC-Detection system may proceed 525 to extract deposit information and complete the deposit. The RDC-Detection may further utilize the user camera for check destruction. In one implementation, the RDC-Detection may request the user to destroy the physical check 550 after successful deposit. For example, in one implementation, the RDC-Detection system may display a message âPlease tear the check to your camera.â The user may then submit a video clip of tearing the check 552, while the deposit application may take snap shots. In one implementation, the RDC-Detection system may verify validity of the check destruction 555, e.g., verifying the check shown in the received snap pictures is the same as the deposited one, and then send a deposit acknowledgement message to the user to confirm the deposit 558.
In one implementation, the RDC-Detection system may implement user face recognition, capturing snap pictures of the check and capturing destruction of the check in real-time. In another implementation, the RDC-Detection system may process the video deposits in a batch. For example, the RDC-Detection system may request the user to submit snap shots of the check, and then soft posts the fund. The RDC-Detection system may then request the user to destroy the check after check clearance in batch time as discussed in FIGS. 8B-8C.
RDC-Detection Representment Detection/Clearance
 FIG. 8A provides a logic flow diagram illustrating aspects of check representment detection in one embodiment of the RDC-Detection. In one embodiment, based on the extracted information of the check image, the RDC-Detection may determine whether the extracted information contains a âvoidâ check indication 805. For example, in one implementation, the check may have been voided by a punched hole and/or a written âVOIDâ on the physical check, or have a modified section, such as a modified RFID tag, and/or the like. In one embodiment, if the check is a void check 808, the RDC-Detection may reject deposit.
In another embodiment, if no such âvoid checkâ indication is found, the RDC-Detection may compare check identification data with the check identification data within a limited subset of previously deposited checks 810, e.g., checks deposited to the same payee's account within the past ten months, the last one hundred deposits to the same payee's account, etc. For example, in one implementation, check identification data may comprise Check identification data is any data that identifies the financial instrument in a relatively unique fashion. For example, check identification data may comprise MICR data such as payer account number, payer bank routing number, and check number, payer information such as payer name and address, the deposit amount of the check and or the like. In one implementation, check image characteristics such as a combination of characteristics from a payer signature line may also be used as check identification data. In one implementation, log files containing check identification data may be kept for all deposits. Transaction logs may be maintained for customer accounts, or for the financial institution as a whole.
In one implementation, if there is a match 815 with any previously deposited check, the RDC-Detection may flag, delay or terminate the deposit transaction 820. For example, in one implementation, flagging the transaction may indicate to setting a flag that will cause some further scrutiny 832 of the transaction at a later time. The subsequent transaction analysis 832 may automatically analyze further aspects of the check and comparing it to a suspected duplicate check, or may report to a system operator (e.g., bank clerks, etc.). For another example, the RDC-Detection may delay transaction by causing the transaction to be delayed and processed at a later time. In one implementation, delaying and flagging may be used together to provide adequate time for additional scrutiny required by the flag. In a further implementation, the RDC-Detection may terminate and abort the transaction.
In one embodiment, when the transaction is flagged, delayed, or terminated, a notification may be sent to a customer advising them of the action and optionally of the reason for the action as well. In one embodiment, the customer may be notified that the check has been identified as a possible duplicate and may be instructed to provide additional check identification data, such as re-capturing and submission of a new check image.
In one embodiment, if there is no match detected in the comparison of 810, the RDC-Detection may determine whether to enlarge the comparison range of previously deposited checks 825. If so 827, the RDC-Detection may enlarge the comparison range to compare check identification data within a full set of previously deposited checks 830. For example, in one implementation, the RDC-Detection may further search and compare the check identification data with all the stored deposit information in the database.
In one implementation, the limited subset comparison may be performed in real time, and the remainder of the comparison may be conducted at a later time. For example, in one implementation, the RDC-Detection may perform a multiple representment check within a 6-month database in real time on all RDC-Detection channels and records. In another implementation, the RDC-Detection may call a service to handle bulk transactions at batch time and to obtain a consolidated re-presentment report response, as will be further illustrated in FIG. 8B.
After a full set comparison, if a match is located 833, the RDC-Detection may perform subsequent transaction analysis 832 of the check deposit. Otherwise, the check is considered to be valid 835, and the RDC-Detection may proceed to deposit funds to the payee's account.
In one embodiment, the representment detection in one embodiment of the RDC-Detection as shown in FIG. 8A may be implemented in a real-time manner at the RDC-Detection platform and/or the payee's bank prior to soft posting. In another embodiment, the RDC-Detection and/or the payee's bank may send deposit data to a centralized warning system, such as an external agency, a clearinghouse bank, and/or the like, to detect check representment. In one implementation, the centralized warning system may inspect deposit data with financial institutions other than the payee's bank to identify checks that have already been presented. In a further embodiment, the centralized warning system may provide representment service both in real time and at batch time and subscribe a payee's bank for check presentment notification. FIG. 8B provides a combined logic and block diagram illustrating an example implementation of representment service at a centralized warning system in one embodiment of the RDC-Detection.
In one embodiment, when the RDC-Detection receives a check presentment to a payee's bank 836, the RDC-Detection may process the request and send extracted deposit information and check images to a centralized warning system for presentment services 840. In one embodiment, the presentment services 840 may include registration service 841, real-time detection service 842 and batch detection service 843. In one implementation, the payee's bank may subscribe via the registration service 841 in order to receive presentment notification published by the warning system. In one implementation, attributes associated with the payee's bank may be maintained in a registration repository, such as a list of the transit routing numbers the payee's bank owns, callback service URL for presentment notification, callback credentials, and/or the like. For example, in one implementation, when a payee's bank sent check information and check images to the centralized warning system for representment check, the system may send check presentment notifications to a variety of subscribed banks 838.
In one embodiment, the real-time detection service 842 may implement a representment search within a centralized repository 845 of previously deposits. In one implementation, the real-time detection service may take a form similar to the process shown in FIG. 8A.
In one embodiment, the batch detection service 843 may process representment detection for bulk transactions in an âoff-lineâ manner. For example, in one implementation, a payee's bank may use this service to send all remote-deposit transactions at the end of each day for re-presentment validation and expects a next-day response. In one implementation, an X9.37 image cash letter containing the remote deposit transactions may be submitted to the centralized warning system and a response report containing presentment/re-presentment information may be published to the payee's bank.
 FIG. 8C provides a combined logic and block diagram illustrating check clearance and fraudulent control in one embodiment of the RDC-Detection. In FIG. 8B, in one embodiment, the payee's bank may ingest and process remote deposit data 856. For example, as discussed in FIG. 1, a RDC-Detection platform may be housed at the payee's bank to receive and process remote deposit. In one embodiment, the payee's bank may establish a secure communications connection with an external agency or clearinghouse bank (e.g., a local branch of the Federal Reserve Bank, etc.), for example, via encrypted FTP, and/or the like. In one implementation, the payee's bank 160 may send deposit data, such as a Check 21 X9.37 check image file, and the extracted check identification data, to the external agency to perform a clearinghouse check.
In one embodiment, the clearinghouse bank may provide check identification service 870 to identity a type of the check 873. For example, in one implementation, a check type identifier 873 at the clearinghouse bank may determine whether the deposited check is s U.S. Treasury check 874, a U.S. Postal money order 875, a cashier's check 876, a Federal Reserve Bank check 877, a certified check 878, a Federal Home Loan Bank check 879, a teller's check 880, a state/local government check 881, an on-us check 882, and/or the like, based on the received check information. In one implementation, the check type identifier 873 may inspect the MICR information on the check to determine its type. In one embodiment, if the check type identifier 873 is unable to determine the type of the check, the identification service 870 may proceed to other inspection procedures 885 to determine whether the deposited check is a fraudulent. For example, in one implementation, the identification service 870 may send alerts and present the check data to fraudulence experts.
In one embodiment, the external agency or clearinghouse bank may return an indication of the check type to the payee's bank. In one implementation, the payee's bank may determine whether the check is a Regulation CC compliant based on the received check deposit data and the check type indication from the clearinghouse. For example, in one implementation, U.S. treasury checks, certified checks and/or the like, may be considered as Regulation CC safe and eligible for next business day availability of deposit confirmation 860. In another implementation, if the check is not Regulation CC safe, the payee's bank may inspect the payee's account to ensure ensures full funds availability in account to cover the deposited amount upon fraud 862, and apply appropriate holds and limits on the deposit amount 865. The deposit may render limited fund availability 868 from the payee's bank.
For example, in one implementation, a user may request to deposit a $1000.00 non-Regulation CC safe check, but only has $500.00 existing amount in the account. In such cases, the RDC-Detection may receive and verify remote deposit data from the user and the payee's bank may provisionally credit $1000.00 to the user's account. In one implementation, the payee's bank may generate a substitute check and send the substitute check for clearinghouse check. In one implementation, if the payee's bank receives a clearinghouse result indicating that the deposited check is not Regulation CC compliant, the payee's bank/RDC-Detection may notify the user via a user interface to provide a variety of options of deposit, e.g., display messages on the RDC Deposit website, send emails/instant messages to the user device, and/or the like. For example, the user may choose to deposit the maximum allowable funds at the moment, or to cancel the deposit, or to provisionally post the check but mail the physical check to the bank for clearance, and/or the like.
Alternative Embodiments of RDC-Detection Representment Detection
In an alternative embodiment, a dead-check repository may be employed to store records of negotiable instruments, such as checks, that have been processed by a network of financial institutions. The records, accessible when preparing to deposit, either remotely or physically, a negotiable instrument, serve as an indication to a financial institution as to whether the negotiable instrument has been previously presented. Thus, accessing the record before confirming the deposit secures deposits by preventing re-presentment of negotiable instruments.
 FIG. 9A is a flow chart illustrating an example method of securing a deposit of a negotiable instrument, such as, for example, a check from payer to payee. At 900, electronic data representative of the check to be deposited, remotely or physically, is received at a financial institution. At 903, a record of the check may be created to, for example, assist in securing the remote deposit of the check by preventing re-presentment of the check. The unique front portion of the check, containing information unique to the check and available through the electronic data representative of the check, may be used to create the record.
Alternately, at 904, the record of the check may be created by financial institution and may include forming a representation of the check from information contained on the check. The representation may be an image. For example, if the electronic data representative of the check is in the form of a digital image, the digital image may be used as the record of the check. Alternatively, the representation may be a data string including one or more identifying characteristics of the check organized in a predefined order.
Alternate to 903 or 904, at 902, if the electronic data representative of the check is a digital image of the check, the record of the check may be created by financial institution and may include forming an image of one or more portions of the electronic data representative of the check. In this manner, one or more portions of the check deemed to include identifying characteristics may be used as the record of the check. If more than one portion is used to create the record, the portions may be subsequent portions, with each portion containing one or more identifying characteristics. Or the image may comprise non-subsequent portions of the check. For example, the portion of the check containing the date and check number may be placed next to the portion of the check containing the signature of the payer to form the record of the check.
Other means of creating a record of the check may be employed. Furthermore, financial institution may not be responsible for creating the record of the check and may instead provide, by way of network for example, the electronic data representative of the check to an outside source (not shown) or to another financial institution capable of creating the record. The outside source or other financial institution may create the record by forming a representation of the check from information contained on the check, by forming an image of one or more portions of the check, or by other means. The record may then be sent to financial institution through network for example.
An analysis may be performed to determine whether the record of the check, created by one of financial institution or an outside source, is unique or has already been created and stored in the repository. The analysis may include comparing the created record to a plurality of records stored in dead-check repository.
If the record of the check has not already been stored in the repository, the record may serve as an indication that the check attempted to be deposited by payee has not previously been deposited. Accordingly, financial institution may proceed with the remote deposit as desired by payee. Additionally, financial institution may perform actions to assist in subsequent record assessments used to determine if subsequent remote and/or physical deposits may be processed.
At 888, the unique record of the check is stored in dead-check repository. At 907, following the storing of the check in a dead-check repository 906, the remote deposit is processed. At 908, funds associated with the check are credited to account held with financial institution. At 909 the funds identified by the check are deducted from the account of payer, for example, account associated with the check.
If it is determined that the record of the check already exists in dead-check repository, then the remote deposit is desirably rejected and/or other predetermined actions may be taken (e.g., notify the payer, the payee, the financial institution, other financial institutions). Alternatively, the dead-check repository may detect similarities but not an exact match between the record being verified and a record stored in dead-check repository. For example, one inconsistency between the record being verified and a stored record may exist, while multiple portions of the record being verified may match the stored record. If such an inconsistency leads to an uncertainty in the unique record determination, at 905, financial institution may proceed depending upon predetermined rules developed by financial institution.
 FIG. 9B is a flow chart illustrating an example method of verifying a negotiable instrument, such as, for example, a check. At 911, electronic data representative of the check is received at, for example, one of financial institutions, for example, financial institution. The electronic data representative of the check may be received as a digital image of the check from payee or from one of financial institutions.
At 912, financial institution, upon receipt of the check, obtains identifying characteristics of the check. Several identifying characteristics may include, but are not limited to, the signature of payer, the date as indicated by payer, and the account number associated with account from which the funds identified on the check will be deducted. At 913, a digital image comprising some or all the portions of the electronic data representative of the check and/or the identifying characteristics may be formed. The digital image may be a smaller sized image than the electronic data representation of the check, for example.
At 914, a record of the check in a format consistent with the format of the records stored in dead-check repository is created. The creation of the record in a format consistent with the stored records may include, for example, forming a composite digital image comprising each digital image of each portion. Each digital image may be arranged in a predefined manner to form the composite digital image consistent with the plurality of records stored in the dead-check repository.
At 916, a confirmation process is implemented to determine if the record of the check is unique or has already been stored in the repository. As the record has been formed to be consistent with the format of the other records stored in dead-check repository, the confirmation process may include a direct comparison between the created record and the stored records. Optionally at 916, the record of the check is stored with the plurality of records currently stored in the database. If the record matches a record already stored in the repository, the record may be stored with the previously stored record to serve as an indication that the check associated with the record was presented for re-presentment, for example.
 FIG. 9C is a flow chart illustrating a method of remotely depositing a negotiable instrument. At 920, a negotiable instrument is provided by, for example, payee, to, for example, financial institution for providing funds indicated by the negotiable instrument into account. Providing the negotiable instrument may include creating a digital image of the negotiable instrument by, for example, scanning the negotiable instrument with a scanner or copy machine. The digital image may then be sent in an email attachment, for example, from the payee's or other user's remote location to financial institution.
At 921, payee is provided with a notification related to the uniqueness or verification of the negotiable instrument, based on a comparison of a record created based on the negotiable instrument and previously generated records stored in a repository, for example. The notification may be provided electronically though email or text message over network, for example. If the notification is that the negotiable instrument is unique or does not already exist in the repository, then at 922, payee receives indication that the appropriate funds have been deposited into account owned by payee. If, on the other hand, the notification indicates that the negotiable instrument is not unique or already exists in the repository, at 923 payee receives an indication and e.g., a notification to visit or otherwise contact financial institution 120 a in order to attempt to deposit the negotiable instrument.
At 924, payee may be required by, for example financial institution, to void the negotiable instrument. This may include sending a copy of the negotiable instrument to financial institution or to an entity as indicated by financial institution. Payee may be required to perform the void process within a predetermined period of time.
Alternative Embodiments of RDC-Detection: Voiding a Check
When a negotiable instrument is deposited using electronic means, there may arise the situation when the physical negotiable instrument âtransformsâ to exist in essentially two forms: the original physical negotiable instrument and the newly generated digital form. While the newly generated digital form may undergo processing through the federal check clearinghouse, the physical form is typically left in possession of the bearer of the negotiable instrument, e.g. the person that deposited the check. Although a financial institution may send instructions to the depositor to destroy or transfer possession of the physical negotiable instrument upon transmission of the digital form, the financial institution may have little to no way to force the depositor to actually destroy the negotiable instrument without limiting access to the funds. Unless the depositor destroys the negotiable instrument, the duality described above may continue to propagate, i.e. both the physical negotiable instrument and the digital form may continue to exist contemporaneously.
Thus, a financial institution may wish to cause the alteration of the physical negotiable instrument with or without the assistance of the depositor to render the physical form of the negotiable instrument non-negotiable. In other words, the financial institution may cause the alteration of the appearance of the physical negotiable instrument to a point that makes it difficult or impossible to present the physical negotiable instrument in another transaction, thus effectively destroying the negotiable instrument, with or without the participation of the depositor. For example, the appearance of the negotiable instrument may be changed to show the term, âVOIDâ. Thus, if the negotiable instrument is presented again, the term may indicate that the holder negotiable instrument has previously deposited or attempted to deposit the negotiable instrument. The negotiable instrument may be altered in other ways and is not limited to the term used above.
 FIG. 10A is illustrative of the modification of a negotiable instrument. Shown in FIG. 10A is check 1000 having redemption amount section 1004, which indicates the amount of funds to be deposited into an account, and magnetic ink character recognition (MICR) section 1006. The MICR section typically includes account information of the negotiable instrument, namely the routing number of the bank that holds the account and the account number the negotiable instrument is to be drawn against, e.g. the bank and the account from which the funds are to be withdrawn. The MICR information is typically printed using a magnetic ink or toner containing iron oxide. In a deposit process, the image of check 1000 may be a first electronic data of the check as well as other information, such as sections 1006 or 1004, which may be second electronic data.
In one embodiment, check 1000 also has unmodified modifiable section 1002. Unmodified modifiable section 1002 may use various types of modifiable inks or other mechanisms so that when a stimulus is applied to unmodified modifiable section 1002, the ink or mechanism changes in appearance or structure to indicate a deposit process may have occurred. The change may be permanent or temporary. There are various types of ink that may be used, the present disclosure not being limited to any one particular type. Some examples of modifiable inks are inks sensitive to light, heat or sound. An ink that is sensitive to light may be configured to modify based upon exposure to a certain magnitude of light for a certain period of time. For example, a light sensitive ink may change its appearance based upon a bright light, such as a light from a scanner, being applied for a long period of time. The time may be determined based upon various scan speeds of a typical scanner. For example, the scan speed of a scanner at a high resolution may be slower than the scan speed of a scanner at a low resolution.
If the ink is sensitive to heat, the ink may be configured to modify its appearance based upon the heat generated by the application of a bright light source, such as one that may be found in a scanner. If the light source is applied for a long period of time, the ink may be configured such that the heat generated by the absorption of the light by the ink will create a certain amount of heat within the ink, thus causing the change in the ink. Unmodified modifiable section 1002 may also have a mechanism sensitive to other types of stimuli, such as a radio frequency identification (RFID) tag. When the RFID tag receives a particular radio signal, the RFID tag may be modified. When the RFID tag is read at a later time, the modification may indicate that the deposit of the negotiable instrument may have occurred. The RFID tag may also, among other uses, be used to track the location of check 1000.
In an alternative embodiment, check 1000 has modified modifiable section 1008, which was unmodified modifiable section 1002. After the application of a stimulus to unmodified modifiable section 1002, the ink or mechanism within unmodified modifiable section 1002 may be changed to show modified modifiable section 1008. Check 1000 now shows the term, âVOIDâ within modified modifiable section 1008. The change may be used to provide information to prevent a second or subsequent presentment of check 1000 for deposit.
In an alternative embodiment, an ink sensitive to various stimuli that modifies after removal of a protective cover may be employed. Check 1000 has removable coating 1010 a which seals modifiable ink section 1010 b from exposure to stimuli. The stimuli may be of various types, including, but not limited to, air or light. For example, prior to deposit of the negotiable instrument, there may be a requirement to remove coating 1010 a to indicate the underlying code, which is shown as âVOâ. Upon removal of coating 1010 a, ink section 1010 b is exposed to light, causing the ink to modify to show âVOâ. Thus, coating 1010 a may be of a range of materials that blocks the exposure of section 1010 b to a stimulus.
Once exposed, ink section 1010 b may be permanently or temporarily modified. Ink section 1010 b indicia may also be encoded to increase the difficulty of defeating the void process. For example, ink section 1010 b may be a bar code unique to check 1000 itself and may be designed in a manner that is difficult to determine what the bar code will be. In order to deposit check 1000, coating 1010 a may be removed to show the encoded indicia. If the indicia is encoded, the user may be forced to remove coating 1010 a because of the difficulty of determining the code without exposing the indicia by removing coating 1010 a.  
 FIG. 1013 illustrate example systems to deposit a check into an account within embodiments of RDC-Detection. In one exemplary and non-limiting embodiment, account owner 10410 has account 10460 with bank 10430. Account owner 10410 opens a communication pathway with bank 10430 via Internet connection 10420 to send a deposit request to deposit check 10414 into account 10460. Account owner 10410 scans at least one surface of check 10414 using scanner 10412. Scanner 10412 creates a digital image of the surface of check 10414 that was scanned and saves that digital image as a digital image file. The digital image file may also contain other information about check 10414, including MICR information, account information, or deposit amount. Account owner 10410 transmits the digital image file to bank 10430, which processes the deposit.
After the deposit is processed, bank 10430 may wish to prevent the use of check 10414 in another deposit operation. In one exemplary and non-limiting embodiment, bank 10430 may cause the modification of check 10414 to prevent a subsequent presentment of check 10414. Bank 10430 may send a communication to account owner 10410 to void the check. The communication may be directed at scanner 10412 with or without the knowledge of account owner 10410. In other words, bank 10430 may not complete the deposit operation if account owner 10410 intercedes in the void operation. Bank 10430 may send a signal to scanner 10412 to scan a surface of check 10414 at a speed to cause the modification of an ink section on check 10414, as described above. Once the scan operation is completed, bank 10430 may wait to complete the deposit operation until a communication or notice is received that check 10414 was voided. The notice may include the slow scanned image showing the 3 modification of check 10414.
In an alternative embodiment, a user receives 10500 a check from another individual, for example, if the user is owed money or the check is used as payment for a good or service. The user endorses 10502 the check by signing the check, thus indicating the intent to deposit the check into an account. The user generates 10504 a digital image file by scanning at least one surface of the check using a scanner. The user sends 10506 the digital image file to the bank which controls the user's account. After processing the deposit request, a communication is generated and transmitted to void 10508 the check. The communication may be directed to the user and/or may be directed to another mechanism. For example, the communication may be directed to the user's scanner with or without the knowledge of the user. The communication may contain instructions to re-scan the check at a certain speed to cause the application of a stimulus to modify the check.
In an alternative embodiment, the bank receives 10600 a deposit request from a user. After acknowledging the deposit request, the bank then receives 10602 a digital image of the check. The digital image may be used by the bank to process the deposit request. The digital image may be used alone or in conjunction with additional information such as MICR information. After verifying 10604 the digital information, the bank processes 10606 the deposit request. The verification may include, but is not limited to, the verification of the quality of the digital image, the verification of any data retrieved from the digital image, the verification of additional information received along with the digital image, and/or the verification that the check has not been deposited before. After the bank verifies 10604 the digital information received and processes 10606 the deposit request, the bank then may transmit 10608 a void signal to void the check. As described earlier, there may be various manners in which to void the check, including, but not limited to, the application of a stimulus such as light, heat or sound. Upon application of the stimulus, the check is voided 10610.
In an alternative embodiment, a scanner is used to apply the stimulus. A bank receives 10700 a deposit request. The bank then receives 10702 a digital image of the check and account information. The bank verifies 704 the information and processes 10706 the deposit request. After the deposit is in process, to complete the process, the bank transmits 10708 a void signal to the user's scanner. The void signal may contain instructions to rescan a surface of the check at a certain speed to cause the application of a stimulus. The ink may be modified based upon the application of a certain magnitude or brightness of light, or heat may be generated by that brightness of light, for a certain amount of time, which may correspond to a scan speed. After the stimulus is applied, the bank deposits 10710 the funds into the user's account.
The present disclosure may incorporate a check modifiable by various stimuli. In an alternative embodiment, a system may use radio waves to modify a check. Check 10814 has embedded RFID tag 10804. RFID tag 10804 is an object that is sensitive to radio signals and can be incorporated into check 10814. RFID tag 10804 can be read and modified at various distances. Typically, an RFID tag, such as RFID tag 10804, has two parts: an integrated circuit for storing and processing information as well as receiving instructions via radio waves and an antenna for receiving and transmitting a signal. Some RFID tags do not have the integrated circuit, thus reducing cost and bulk of using an RFID tag.
The RFID tag may be programmed to initially indicate that check 10814 has not been deposited. Account owner 10802 may use scanner 10812 to deposit check 10814 into account 10860 of bank 10830 using communication pathway 10820. After check 10814 is deposited into account 10860, bank 10830 may wish to modify RFID tag 10804 to indicate that check 10814 has been deposited. Thus, when the information contained by RFID tag 10804 is subsequently read, RFID tag 10804 may indicate that check 10814 has previously been deposited. Bank 10830 may cause radio transmitter 10806 to transmit a radio communication, through communication connection 10840, to RFID tag 10804 of check 10814. The radio signal may cause RFID tag 10804 to modify its information to indicate that check 10814 has been previously deposited. Communication connection 10840 may be of various types, including, but not limited to, a wireless cellular connection or an internet connection. Additionally, radio transmitter 10806 may be of various types, including, but not limited to, a local internet access point and a cellular transceiver.
The type of scanner used may also be of various types. In an alternative embodiment, a scanner designed for the deposit and voiding of checks through remote means may be employed. Deposit machine 10912 is configured to provide deposit services. Deposit machine 10912 may be an integrated machine or a system having various parts, including a scanner to create a digital image of a check, such as check 10914 and a stimulus generator to cause the application of a stimulus to check 10914. Account owner 10902 initiates deposit machine 10912 to generate a digital image of check 10914, the image being transmitted to bank 10930 via communication connection 10920 for deposit into account 10960. After the bank processes the deposit of check 10914, bank 10930 may transmit a void signal to deposit machine 10912 to initiate a void process.
The void signal may be transmitted using various communication methods, including, but not limited to, an internet connection, a telephone connection such as a wireless telephone, or a facsimile transmission if deposit machine 10912 is configured to receive facsimile messages. Deposit machine 10912 may void check 10914 according to the configuration of deposit machine 10912 and/or the void message received. For example, deposit machine 10912 may be configured to apply an ultraviolet light in response to a void signal. Deposit machine 10912 may also be configured to rescan check 10914 and send the rescanned digital image to bank 10930 to show that the void stimulus has been applied and that check 10914 has been voided.
RDC-Detection Example User Interfaces
 FIGS. 11A-H provide a flow diagram of example screen shots of user interfaces illustrating aspects of remote deposit via a mobile device within one embodiment of the RDC-Detection. As shown in FIG. 11A, in one embodiment, a user operating a mobile device (e.g., an Apple iPhone, etc.), may select to access RDC-Detection feature from the mobile device menu 1101, and the mobile device may then send to deposit request to a remote RDC-Detection platform to establish a secured communications connection between the user device and the server 1102. Upon establishing the connection, the RDC-Detection may prompt the user to login to the RDC-Detection system via a login page 1103.
In one embodiment, as shown in FIG. 11B, the user may type the âOnline IDâ 1105 and the âPINâ 1107 via the user interface. Upon authentication, the RDC-Detection may display a list of available accounts associated with the user 1109, and the user may select to deposit into the account âFour Star Checkingâ 1115. As shown in FIG. 11C, upon selection, the user may enter a deposit amount $3578.00. In one implementation, the RDC-Detection may request the user âcapture front of checkâ and provide specific instructions 1118. For example, in one implementation, the RDC-Detection may request the user to smooth the check and place it on a dark-colored, well-lit and non-reflective surface. 1120 shows the user may place the check in front of the built-in camera of the mobile device to fit in the indicated area displayed on screen. Upon taking a picture of front side of the check 1122, the RDC-Detection may instruct the user to sign and capture back of the check in a similar manner 1123-1124.
In one embodiment, as shown in FIG. 11E, the RDC-Detection may present the captured images of the check (both front and back sides) to the user for confirmation 1127, and then process the deposit 1130. In one implementation, the RDC-Detection may send a notice of successful deposit to the user 1132 showing deposit amount, account number and a confirmation number.
In one embodiment, as shown in FIGS. 11F-G, if the images of the checks are not properly taken, e.g., the check is misaligned and the resulting images are incomplete 1140, submission of such unusable check images 1142 may lead to error messages. In one implementation, as shown in FIG. 11G, the RDC-Detection may inform the user the deposit can not be performed 1145 and provide additional information 1148 such as a customer assistance phone number. In an alternative implementation, the RDC-Detection may request the user to re-take and re-submit images of the check.
 FIG. 11H illustrates aspects of submitting a ripped paper check for verification after deposit in one embodiment of the RDC-Detection. As shown in FIG. 11H, a depositor may capture and submit an image of a check 1150, and after deposit the depositor may submit an image of ripped check to verify that the check has been voided 1155.
 FIGS. 12A-O provide example screen shots of user interfaces illustrating aspects of remote deposit via a website within one embodiment of the RDC-Detection. In one embodiment, a user may access a RDC-Detection website at a personal computer 1201, and the RDC-Detection may provide a user interface for user certification 1202. For example, a user has to review and agree with terms and conditions of RDC-Detection in order to proceed with remote deposit.
In one embodiment, the RDC-Detection may prompt the user to login with an online ID and password 1204. Upon successful login, the RDC-Detection may provide deposit account information to the user, and allow the user to input a deposit amount 1205. In one embodiment, the RDC-Detection may provide details for the user on digital signature verification of the website 1208, and instruct the user to scan a paper check 1210. In one implementation, the RDC-Detection may remotely control a scanner connected to the personal computer of the user, and let the user choose the scanner from a drop-down list 1212.
In one embodiment, the RDC-Detection may then instruct the user to place the paper check in the scanner bed. If the paper check is not properly positioned as shown, the RDC-Detection may display an incomplete, skewed or improperly positioned check image to the user 1215 and 1218 such that the user may choose to rescan. In one implementation, if the user has properly positioned the paper check in a rectangle area as instructed via the RDC-Detection interface 1220, the RDC-Detection may request the user to select a bottom right corner of the scanned check image and then detect an area of the image of the check from its background 1222. In one embodiment, the RDC-Detection system may instruct the user to endorse the check and scan the back side of the check 1225. If the RDC-Detection system detects that the check is not endorsed 1228, the image may be denied and an error message may be displayed 1230.
In one embodiment, if both sides of the check have been successfully scanned and the RDC-Detection system verifies the uploaded images, the RDC-Detection may deposit the funds into the user account and provide deposit details to the user including the scanned check images. In one implementation, the RDC-Detection system may instruct the user to void and dispose the deposited paper check 1235.
In one embodiment, an image of ripped check may be submitted to verify the check has been voided in a similar manner as shown in FIG. 11H.
RDC-Detection Controller
 FIG. 13 shows a block diagram illustrating embodiments of a RDC-Detection controller. In this embodiment, the RDC-Detection controller 1301 may serve to aggregate, process, store, search, serve, identify, instruct, generate, match, and/or facilitate interactions with a computer through secured data transmission and image analysis technologies, and/or other related data technologies, and/or other related data.
Typically, users, which may be people and/or other systems, may engage information technology systems (e.g., computers) to facilitate information processing. In turn, computers employ processors to process information; such processors 1303 may be referred to as central processing units (CPU). One form of processor is referred to as a microprocessor. CPUs use communicative circuits to pass binary encoded signals acting as instructions to enable various operations. These instructions may be operational and/or data instructions containing and/or referencing other instructions and data in various processor accessible and operable areas of memory 1329 (e.g., registers, cache memory, random access memory, etc.). Such communicative instructions may be stored and/or transmitted in batches (e.g., batches of instructions) as programs and/or data components to facilitate desired operations. These stored instruction codes, e.g., programs, may engage the CPU circuit components and other motherboard and/or system components to perform desired operations. One type of program is a computer operating system, which, may be executed by CPU on a computer; the operating system enables and facilitates users to access and operate computer information technology and resources. Some resources that may be employed in information technology systems include: input and output mechanisms through which data may pass into and out of a computer; memory storage into which data may be saved; and processors by which information may be processed. These information technology systems may be used to collect data for later retrieval, analysis, and manipulation, which may be facilitated through a database program. These information technology systems provide interfaces that allow users to access and operate various system components.
In one embodiment, the RDC-Detection controller 1301 may be connected to and/or communicate with entities such as, but not limited to: one or more users from user input devices 1311; peripheral devices 1312; an optional cryptographic processor device 1328; and/or a communications network 1313.
Networks are commonly thought to comprise the interconnection and interoperation of clients, servers, and intermediary nodes in a graph topology. It should be noted that the term âserverâ as used throughout this application refers generally to a computer, other device, program, or combination thereof that processes and responds to the requests of remote users across a communications network. Servers serve their information to requesting âclients.â The term âclientâ as used herein refers generally to a computer, program, other device, user and/or combination thereof that is capable of processing and making requests and obtaining and processing any responses from servers across a communications network. A computer, other device, program, or combination thereof that facilitates, processes information and requests, and/or furthers the passage of information from a source user to a destination user is commonly referred to as a ânode.â Networks are generally thought to facilitate the transfer of information from source points to destinations. A node specifically tasked with furthering the passage of information from a source to a destination is commonly called a ârouter.â There are many forms of networks such as Local Area Networks (LANs), Pico networks, Wide Area Networks (WANs), Wireless Networks (WLANs), etc. For example, the Internet is generally accepted as being an interconnection of a multitude of networks whereby remote clients and servers may access and interoperate with one another.
The RDC-Detection controller 1301 may be based on computer systems that may comprise, but are not limited to, components such as: a computer systemization 1302 connected to memory 1329.
Computer Systemization
A computer systemization 1302 may comprise a clock 1330, central processing unit (âCPU(s)â and/or âprocessor(s)â (these terms are used interchangeable throughout the disclosure unless noted to the contrary)) 1303, a memory 1329 (e.g., a read only memory (ROM) 1306, a random access memory (RAM) 1305, etc.), and/or an interface bus 1307, and most frequently, although not necessarily, are all interconnected and/or communicating through a system bus 1304 on one or more (mother)board(s) 1302 having conductive and/or otherwise transportive circuit pathways through which instructions (e.g., binary encoded signals) may travel to effectuate communications, operations, storage, etc. The computer systemization may be connected to a power source 1386; e.g., optionally the power source may be internal. Optionally, a cryptographic processor 1326 and/or transceivers (e.g., ICs) 1374 may be connected to the system bus. In another embodiment, the cryptographic processor and/or transceivers may be connected as either internal and/or external peripheral devices 1312 via the interface bus I/O. In turn, the transceivers may be connected to antenna(s) 1375, thereby effectuating wireless transmission and reception of various communication and/or sensor protocols; for example the antenna(s) may connect to: a Texas Instruments WiLink WL1283 transceiver chip (e.g., providing 802.11n, Bluetooth 3.0, FM, global positioning system (GPS) (thereby allowing RDC-Detection controller to determine its location)); Broadcom BCM4329FKUBG transceiver chip (e.g., providing 802.11n, Bluetooth 2.1+EDR, FM, etc.); a Broadcom BCM4750IUB8 receiver chip (e.g., GPS); an Infineon Technologies X-Gold 618-PMB9800 (e.g., providing 2G/3G HSDPA/HSUPA communications); and/or the like. The system clock typically has a crystal oscillator and generates a base signal through the computer systemization's circuit pathways. The clock is typically coupled to the system bus and various clock multipliers that will increase or decrease the base operating frequency for other components interconnected in the computer systemization. The clock and various components in a computer systemization drive signals embodying information throughout the system. Such transmission and reception of instructions embodying information throughout a computer systemization may be commonly referred to as communications. These communicative instructions may further be transmitted, received, and the cause of return and/or reply communications beyond the instant computer systemization to: communications networks, input devices, other computer systemizations, peripheral devices, and/or the like. It should be understood that in alternative embodiments, any of the above components may be connected directly to one another, connected to the CPU, and/or organized in numerous variations employed as exemplified by various computer systems.
The CPU comprises at least one high-speed data processor adequate to execute program components for executing user and/or system-generated requests. Often, the processors themselves will incorporate various specialized processing units, such as, but not limited to: integrated system (bus) controllers, memory management control units, floating point units, and even specialized processing sub-units like graphics processing units, digital signal processing units, and/or the like. Additionally, processors may include internal fast access addressable memory, and be capable of mapping and addressing memory 1329 beyond the processor itself; internal memory may include, but is not limited to: fast registers, various levels of cache memory (e.g., level 1, 2, 3, etc.), RAM, etc. The processor may access this memory through the use of a memory address space that is accessible via instruction address, which the processor can construct and decode allowing it to access a circuit path to a specific memory address space having a memory state. The CPU may be a microprocessor such as: AMD's Athlon, Duron and/or Opteron; ARM's application, embedded and secure processors; IBM and/or Motorola's DragonBall and PowerPC; IBM's and Sony's Cell processor; Intel's Celeron, Core (2) Duo, Itanium, Pentium, Xeon, and/or XScale; and/or the like processor(s). The CPU interacts with memory through instruction passing through conductive and/or transportive conduits (e.g., (printed) electronic and/or optic circuits) to execute stored instructions (i.e., program code) according to conventional data processing techniques. Such instruction passing facilitates communication within the RDC-Detection controller and beyond through various interfaces. Should processing requirements dictate a greater amount speed and/or capacity, distributed processors (e.g., Distributed RDC-Detection), mainframe, multi-core, parallel, and/or super-computer architectures may similarly be employed. Alternatively, should deployment requirements dictate greater portability, smaller Personal Digital Assistants (PDAs) may be employed.
Depending on the particular implementation, features of the RDC-Detection may be achieved by implementing a microcontroller such as CAST's R8051XC2 microcontroller; Intel's MCS 51 (i.e., 8051 microcontroller); and/or the like. Also, to implement certain features of the RDC-Detection, some feature implementations may rely on embedded components, such as: Application-Specific Integrated Circuit (âASICâ), Digital Signal Processing (âDSPâ), Field Programmable Gate Array (âFPGAâ), and/or the like embedded technology. For example, any of the RDC-Detection component collection (distributed or otherwise) and/or features may be implemented via the microprocessor and/or via embedded components; e.g., via ASIC, coprocessor, DSP, FPGA, and/or the like. Alternately, some implementations of the RDC-Detection may be implemented with embedded components that are configured and used to achieve a variety of features or signal processing.
Depending on the particular implementation, the embedded components may include software solutions, hardware solutions, and/or some combination of both hardware/software solutions. For example, RDC-Detection features discussed herein may be achieved through implementing FPGAs, which are a semiconductor devices containing programmable logic components called âlogic blocksâ, and programmable interconnects, such as the high performance FPGA Virtex series and/or the low cost Spartan series manufactured by Xilinx. Logic blocks and interconnects can be programmed by the customer or designer, after the FPGA is manufactured, to implement any of the RDC-Detection features. A hierarchy of programmable interconnects allow logic blocks to be interconnected as needed by the RDC-Detection system designer/administrator, somewhat like a one-chip programmable breadboard. An FPGA's logic blocks can be programmed to perform the operation of basic logic gates such as AND, and XOR, or more complex combinational operators such as decoders or mathematical operations. In most FPGAs, the logic blocks also include memory elements, which may be circuit flip-flops or more complete blocks of memory. In some circumstances, the RDC-Detection may be developed on regular FPGAs and then migrated into a fixed version that more resembles ASIC implementations. Alternate or coordinating implementations may migrate RDC-Detection controller features to a final ASIC instead of or in addition to FPGAs. Depending on the implementation all of the aforementioned embedded components and microprocessors may be considered the âCPUâ and/or âprocessorâ for the RDC-Detection.
Power Source
The power source 1386 may be of any standard form for powering small electronic circuit board devices such as the following power cells: alkaline, lithium hydride, lithium ion, lithium polymer, nickel cadmium, solar cells, and/or the like. Other types of AC or DC power sources may be used as well. In the case of solar cells, in one embodiment, the case provides an aperture through which the solar cell may capture photonic energy. The power cell 1386 is connected to at least one of the interconnected subsequent components of the RDC-Detection thereby providing an electric current to all subsequent components. In one example, the power source 1386 is connected to the system bus component 1304. In an alternative embodiment, an outside power source 1386 is provided through a connection across the I/O 1308 interface. For example, a USB and/or IEEE 1394 connection carries both data and power across the connection and is therefore a suitable source of power.
Interface Adapters
Interface bus(ses) 1307 may accept, connect, and/or communicate to a number of interface adapters, conventionally although not necessarily in the form of adapter cards, such as but not limited to: input output interfaces (I/O) 1308, storage interfaces 1309, network interfaces 1310, and/or the like. Optionally, cryptographic processor interfaces 1327 similarly may be connected to the interface bus. The interface bus provides for the communications of interface adapters with one another as well as with other components of the computer systemization. Interface adapters are adapted for a compatible interface bus. Interface adapters conventionally connect to the interface bus via a slot architecture. Conventional slot architectures may be employed, such as, but not limited to: Accelerated Graphics Port (AGP), Card Bus, (Extended) Industry Standard Architecture ((E)ISA), Micro Channel Architecture (MCA), NuBus, Peripheral Component Interconnect (Extended) (PCI(X)), PCI Express, Personal Computer Memory Card International Association (PCMCIA), and/or the like.
Storage interfaces 1309 may accept, communicate, and/or connect to a number of storage devices such as, but not limited to: storage devices 1314, removable disc devices, and/or the like. Storage interfaces may employ connection protocols such as, but not limited to: (Ultra) (Serial) Advanced Technology Attachment (Packet Interface) ((Ultra) (Serial) ATA(PI)), (Enhanced) Integrated Drive Electronics ((E)IDE), Institute of Electrical and Electronics Engineers (IEEE) 1394, fiber channel, Small Computer Systems Interface (SCSI), Universal Serial Bus (USB), and/or the like.
Network interfaces 1310 may accept, communicate, and/or connect to a communications network 1313. Through a communications network 1313, the RDC-Detection controller is accessible through remote clients 1333 b (e.g., computers with web browsers) by users 1333 a. Network interfaces may employ connection protocols such as, but not limited to: direct connect, Ethernet (thick, thin, twisted pair 10/100/1000 Base T, and/or the like), Token Ring, wireless connection such as IEEE 802.11a-x, and/or the like. Should processing requirements dictate a greater amount speed and/or capacity, distributed network controllers (e.g., Distributed RDC-Detection), architectures may similarly be employed to pool, load balance, and/or otherwise increase the communicative bandwidth required by the RDC-Detection controller. A communications network may be any one and/or the combination of the following: a direct interconnection; the Internet; a Local Area Network (LAN); a Metropolitan Area Network (MAN); an Operating Missions as Nodes on the Internet (OMNI); a secured custom connection; a Wide Area Network (WAN); a wireless network (e.g., employing protocols such as, but not limited to a Wireless Application Protocol (WAP), I-mode, and/or the like); and/or the like. A network interface may be regarded as a specialized form of an input output interface. Further, multiple network interfaces 1310 may be used to engage with various communications network types 1313. For example, multiple network interfaces may be employed to allow for the communication over broadcast, multicast, and/or unicast networks.
Input Output interfaces (I/O) 1308 may accept, communicate, and/or connect to user input devices 1311, peripheral devices 1312, cryptographic processor devices 1328, and/or the like. I/O may employ connection protocols such as, but not limited to: audio: analog, digital, monaural, RCA, stereo, and/or the like; data: Apple Desktop Bus (ADB), IEEE 1394a-b, serial, universal serial bus (USB); infrared; joystick; keyboard; midi; optical; PC AT; PS/2; parallel; radio; video interface: Apple Desktop Connector (ADC), BNC, coaxial, component, composite, digital, Digital Visual Interface (DVI), high-definition multimedia interface (HDMI), RCA, RF antennae, S-Video, VGA, and/or the like; wireless transceivers: 802.11a/b/g/n/x; Bluetooth; cellular (e.g., code division multiple access (CDMA), high speed packet access (HSPA(+)), high-speed downlink packet access (HSDPA), global system for mobile communications (GSM), long term evolution (LTE), WiMax, etc.); and/or the like. One typical output device may include a video display, which typically comprises a Cathode Ray Tube (CRT) or Liquid Crystal Display (LCD) based monitor with an interface (e.g., DVI circuitry and cable) that accepts signals from a video interface, may be used. The video interface composites information generated by a computer systemization and generates video signals based on the composited information in a video memory frame. Another output device is a television set, which accepts signals from a video interface. Typically, the video interface provides the composited video information through a video connection interface that accepts a video display interface (e.g., an RCA composite video connector accepting an RCA composite video cable; a DVI connector accepting a DVI display cable, etc.).
User input devices 1311 often are a type of peripheral device 512 (see below) and may include: card readers, dongles, finger print readers, gloves, graphics tablets, joysticks, keyboards, microphones, mouse (mice), remote controls, retina readers, touch screens (e.g., capacitive, resistive, etc.), trackballs, trackpads, sensors (e.g., accelerometers, ambient light, GPS, gyroscopes, proximity, etc.), styluses, and/or the like.
Peripheral devices 1312 may be connected and/or communicate to I/O and/or other facilities of the like such as network interfaces, storage interfaces, directly to the interface bus, system bus, the CPU, and/or the like. Peripheral devices may be external, internal and/or part of the RDC-Detection controller. Peripheral devices may include: antenna, audio devices (e.g., line-in, line-out, microphone input, speakers, etc.), cameras (e.g., still, video, webcam, etc.), dongles (e.g., for copy protection, ensuring secure transactions with a digital signature, and/or the like), external processors (for added capabilities; e.g., crypto devices 528), force-feedback devices (e.g., vibrating motors), network interfaces, printers, scanners, storage devices, transceivers (e.g., cellular, GPS, etc.), video devices (e.g., goggles, monitors, etc.), video sources, visors, and/or the like. Peripheral devices often include types of input devices (e.g., cameras).
It should be noted that although user input devices and peripheral devices may be employed, the RDC-Detection controller may be embodied as an embedded, dedicated, and/or monitor-less (i.e., headless) device, wherein access would be provided over a network interface connection.
Cryptographic units such as, but not limited to, microcontrollers, processors 1326, interfaces 1327, and/or devices 1328 may be attached, and/or communicate with the RDC-Detection controller. A MC68HC16 microcontroller, manufactured by Motorola Inc., may be used for and/or within cryptographic units. The MC68HC16 microcontroller utilizes a 16-bit multiply-and-accumulate instruction in the 16 MHz configuration and requires less than one second to perform a 512-bit RSA private key operation. Cryptographic units support the authentication of communications from interacting agents, as well as allowing for anonymous transactions. Cryptographic units may also be configured as part of the CPU. Equivalent microcontrollers and/or processors may also be used. Other commercially available specialized cryptographic processors include: Broadcom's CryptoNetX and other Security Processors; nCipher's nShield; SafeNet's Luna PCI (e.g., 7100) series; Semaphore Communications' 40 MHz Roadrunner 184; Sun's Cryptographic Accelerators (e.g., Accelerator 6000 PCIe Board, Accelerator 500 Daughtercard); Via Nano Processor (e.g., L2100, L2200, U2400) line, which is capable of performing 500+MB/s of cryptographic instructions; VLSI Technology's 33 MHz 6868; and/or the like.
Memory
Generally, any mechanization and/or embodiment allowing a processor to affect the storage and/or retrieval of information is regarded as memory 1329. However, memory is a fungible technology and resource, thus, any number of memory embodiments may be employed in lieu of or in concert with one another. It is to be understood that the RDC-Detection controller and/or a computer systemization may employ various forms of memory 1329. For example, a computer systemization may be configured wherein the operation of on-chip CPU memory (e.g., registers), RAM, ROM, and any other storage devices are provided by a paper punch tape or paper punch card mechanism; however, such an embodiment would result in an extremely slow rate of operation. In a typical configuration, memory 1329 will include ROM 1306, RAM 1305, and a storage device 1314. A storage device 1314 may be any conventional computer system storage. Storage devices may include a drum; a (fixed and/or removable) magnetic disk drive; a magneto-optical drive; an optical drive (i.e., Blueray, CD ROM/RAM/Recordable (R)/ReWritable (RW), DVD R/RW, HD DVD R/RW etc.); an array of devices (e.g., Redundant Array of Independent Disks (RAID)); solid state memory devices (USB memory, solid state drives (SSD), etc.); other processor-readable storage mediums; and/or other devices of the like. Thus, a computer systemization generally requires and makes use of memory.
Component Collection
The memory 1329 may contain a collection of program and/or database components and/or data such as, but not limited to: operating system component(s) 1315 (operating system); information server component(s) 1316 (information server); user interface component(s) 1317 (user interface); Web browser component(s) 1318 (Web browser); database(s) 1319; mail server component(s) 1321; mail client component(s) 1322; cryptographic server component(s) 1320 (cryptographic server); the RDC-Detection component(s) 1335; and/or the like (i.e., collectively a component collection). These components may be stored and accessed from the storage devices and/or from storage devices accessible through an interface bus. Although non-conventional program components such as those in the component collection, typically, are stored in a local storage device 1314, they may also be loaded and/or stored in memory such as: peripheral devices, RAM, remote storage facilities through a communications network, ROM, various forms of memory, and/or the like.
Operating System
The operating system component 1315 is an executable program component facilitating the operation of the RDC-Detection controller. Typically, the operating system facilitates access of I/O, network interfaces, peripheral devices, storage devices, and/or the like. The operating system may be a highly fault tolerant, scalable, and secure system such as: Apple Macintosh OS X (Server); AT&T Plan 9; Be OS; Unix and Unix-like system distributions (such as AT&T's UNIX; Berkley Software Distribution (BSD) variations such as FreeBSD, NetBSD, OpenBSD, and/or the like; Linux distributions such as Red Hat, Ubuntu, and/or the like); and/or the like operating systems. However, more limited and/or less secure operating systems also may be employed such as Apple Macintosh OS, IBM OS/2, Microsoft DOS, Microsoft Windows 2000/2003/3.1/95/98/CE/Millenium/NT/Vista/XP (Server), Palm OS, and/or the like. An operating system may communicate to and/or with other components in a component collection, including itself, and/or the like. Most frequently, the operating system communicates with other program components, user interfaces, and/or the like. For example, the operating system may contain, communicate, generate, obtain, and/or provide program component, system, user, and/or data communications, requests, and/or responses. The operating system, once executed by the CPU, may enable the interaction with communications networks, data, I/O, peripheral devices, program components, memory, user input devices, and/or the like. The operating system may provide communications protocols that allow the RDC-Detection controller to communicate with other entities through a communications network 1313. Various communication protocols may be used by the RDC-Detection controller as a subcarrier transport mechanism for interaction, such as, but not limited to: multicast, TCP/IP, UDP, unicast, and/or the like.
Information Server
An information server component 1316 is a stored program component that is executed by a CPU. The information server may be a conventional Internet information server such as, but not limited to Apache Software Foundation's Apache, Microsoft's Internet Information Server, and/or the like. The information server may allow for the execution of program components through facilities such as Active Server Page (ASP), ActiveX, (ANSI) (Objective-) C (++), C# and/or .NET, Common Gateway Interface (CGI) scripts, dynamic (D) hypertext markup language (HTML), FLASH, Java, JavaScript, Practical Extraction Report Language (PERL), Hypertext Pre-Processor (PHP), pipes, Python, wireless application protocol (WAP), WebObjects, and/or the like. The information server may support secure communications protocols such as, but not limited to, File Transfer Protocol (FTP); HyperText Transfer Protocol (HTTP); Secure Hypertext Transfer Protocol (HTTPS), Secure Socket Layer (SSL), messaging protocols (e.g., America Online (AOL) Instant Messenger (AIM), Application Exchange (APEX), ICQ, Internet Relay Chat (IRC), Microsoft Network (MSN) Messenger Service, Presence and Instant Messaging Protocol (PRIM), Internet Engineering Task Force's (IETF's) Session Initiation Protocol (SIP), SIP for Instant Messaging and Presence Leveraging Extensions (SIMPLE), open XML-based Extensible Messaging and Presence Protocol (XMPP) (i.e., Jabber or Open Mobile Alliance's (OMA's) Instant Messaging and Presence Service (IMPS)), Yahoo! Instant Messenger Service, and/or the like. The information server provides results in the form of Web pages to Web browsers, and allows for the manipulated generation of the Web pages through interaction with other program components. After a Domain Name System (DNS) resolution portion of an HTTP request is resolved to a particular information server, the information server resolves requests for information at specified locations on the RDC-Detection controller based on the remainder of the HTTP request. For example, a request such as http://123.124.125.126/myInformation.html might have the IP portion of the request â123.124.125.126â resolved by a DNS server to an information server at that IP address; that information server might in turn further parse the http request for the â/myInformation.htmlâ portion of the request and resolve it to a location in memory containing the information âmyInformation.html.â Additionally, other information serving protocols may be employed across various ports, e.g., FTP communications across port 21, and/or the like. An information server may communicate to and/or with other components in a component collection, including itself, and/or facilities of the like. Most frequently, the information server communicates with the RDC-Detection database 1319, operating systems, other program components, user interfaces, Web browsers, and/or the like.
Access to the RDC-Detection database may be achieved through a number of database bridge mechanisms such as through scripting languages as enumerated below (e.g., CGI) and through inter-application communication channels as enumerated below (e.g., CORBA, WebObjects, etc.). Any data requests through a Web browser are parsed through the bridge mechanism into appropriate grammars as required by the RDC-Detection. In one embodiment, the information server would provide a Web form accessible by a Web browser. Entries made into supplied fields in the Web form are tagged as having been entered into the particular fields, and parsed as such. The entered terms are then passed along with the field tags, which act to instruct the parser to generate queries directed to appropriate tables and/or fields. In one embodiment, the parser may generate queries in standard SQL by instantiating a search string with the proper join/select commands based on the tagged text entries, wherein the resulting command is provided over the bridge mechanism to the RDC-Detection as a query. Upon generating query results from the query, the results are passed over the bridge mechanism, and may be parsed for formatting and generation of a new results Web page by the bridge mechanism. Such a new results Web page is then provided to the information server, which may supply it to the requesting Web browser.
Also, an information server may contain, communicate, generate, obtain, and/or provide program component, system, user, and/or data communications, requests, and/or responses.
User Interface
Computer interfaces in some respects are similar to automobile operation interfaces. Automobile operation interface elements such as steering wheels, gearshifts, and speedometers facilitate the access, operation, and display of automobile resources, and status. Computer interaction interface elements such as check boxes, cursors, menus, scrollers, and windows (collectively and commonly referred to as widgets) similarly facilitate the access, capabilities, operation, and display of data and computer hardware and operating system resources, and status. Operation interfaces are commonly called user interfaces. Graphical user interfaces (GUIs) such as the Apple Macintosh Operating System's Aqua, IBM's OS/2, Microsoft's Windows 2000/2003/3.1/95/98/CE/Millenium/NT/XP/Vista/7 (i.e., Aero), Unix's X-Windows (e.g., which may include additional Unix graphic interface libraries and layers such as K Desktop Environment (KDE), mythTV and GNU Network Object Model Environment (GNOME)), web interface libraries (e.g., ActiveX, AJAX, (D)HTML, FLASH, Java, JavaScript, etc. interface libraries such as, but not limited to, Dojo, jQuery(UI), MooTools, Prototype, script.aculo.us, SWFObject, Yahoo! User Interface, any of which may be used and) provide a baseline and means of accessing and displaying information graphically to users.
A user interface component 1317 is a stored program component that is executed by a CPU. The user interface may be a conventional graphic user interface as provided by, with, and/or atop operating systems and/or operating environments such as already discussed. The user interface may allow for the display, execution, interaction, manipulation, and/or operation of program components and/or system facilities through textual and/or graphical facilities. The user interface provides a facility through which users may affect, interact, and/or operate a computer system. A user interface may communicate to and/or with other components in a component collection, including itself, and/or facilities of the like. Most frequently, the user interface communicates with operating systems, other program components, and/or the like. The user interface may contain, communicate, generate, obtain, and/or provide program component, system, user, and/or data communications, requests, and/or responses.
Web Browser
A Web browser component 1318 is a stored program component that is executed by a CPU. The Web browser may be a conventional hypertext viewing application such as Microsoft Internet Explorer or Netscape Navigator. Secure Web browsing may be supplied with 128 bit (or greater) encryption by way of HTTPS, SSL, and/or the like. Web browsers allowing for the execution of program components through facilities such as ActiveX, AJAX, (D)HTML, FLASH, Java, JavaScript, web browser plug-in APIs (e.g., FireFox, Safari Plug-in, and/or the like APIs), and/or the like. Web browsers and like information access tools may be integrated into PDAs, cellular telephones, and/or other mobile devices. A Web browser may communicate to and/or with other components in a component collection, including itself, and/or facilities of the like. Most frequently, the Web browser communicates with information servers, operating systems, integrated program components (e.g., plug-ins), and/or the like; e.g., it may contain, communicate, generate, obtain, and/or provide program component, system, user, and/or data communications, requests, and/or responses. Also, in place of a Web browser and information server, a combined application may be developed to perform similar operations of both. The combined application would similarly affect the obtaining and the provision of information to users, user agents, and/or the like from the RDC-Detection enabled nodes. The combined application may be nugatory on systems employing standard Web browsers.
Mail Server
A mail server component 1321 is a stored program component that is executed by a CPU 1303. The mail server may be a conventional Internet mail server such as, but not limited to sendmail, Microsoft Exchange, and/or the like. The mail server may allow for the execution of program components through facilities such as ASP, ActiveX, (ANSI) (Objective-) C (++), C# and/or .NET, CGI scripts, Java, JavaScript, PERL, PHP, pipes, Python, WebObjects, and/or the like. The mail server may support communications protocols such as, but not limited to: Internet message access protocol (IMAP), Messaging Application Programming Interface (MAPI)/Microsoft Exchange, post office protocol (POP3), simple mail transfer protocol (SMTP), and/or the like. The mail server can route, forward, and process incoming and outgoing mail messages that have been sent, relayed and/or otherwise traversing through and/or to the RDC-Detection.
Access to the RDC-Detection mail may be achieved through a number of APIs offered by the individual Web server components and/or the operating system.
Also, a mail server may contain, communicate, generate, obtain, and/or provide program component, system, user, and/or data communications, requests, information, and/or responses.
Mail Client
A mail client component 1322 is a stored program component that is executed by a CPU 1303. The mail client may be a conventional mail viewing application such as Apple Mail, Microsoft Entourage, Microsoft Outlook, Microsoft Outlook Express, Mozilla, Thunderbird, and/or the like. Mail clients may support a number of transfer protocols, such as: IMAP, Microsoft Exchange, POP3, SMTP, and/or the like. A mail client may communicate to and/or with other components in a component collection, including itself, and/or facilities of the like. Most frequently, the mail client communicates with mail servers, operating systems, other mail clients, and/or the like; e.g., it may contain, communicate, generate, obtain, and/or provide program component, system, user, and/or data communications, requests, information, and/or responses. Generally, the mail client provides a facility to compose and transmit electronic mail messages.
Cryptographic Server
A cryptographic server component 1320 is a stored program component that is executed by a CPU 1303, cryptographic processor 1326, cryptographic processor interface 1327, cryptographic processor device 1328, and/or the like. Cryptographic processor interfaces will allow for expedition of encryption and/or decryption requests by the cryptographic component; however, the cryptographic component, alternatively, may run on a conventional CPU. The cryptographic component allows for the encryption and/or decryption of provided data. The cryptographic component allows for both symmetric and asymmetric (e.g., Pretty Good Protection (PGP)) encryption and/or decryption. The cryptographic component may employ cryptographic techniques such as, but not limited to: digital certificates (e.g., X.509 authentication framework), digital signatures, dual signatures, enveloping, password access protection, public key management, and/or the like. The cryptographic component will facilitate numerous (encryption and/or decryption) security protocols such as, but not limited to: checksum, Data Encryption Standard (DES), Elliptical Curve Encryption (ECC), International Data Encryption Algorithm (IDEA), Message Digest 5 (MD5, which is a one way hash operation), passwords, Rivest Cipher (RC5), Rijndael, RSA (which is an Internet encryption and authentication system that uses an algorithm developed in 1977 by Ron Rivest, Adi Shamir, and Leonard Adleman), Secure Hash Algorithm (SHA), Secure Socket Layer (SSL), Secure Hypertext Transfer Protocol (HTTPS), and/or the like. Employing such encryption security protocols, the RDC-Detection may encrypt all incoming and/or outgoing communications and may serve as node within a virtual private network (VPN) with a wider communications network. The cryptographic component facilitates the process of âsecurity authorizationâ whereby access to a resource is inhibited by a security protocol wherein the cryptographic component effects authorized access to the secured resource. In addition, the cryptographic component may provide unique identifiers of content, e.g., employing and MD5 hash to obtain a unique signature for an digital audio file. A cryptographic component may communicate to and/or with other components in a component collection, including itself, and/or facilities of the like. The cryptographic component supports encryption schemes allowing for the secure transmission of information across a communications network to enable the RDC-Detection component to engage in secure transactions if so desired. The cryptographic component facilitates the secure accessing of resources on the RDC-Detection and facilitates the access of secured resources on remote systems; i.e., it may act as a client and/or server of secured resources. Most frequently, the cryptographic component communicates with information servers, operating systems, other program components, and/or the like. The cryptographic component may contain, communicate, generate, obtain, and/or provide program component, system, user, and/or data communications, requests, and/or responses.
The RDC-Detection Database
The RDC-Detection database component 1319 may be embodied in a database and its stored data. The database is a stored program component, which is executed by the CPU; the stored program component portion configuring the CPU to process the stored data. The database may be a conventional, fault tolerant, relational, scalable, secure database such as Oracle or Sybase. Relational databases are an extension of a flat file. Relational databases consist of a series of related tables. The tables are interconnected via a key field. Use of the key field allows the combination of the tables by indexing against the key field; i.e., the key fields act as dimensional pivot points for combining information from various tables. Relationships generally identify links maintained between tables by matching primary keys. Primary keys represent fields that uniquely identify the rows of a table in a relational database. More precisely, they uniquely identify rows of a table on the âoneâ side of a one-to-many relationship.
Alternatively, the RDC-Detection database may be implemented using various standard data-structures, such as an array, hash, (linked) list, struct, structured text file (e.g., XML), table, and/or the like. Such data-structures may be stored in memory and/or in (structured) files. In another alternative, an object-oriented database may be used, such as Frontier, ObjectStore, Poet, Zope, and/or the like. Object databases can include a number of object collections that are grouped and/or linked together by common attributes; they may be related to other object collections by some common attributes. Object-oriented databases perform similarly to relational databases with the exception that objects are not just pieces of data but may have other types of capabilities encapsulated within a given object. If the RDC-Detection database is implemented as a data-structure, the use of the RDC-Detection database 1319 may be integrated into another component such as the RDC-Detection component 1335. Also, the database may be implemented as a mix of data structures, objects, and relational structures. Databases may be consolidated and/or distributed in countless variations through standard data processing techniques. Portions of databases, e.g., tables, may be exported and/or imported and thus decentralized and/or integrated.
In one embodiment, the database component 1319 includes several tables 1319 a-e. A users table 1319 a includes fields such as, but not limited to: a user_ID, user_name, user_password, user_bank_ID, account_ID, transaction_ID, user_accountNo, user_transaction, userhardware, and/or the like. The user table may support and/or track multiple entity accounts on a RDC-Detection. A hardware table 109 b includes fields such as, but not limited to: hardware_ID, hardware_type, hardware_name, data_formatting_requirements, bank_ID, protocols, addressing_info, usage history, hardware requirements, user_ID, and/or the like. A transaction table 1019 c includes fields such as, but not limited to transaction_ID, transaction_time, transaction_account, transaction_payee, transaction_bank, transaction_payer, transaction_status, transaction_clearance, and/or the like. A check table 1019 d includes fields such as check_ID, account_ID, transaction_ID, image_timestamp, image_MICR, image_status, image_user, image_device, image_account and/or the like. An accounts table 1019 e includes fields such as, but not limited to account_ID, user_ID, bank_ID, account_number, routing_number, account_type, account_amount, account_limit, and/or the like.
In one embodiment, the RDC-Detection database may interact with other database systems. For example, employing a distributed database system, queries and data access by search RDC-Detection component may treat the combination of the RDC-Detection database, an integrated data security layer database as a single database entity.
In one embodiment, user programs may contain various user interface primitives, which may serve to update the RDC-Detection. Also, various accounts may require custom database tables depending upon the environments and the types of clients the RDC-Detection may need to serve. It should be noted that any unique fields may be designated as a key field throughout. In an alternative embodiment, these tables have been decentralized into their own databases and their respective database controllers (i.e., individual database controllers for each of the above tables). Employing standard data processing techniques, one may further distribute the databases over several computer systemizations and/or storage devices. Similarly, configurations of the decentralized database controllers may be varied by consolidating and/or distributing the various database components 1319 a-e. The RDC-Detection may be configured to keep track of various settings, inputs, and parameters via database controllers.
The RDC-Detection database may communicate to and/or with other components in a component collection, including itself, and/or facilities of the like. Most frequently, the RDC-Detection database communicates with the RDC-Detection component, other program components, and/or the like. The database may contain, retain, and provide information regarding other nodes and data.
The RDC-Detections
The RDC-Detection component 1335 is a stored program component that is executed by a CPU. In one embodiment, the RDC-Detection component incorporates any and/or all combinations of the aspects of the RDC-Detection that was discussed in the previous figures. As such, the RDC-Detection affects accessing, obtaining and the provision of information, services, transactions, and/or the like across various communications networks.
The RDC-Detection transforms uploaded check images and check deposit information inputs via RDC-Detection components image upload component 1341, image analysis component 1342, MICR extraction component 1344, TIFF generation component 1345, CAR Extraction component 1346, cash letter generation component 1348, soft post component 1343, endorsement detection component 1347 and, representment detection component 1349 into deposit confirmation outputs.
The RDC-Detection component enabling access of information between nodes may be developed by employing standard development tools and languages such as, but not limited to: Apache components, Assembly, ActiveX, binary executables, (ANSI) (Objective-) C (++), C# and/or .NET, database adapters, CGI scripts, Java, JavaScript, mapping tools, procedural and object oriented development tools, PERL, PHP, Python, shell scripts, SQL commands, web application server extensions, web development environments and libraries (e.g., Microsoft's ActiveX; Adobe AIR, FLEX & FLASH AJAX; (D)HTML; Dojo, Java; JavaScript; jQuery(UI); MooTools; Prototype; script.aculo.us; Simple Object Access Protocol (SOAP); SWFObject; Yahoo! User Interface; and/or the like), WebObjects, and/or the like. In one embodiment, the RDC-Detection server employs a cryptographic server to encrypt and decrypt communications. The RDC-Detection component may communicate to and/or with other components in a component collection, including itself, and/or facilities of the like. Most frequently, the RDC-Detection component communicates with the RDC-Detection database, operating systems, other program components, and/or the like. The RDC-Detection may contain, communicate, generate, obtain, and/or provide program component, system, user, and/or data communications, requests, and/or responses.
Distributed RDC-Detections
The structure and/or operation of any of the RDC-Detection node controller components may be combined, consolidated, and/or distributed in any number of ways to facilitate development and/or deployment. Similarly, the component collection may be combined in any number of ways to facilitate deployment and/or development. To accomplish this, one may integrate the components into a common code base or in a facility that can dynamically load the components on demand in an integrated fashion.
The component collection may be consolidated and/or distributed in countless variations through standard data processing and/or development techniques. Multiple instances of any one of the program components in the program component collection may be instantiated on a single node, and/or across numerous nodes to improve performance through load-balancing and/or data-processing techniques. Furthermore, single instances may also be distributed across multiple controllers and/or storage devices; e.g., databases. All program component instances and controllers working in concert may do so through standard data processing communication techniques.
The configuration of the RDC-Detection controller will depend on the context of system deployment. Factors such as, but not limited to, the budget, capacity, location, and/or use of the underlying hardware resources may affect deployment requirements and configuration. Regardless of if the configuration results in more consolidated and/or integrated program components, results in a more distributed series of program components, and/or results in some combination between a consolidated and distributed configuration, data may be communicated, obtained, and/or provided. Instances of components consolidated into a common code base from the program component collection may communicate, obtain, and/or provide data. This may be accomplished through intra-application data processing communication techniques such as, but not limited to: data referencing (e.g., pointers), internal messaging, object instance variable communication, shared memory space, variable passing, and/or the like.
If component collection components are discrete, separate, and/or external to one another, then communicating, obtaining, and/or providing data with and/or to other component components may be accomplished through inter-application data processing communication techniques such as, but not limited to: Application Program Interfaces (API) information passage; (distributed) Component Object Model ((D)COM), (Distributed) Object Linking and Embedding ((D)OLE), and/or the like), Common Object Request Broker Architecture (CORBA), Jini local and remote application program interfaces, JavaScript Object Notation (JSON), Remote Method Invocation (RMI), SOAP, process pipes, shared files, and/or the like. Messages sent between discrete component components for inter-application communication or within memory spaces of a singular component for intra-application communication may be facilitated through the creation and parsing of a grammar. A grammar may be developed by using development tools such as lex, yacc, XML, and/or the like, which allow for grammar generation and parsing capabilities, which in turn may form the basis of communication messages within and between components.
For example, a grammar may be arranged to recognize the tokens of an HTTP post command, e.g.:
    w3c-post http:// . . . Value1   
where Value1 is discerned as being a parameter because âhttp://â is part of the grammar syntax, and what follows is considered part of the post value. Similarly, with such a grammar, a variable âValue1â may be inserted into an âhttp://â post command and then sent. The grammar syntax itself may be presented as structured data that is interpreted and/or otherwise used to generate the parsing mechanism (e.g., a syntax description text file as processed by lex, yacc, etc.). Also, once the parsing mechanism is generated and/or instantiated, it itself may process and/or parse structured data such as, but not limited to: character (e.g., tab) delineated text, HTML, structured text streams, XML, and/or the like structured data. In another embodiment, inter-application data processing protocols themselves may have integrated and/or readily available parsers (e.g., JSON, SOAP, and/or like parsers) that may be employed to parse (e.g., communications) data. Further, the parsing grammar may be used beyond message parsing, but may also be used to parse: databases, data collections, data stores, structured data, and/or the like. Again, the desired configuration will depend upon the context, environment, and requirements of system deployment.
For example, in some implementations, the RDC-Detection controller may be executing a PHP script implementing a Secure Sockets Layer (âSSLâ) socket server via the information server, which listens to incoming communications on a server port to which a client may send data, e.g., data encoded in JSON format. Upon identifying an incoming communication, the PHP script may read the incoming message from the client device, parse the received JSON-encoded text data to extract information from the JSON-encoded text data into PHP script variables, and store the data (e.g., client identifying information, etc.) and/or extracted information in a relational database accessible using the Structured Query Language (âSQLâ). An exemplary listing, written substantially in the form of PHP/SQL commands, to accept JSON-encoded input data from a client device via a SSL connection, parse the data to extract variables, and store the data to a database, is provided below:
    <?PHP header(âContent-Type: text/plainâ); // set ip address and port to listen to for incoming data $address=â192.168.0.100â; $port=255; // create a server-side SSL socket, listen for/accept incoming communication $sock=socket_create(AF_INET, SOCK_STREAM, 0); socket_bind($sock, $address, $port) or die(âCould not bind to addressâ); socket_listen($sock); $client=socket_accept($sock); // read input data from client device in 1024 byte blocks until end of message do {
         $input=â â; $input=socket_read($client, 1024); $data.=$input; 
 }while($input !=â â); // parse data to extract variables $obj=json_decode($data, true); // store input data in a database mysql_connect(â201.408.185.132â,$DBserver,$password); // access database server mysql_select(âCLIENT_DB.SQLâ); // select database to append mysql_query(âINSERT INTO UserTable (transmission) VALUES ($data)â); // add data to UserTable table in a CLIENT database mysql_close(âCLIENT_DB.SQLâ); // close connection to database ?>

Also, the following resources may be used to provide example embodiments regarding SOAP parser implementation:
 http://www.xay.com/perl/site/lib/SOAP/Parser.html http://publib.boulder.ibm.com/infocenter/tivihelp/v2rl/index.jsp?topic=/com.ibm.IBMDI.doc/referenceguide295.htm

and other parser implementations:
 http://publib.boulder.ibm.com/infocenter/tivihelp/v2rl/index.jsp?topic=/com.ibm.IBMDI.doc/referenceguide259.htm

all of which are hereby expressly incorporated by reference.
   
Additional embodiments of the RDC-Detection may comprise the following:
1 A processor-implemented financial instrument image enhancement method for remote deposit, comprising:

 


receiving a request to remotely deposit a financial instrument from a depositor device;
establishing a secure communications channel to the depositor device;
providing a remote deposit component to the depositor device via the secure communications channel;
receiving an image of a financial instrument from a depositor device via the secure communications channel;
detecting four corners of the image of the financial instrument;
dewarping the image of the financial instrument based on the detected corners;
extracting deposit information from the dewarped image of the negotiable instrument; and



deposit funds of the negotiable instrument based on the extracted deposit information.
2 The method of claim 1, further comprising:

 


determining whether the obtained image satisfies usability and quality requirements,
wherein the usability and quality requirements comprise a resolution requirement and an image format requirement.

3 The method of claim 1, wherein providing a remote deposit component to the depositor device comprises:

providing an image capture component to a depositor's device, wherein the depositor's device is disposed in communication with an image capture device, wherein the image capture component is configured to:
         control the image capture device, establish a secure communications channel between the image capture device and a receiving institution using depositor identifying information, allow the depositor to capture an image of a financial instrument, and send the image of the financial instrument across a secure communications channel.

4. The method of claim 3, further comprising:
 

determining if the image capture device is controllable by the remote deposit component;
if the image capture device is not controllable by the remote deposit component, instructing the depositor via a user interface to:
obtain and save at least one image of the financial instrument from the image capture device via a user interface, and
send the image to the financial institution; and
if the image capture device is controllable by the remote deposit component, controlling the image capture device to capture an image of the financial instrument.

5 The method of claim 3, wherein the image capture device may be any of a scanner, a digital camera, a video camera, a facsimile machine, and a mobile device with built-in camera.

6 The method of claim 1, further comprising:

determining whether the obtained image satisfies usability and quality requirements,
         wherein the usability and quality requirements comprise a resolution requirement and an image format requirement.

7 The method of claim 6, further comprising:
 

compressing the received image file if a size of the image file exceeds an image size limit.

8 The method of claim 7, wherein the image size limit is two megabytes.

9 The method of claim 1, further comprising:

converting via a processor the image of the financial instrument to a grayscale image if the
obtained image of the financial instrument is a color image.

10 The method of claim 1, wherein detecting four corners of the grayscale image of the financial instrument comprises:

generating an enhanced black-white image of the financial instrument;
determining likelihood of corner reflection of each corner of the enhanced black-white image of the financial instrument;
determining at least one corner; and
determining another corner with reflection by symmetric projection based on the determined corner.

11 The method of claim 10, wherein generating an enhanced black-white image of the financial instrument comprises:

determining a number of sub-images of the image of the financial instrument;
generating a histogram for each determined sub-image;
determining a grayscale threshold value for the generated histogram for each sub-image;
converting each determined sub-image into a black-white only image based on the determined grayscale threshold value associated with each sub-image; and
applying a convolution filter matrix to each black-white sub-image.

12 The method of claim 11, wherein the determined grayscale threshold for each sub-image is a minimum fuzziness threshold.

13 The method of claim 11, wherein the determined grayscale threshold for a sub-image is based at least in part on statistical analysis of the histogram for the sub-image.

14 The method of claim 11, wherein the convolution filter matrix is an edge-enhancing convolution filter matrix.

15 The method of claim 10, wherein determining likelihood of corner reflection of each corner of the enhanced black-white image of the financial instrument comprises:

dividing the enhanced black-white image into four quadrants;
calculating a reflection score for each corner associated with each quadrant; and
determining whether a corner associated with a quadrant has a tolerable reflection level by comparing the reflection score associated with the corner with a predetermined reflection threshold.

16 The method of claim 15, wherein calculating a reflection score for each corner associated with each quadrant comprises:

generating a histogram for each quadrant;
determining grayscale bin values N1 and N2 based on a predetermined bin count limit;
determining a minimum bin count vale M and an average bin count value AVG within a grayscale bin value range N1+1 to N2â1; and
calculating the reflection score based on reflection score=(AVGâM)/(AVG+M).

17 The method of claim 10, wherein determining the at least one corner comprises performing a detection algorithm, wherein the detection algorithm may be any of Moravec corner detection algorithm, multi-scale Harris operator, Shi and Tomasi corner detection algorithm, level curve curvature approach, LoG, DoG, and DoH feature detection, Wang and Brady corner detection algorithm, SUSAN corner detector, Trajkovic and Hedley corner detector, FAST feature detector, automatic synthesis of point detectors with Genetic Programming, and affine-adapted interest point operators.

18 The method of claim 10, wherein determining a corner with reflection by symmetric projection based on the determined corner comprises:

determining whether the determined corner is sufficient to project all four corners; and
if not, determining a corner with the lowest reflection by performing a corner detection procedure.

19 The method of claim 1, wherein dewarping the grayscale image of the financial instrument based on the detected corners comprises:

determining whether an edge of the image of the financial instrument is skewed; and
performing dewarping techniques to the edge if the edge is skewed.

20 The method of claim 19, wherein the dewarping techniques includes spatial transformation.

21 The method of claim 1, wherein extracting deposit information from the dewarped image of the negotiable instrument includes:

performing an optical character recognition procedure on the dewarped image of the financial instrument.

22 The method of claim 1, further comprising:

analyzing metadata associated with the received image of the financial instrument.

23 The method of claim 22, wherein the metadata comprises: GPS information of the depositor device, a timestamp of the image capturing and characteristics of the depositor device.

24 The method of claim 1, further comprising:

receiving video streaming from the depositor device across the secure communications channel.

25 The method of claim 24, further comprising:

generating frame grab images of the financial instrument from the video streaming.

26 A financial instrument image enhancement system for remote deposit, comprising:

means for receiving a request to remotely deposit a financial instrument from a depositor device;
means for establishing a secure communications channel to the depositor device;
means for providing a remote deposit component to the depositor device via the secure communications channel;
means for receiving an image of a financial instrument from a depositor device via the secure communications channel;
means for detecting four corners of the image of the financial instrument;
means for dewarping the image of the financial instrument based on the detected corners;
means for extracting deposit information from the dewarped image of the negotiable instrument; and
means for deposit funds of the negotiable instrument based on the extracted deposit information.

27 A financial instrument image enhancement apparatus for remote deposit, comprising:

a memory;
a processor disposed in communication with said memory, and configured to issue a plurality of processing instructions stored in the memory, wherein the processor issues instructions to:
         receive a request to remotely deposit a financial instrument from a depositor device; establish a secure communications channel to the depositor device; provide a remote deposit component to the depositor device via the secure communications channel; receive an image of a financial instrument from a depositor device via the secure communications channel; detect four corners of the image of the financial instrument; dewarp the image of the financial instrument based on the detected corners; extract deposit information from the dewarped image of the negotiable instrument; and deposit funds of the negotiable instrument based on the extracted deposit information.

28 A financial instrument image enhancement processor-readable medium for remote deposit, storing a plurality of processing instructions, comprising issuable instructions by a processor to:
 

receive a request to remotely deposit a financial instrument from a depositor device;
establish a secure communications channel to the depositor device;
provide a remote deposit component to the depositor device via the secure communications channel;
receive an image of a financial instrument from a depositor device via the secure communications channel;
detect four corners of the image of the financial instrument;
dewarp the image of the financial instrument based on the detected corners;
extract deposit information from the dewarped image of the negotiable instrument; and
deposit funds of the negotiable instrument based on the extracted deposit information.

1. A processor-implemented financial instrument deposit method for remote deposit, comprising:

receiving a request to remotely deposit a financial instrument from a depositor device communicatively coupled to an image capture component;
verifying the depositor device is qualified for remote deposit service;
receiving a multimedia message comprising an image of the financial instrument from the depositor device;
processing the image of the financial instrument to extract deposit information; and
depositing funds of the financial instrument based on the extracted deposit information.

2. The method of claim 1, wherein the request to remotely deposit the financial instrument is sent together with the multimedia message.

3. The method of claim 1, wherein the request to remotely deposit the financial instrument is sent via a text message.

4. The method of claim 1, wherein the remote deposit service is associated with a multimedia messaging number.

5. The method of claim 1, wherein the depositor device is a networking device.

6. The method of claim 5, wherein the verification of the depositor device comprises verifying whether the associated number of the cellular phone is registered for the remote deposit service.

7. The method of claim 1, further comprising sending a text message including an identification pin number to the depositor device.

8. The method of claim 7, wherein the verification of the depositor device comprises verifying whether the received multimedia message comprises the identification pin number.

9. The method of claim 1, wherein the multimedia message comprises an image of the front side of the financial instrument and an image of the back side of the financial instrument.

10. The method of claim 1, wherein the multimedia message comprises user entered deposit information.

11. The method of claim 1, further comprising:

determining whether the obtained image satisfies usability and quality requirements,
         wherein the usability and quality requirements comprise a resolution requirement and an image format requirement.

12. The method of claim 1, wherein the image of the financial instrument is captured by the depositor device.

13. The method of claim 12, wherein the captured image of the financial instrument is converted to a gray-scale format by the depositor device.

14. The method of claim 1, further comprising sending a deposit status message to the depositor device.

15. The method of claim 1, further comprising deskewing, dewarping and cropping the image of the financial instrument.

16. The method of claim 15, further comprising performing OCR/ICR on the cropped image of the financial instrument to extract deposit information.

17. The method of claim 16, further comprising generating an image cash latter based on the cropped image of the financial instrument and the extracted deposit information.

18. A financial instrument deposit processor-readable medium storing a plurality of processing instructions, comprising issuable instructions by a processor to:
 

receive a request to remotely deposit a financial instrument from a depositor device;
verify the depositor device is qualified for remote deposit service;
receive a multimedia message comprising an image of the financial instrument from the depositor device;
process the image of the financial instrument to extract deposit information; and
deposit funds of the financial instrument based on the extracted deposit information.

19. A financial instrument deposit apparatus, comprising:

a memory;
a processor disposed in communication with said memory, and configured to issue a plurality of processing instructions stored in the memory, wherein the processor issues instructions to:
receive a request to remotely deposit a financial instrument from a depositor device;
verify the depositor device is qualified for remote deposit service;
receive a multimedia message comprising an image of the financial instrument from the depositor device;
process the image of the financial instrument to extract deposit information; and
deposit funds of the financial instrument based on the extracted deposit information.

20. A financial instrument deposit system, comprising:

means to receive a request to remotely deposit a financial instrument from a depositor device;
means to verify the depositor device is qualified for remote deposit service;
means to receive a multimedia message comprising an image of the financial instrument from the depositor device;
means to process the image of the financial instrument to extract deposit information; and
means to deposit funds of the financial instrument based on the extracted deposit information.

1. A processor-implemented financial instrument deposit method, comprising:

receiving a request to remotely deposit a financial instrument from a depositor device communicatively coupled to an image capture component;
delivering a remote deposit processing component for instantiation on the depositor device;
obtaining depositor identification information from the remote deposit processing component;
instructing, via the remote deposit processing component, a depositor to hold the financial instrument in front of the image capture component;
receiving a snap capture image of the financial instrument from the remote deposit processing component;
processing the snap capture image of the financial instrument to extract deposit information; and
depositing funds of the financial instrument based on the extracted deposit information.

2. The method of claim 1, wherein the depositor device includes one of a personal computer and a mobile phone.

3. The method of claim 1, wherein the image capture device is one of a camera, a web camera and a built-in camera associated with a mobile phone.

4. The method of claim 1, wherein the remote deposit processing component provides an area indicating the user to place the financial instrument via a user interface.

5. The method of claim 1, wherein the remote deposit application captures a plurality of consecutive captures of the financial instrument.

6. The method of claim 5, wherein the remote deposit application captures a snap image of the financial instrument periodically for a pre-determined time interval.

7. The method of claim 1, further comprising:

receiving streaming video of the financial instrument from the user depositor device; and
generating frames of images of the financial instrument from the received streaming video.

8. The method of claim 1, further comprising:

determining whether the received snap capture image of the financial instrument is usable.

9. The method of claim 8, wherein the determination comprises inspecting whether the resolution and file format of the snap capture image satisfy usability requirements.

10. The method of claim 8, further comprising:

performing an OCR on the snap capture image to determine whether texts on the image are legible.

11. The method of claim 1, further comprising:

obtaining a plurality of snap capture images of the financial instruments; and
selecting an optimal snap capture image from the plurality of snap capture images.

12. The method of claim 11, wherein the selection is based at least in part on the skewness, distortion, corner reflection score, image quality, blurriness, and resolution of the snap capture image.

13. The method of claim 1, further comprising requesting a depositor to destroy the financial instrument upon successful deposit.

14. The method of claim 13, further comprising instructing the depositor to tear the financial instrument to the image capture device.

15. The method of claim 14, further comprising receiving snap capture images of tearing the financial instrument from the remote deposit processing component.

16. The method of claim 1, wherein the depositor identification information comprises facial recognition information.

17. The method of claim 16, further comprising:

instructing a depositor to pose to the image capture device; and
receiving snap pictures of the depositor from the remote deposit processing component.

18. A financial instrument deposit processor-readable medium storing a plurality of processing instructions, comprising issuable instructions by a processor to:

receive a request to remotely deposit a financial instrument from a depositor device communicatively coupled to an image capture component;
deliver a remote deposit processing component for instantiation on the depositor device;
obtain depositor identification information from the remote deposit processing component;
instruct, via the remote deposit processing component, a depositor to hold the financial instrument in front of the image capture component;
receive a snap capture image of the financial instrument from the remote deposit processing component;
process the snap capture image of the financial instrument to extract deposit information; and
deposit funds of the financial instrument based on the extracted deposit information.

19. A financial instrument deposit apparatus, comprising:

a memory;
a processor disposed in communication with said memory, and configured to issue a plurality of processing instructions stored in the memory, wherein the processor issues instructions to:
receive a request to remotely deposit a financial instrument from a depositor device communicatively coupled to an image capture component;
deliver a remote deposit processing component for instantiation on the depositor device;
obtain depositor identification information from the remote deposit processing component;
instruct, via the remote deposit processing component, a depositor to hold the financial instrument in front of the image capture component;
receive a snap capture image of the financial instrument from the remote deposit processing component;
process the snap capture image of the financial instrument to extract deposit information; and
deposit funds of the financial instrument based on the extracted deposit information.

20. A financial instrument deposit system, comprising:

means to receive a request to remotely deposit a financial instrument from a depositor device communicatively coupled to an image capture component;
means to deliver a remote deposit processing component for instantiation on the depositor device;
means to obtain depositor identification information from the remote deposit processing component;
means to instruct, via the remote deposit processing component, a depositor to hold the financial instrument in front of the image capture component;
means to receive a snap capture image of the financial instrument from the remote deposit processing component;
means to process the snap capture image of the financial instrument to extract deposit information; and
means to deposit funds of the financial instrument based on the extracted deposit information.

1. A processor-implemented financial instrument deposit method, comprising:

receiving a request to remotely deposit a financial instrument from a depositor device communicatively coupled to an image capture component;
delivering a remote deposit processing component for instantiation on the depositor device;
receiving an image visualizing the financial instrument held by a financial instrument holder,
from the remote deposit processing component;
processing the snap capture image of the financial instrument to extract deposit information; and
depositing funds of the financial instrument based on the extracted deposit information.

2. The method of claim 1, wherein the depositor device communicatively coupled to an image capture component is a smart phone with a built-in camera

3. The method of claim 1, wherein the financial instrument holder holds the financial instrument upright for image capturing.

4. The method of claim 1, wherein the financial instrument holder comprises a front side and two foldable flaps on left and right sides of the front side,

wherein the foldable flaps are configured to hold the financial instrument holder stand upright.

5. The method of claim 4, wherein the front side of the financial instrument holder comprises a dark background color in contrast with the financial instrument.

6. The method of claim 1, wherein the received image comprises a visualization of information printed on the front side of the financial instrument holder.

7. The method of claim 6, wherein the information printed on the front side comprises a barcode.

8. The method of claim 7, wherein the barcode comprises embedded depositor account information.

9. The method of claim 7, wherein the barcode comprises embedded payee's bank information.

10. The method of claim 7, further comprising detecting a rectangular portion of the check on the received image.

11. The method of claim 10, further comprising performing OCR and ICR on the detected rectangular portion to obtain deposit information.

12. The method of claim 11, further comprising obtaining information embedded in the barcode by employing a barcode reader.

13. The method of claim 12, further comprising comparing the obtained information embedded in the barcode with the obtained deposit information from OCR to ensure consistency.

14. A financial instrument deposit system, comprising:

means for receiving a request to remotely deposit a financial instrument from a depositor device communicatively coupled to an image capture component;
means for delivering a remote deposit processing component for instantiation on the depositor device;
means for receiving an image visualizing the financial instrument held by a financial instrument holder, from the remote deposit processing component;
means for processing the snap capture image of the financial instrument to extract deposit information; and
means for depositing funds of the financial instrument based on the extracted deposit information.

15. A financial instrument image capture apparatus, comprising:

a front surface;
a small flap extension at a bottom of the front surface, wherein the small flap extension is configured to form a notch between the front surface and the small flap extension, wherein a financial instrument is held in the notch;
a first foldable flap connected to the left of the front surface; and
a second foldable flap connected to the right of the front surface, wherein the first and the second foldable flaps are configured to hold the front side upright.

16. The apparatus of claim 15, wherein the front surface comprises printed information.

17. The apparatus of claim 16, wherein the printed information comprises instructions guiding a depositor to download a remote deposit processing component and transmit an image of the financial instrument.

17. The apparatus of claim 16, wherein the printed information comprises a rectangular area guiding a depositor to place the financial instrument.

18. The apparatus of claim 15, wherein the front surface has a background color in contrast to the financial instrument.

19. The apparatus of claim 15, wherein the first and the second foldable flaps are configured to be foldable behind the front surface.

20. The apparatus of claim 15, wherein the front surface comprises a barcode with encoded deposit information.

1 A processor-implemented selective deposit method, comprising:

obtaining electronic data pertaining to depositing a financial instrument from a depositor device;
determining deposit information based on the obtained electronic data;
retrieving a depositor profile based on the determined deposit information;
obtaining deposit constraint information associated with the depositor profile;
determining whether the deposit information is compliant with the deposit constraint information associated with the depositor;
if not compliant, providing selective deposit options to the depositor device via a user interface, receiving a selection of deposit option from the depositor device via the user interface, and performing the selected deposit option; and
if compliant, depositing funds of the financial instrument.

2 The method of claim 1, further comprising:

providing a remote deposit component to the depositor device.

3 The method of claim 1, further comprising:

establishing a secure communications channel between the depositor device and a receiving institution via the remote deposit component, wherein establishment includes:
obtaining depositor identifying information, and
verifying the depositor identifying information.

4 The method of claim 3, wherein the depositor identifying information comprises depositor submitted login information.

5 The method of claim 3, wherein the depositor identifying information comprises hardware identification of the depositor device.

6 The method of claim 1, wherein the obtained electronic data comprises a digital image of the financial instrument.

7 The method of claim 1, wherein the obtained electronic data comprises a depositor submitted deposit amount of the financial instrument.

8 The method of claim 1, wherein determining deposit information based on the obtained electronic data comprises:

performing optical character recognition procedure on a digital image of the financial instrument to extract deposit information.

9 The method of claim 1, wherein the determined deposit information comprises a payee's name, a payee's bank name, a payee's account number, a payee's bank routing number, a deposit amount.

10 The method of claim 1, further comprising verifying the determined deposit information with the retrieved depositor profile.

11 The method of claim 1, wherein the retrieved depositor profile comprises a depositor name, at least one depositor account, deposit history, and deposit constraint information.

12 The method of claim 1, further comprising:

providing a list of available deposit accounts from the depositor profile to the depositor device via a user interface; and
receiving a selection from the list of available deposit accounts from the depositor device.

13 The method of claim 1, wherein the deposit constraint information is a maximum deposit value for immediate accessible funds.

14 The method of claim 13, wherein the maximum deposit value for immediate accessible funds may be any of a maximum deposit value for a single deposit, and a maximum deposit value for deposits made within a predetermined period of time.

15 The method of claim 1, wherein the deposit constraint information is a maximum number of deposits made within a predetermined period of time.

16 The method of claim 1, wherein the deposit constraint information is associated with a depositor account.

17 The method of claim 1, wherein the selective deposit options comprises:

depositing a maximum allowable amount for immediate access;
requesting to reduce the deposit constraint; and
canceling the deposit.

18 The method of claim 17, wherein the option of requesting to reduce the deposit constraint comprises directing a depositor to communicate with a financial institution.

19 The method of claim 17, wherein the option of depositing a maximum allowable amount for immediate access comprises instructing a depositor to submit a physical financial instrument to a financial institution to complete the deposit.

20 The method of claim 17, further comprising:

if a selection of the option of depositing a maximum allowable amount for immediate access is received,
         depositing the maximum allowable amount for immediate access, and determining and storing a remaining amount associated with deposit information of the financial instrument.

21 The method of claim 20, further comprising:
 

verifying the remaining amount associated with deposit information of the financial instrument with a financial institution.

22 A selective deposit system, comprising:

means for obtaining electronic data pertaining to depositing a financial instrument from a depositor device;
means for determining deposit information based on the obtained electronic data;
means for retrieving a depositor profile based on the determined deposit information;
means for obtaining deposit constraint information associated with the depositor profile;
means for determining whether the deposit information is compliant with the deposit constraint information associated with the depositor;
means for if not compliant, providing selective deposit options to the depositor device via a user interface, receiving a selection of deposit option from the depositor device via the user interface, and performing the selected deposit option; and
means for if compliant, depositing funds of the financial instrument.

23 A selective deposit apparatus, comprising:

a memory;
a processor disposed in communication with said memory, and configured to issue a plurality of processing instructions stored in the memory, wherein the processor issues instructions to:
obtain electronic data pertaining to depositing a financial instrument from a depositor device;
determine deposit information based on the obtained electronic data;
receive a depositor profile based on the determined deposit information;
obtain deposit constraint information associated with the depositor profile; determine whether the deposit information is compliant with the deposit constraint information associated with the depositor;
if not compliant, provide selective deposit options to the depositor device via a user interface, receiving a selection of deposit option from the depositor device via the user interface, and performing the selected deposit option; and
deposit funds of the financial instrument.

24 A selective deposit processor-readable medium storing a plurality of processing instructions, comprising issuable instructions by a processor to:

obtain electronic data pertaining to depositing a financial instrument from a depositor device;
determine deposit information based on the obtained electronic data;
receive a depositor profile based on the determined deposit information;
obtain deposit constraint information associated with the depositor profile;
determine whether the deposit information is compliant with the deposit constraint information associated with the depositor;
if not compliant, provide selective deposit options to the depositor device via a user interface, receiving a selection of deposit option from the depositor device via the user interface, and performing the selected deposit option; and
deposit funds of the financial instrument.

1 A processor-implemented risk-diminishing remote deposit method, comprising:

receiving electronic data pertaining to depositing a financial instrument from a depositor device;
provisionally depositing funds of the financial instrument into a depositor account;
generating financial instrument clearing data based on the electronic data;
providing the generated financial instrument clearing data to an external agency;
receiving an indication of a type of the financial instrument from the external agency;
confirming the provisionally deposited funds with expedited availability if the type of the financial instrument satisfies a predetermined regulatory requirement; and
applying deposit constraints to the provisionally deposited funds if the type of the financial instrument does not satisfy the predetermined regulatory requirement.

2 The method of claim 1, further comprising:

establishing a secure communications channel between the depositor device and a receiving institution via the remote deposit component, wherein establishment includes:
         obtaining depositor identifying information, and verifying the depositor identifying information.

3 The method of claim 2, wherein the depositor identifying information comprises depositor submitted login information.

4 The method of claim 2, wherein the depositor identifying information comprises hardware identification of the depositor device.

5 The method of claim 1, wherein the obtained electronic data comprises a digital image of the financial instrument.

6 The method of claim 1, wherein the obtained electronic data comprises a depositor submitted deposit amount of the financial instrument.

7 The method of claim 1, wherein the generated financial instrument clearing data comprises X9.37 cash letter files.

8 The method of claim 1, wherein the generated financial instrument clearing data comprises metadata associated with the obtained electronic data of the financial instrument,

9 The method of claim 8, wherein the metadata comprises GPS information of the depositor device, a deposit timestamp, deposit data and characteristics of the depositor device.

10 The method of claim 1, further comprising:
 

determining whether the obtained electronic data of the financial instrument is a representment.

11 The method of claim 10, wherein determining whether the obtained electronic data of the financial instrument is a representment comprises comparing the obtained electronic data with a pre-defined set of previous deposits.

12 The method of claim 11, wherein the pre-defined set of previous deposits includes digital images and deposit information of deposited financial instruments within a predetermined period of time.

13 The method of claim 1, further comprising:

subscribing to presentment services at an external agency, wherein the presentment services provides check presentment notification whenever a check is presented.

14 The method of claim 13, further comprising:

submitting bulk transaction data in batch time to the external agency; and
receiving a representment report related to the bulk transaction from the external agency.

15 The method of claim 1, wherein the expedited availability is next business day availability.

16 The method of claim 1, wherein the predetermined regulatory requirement is Regulation-CC safety.

17 The method of claim 1, wherein the deposit constraints comprises a maximum allowable cap on the deposit amount.

18 The method of claim 1, wherein applying deposit constraints to the provisionally deposited funds further comprises providing selective deposit options to the depositor device.

19 The method of claim 18, wherein the selective deposit options comprises:

depositing a maximum allowable amount for next business day access;
requesting to reduce the deposit constraint; and
canceling the deposit.

20 The method of claim 1, further comprising:

instructing a depositor to submit a physical financial instrument for verification if the type of the financial instrument does not satisfy the predetermined regulatory requirement.



21 A risk-diminishing remote deposit system, comprising:
    means for receiving electronic data pertaining to depositing a financial instrument from a depositor device; means for provisionally depositing funds of the financial instrument into a depositor account; means for generating financial instrument clearing data based on the electronic data; means for providing the generated financial instrument clearing data to an external agency; means for receiving an indication of a type of the financial instrument from the external agency; means for confirming the provisionally deposited funds with expedited availability if the type of the financial instrument satisfies a predetermined regulatory requirement; and means for applying deposit constraints to the provisionally deposited funds if the type of the financial instrument does not satisfy the predetermined regulatory requirement.

22 A risk-diminishing remote deposit apparatus, comprising:
 a memory; a processor disposed in communication with said memory, and configured to issue a plurality of processing instructions stored in the memory, wherein the processor issues instructions to: receive electronic data pertaining to depositing a financial instrument from a depositor device; provisionally deposit funds of the financial instrument into a depositor account; generate financial instrument clearing data based on the electronic data; provide the generated financial instrument clearing data to an external agency; receive an indication of a type of the financial instrument from the external agency; confirm the provisionally deposited funds with expedited availability if the type of the financial instrument satisfies a predetermined regulatory requirement; and apply deposit constraints to the provisionally deposited funds if the type of the financial instrument does not satisfy the predetermined regulatory requirement.

23 A risk-diminishing remote deposit processor-readable medium storing a plurality of processing instructions, comprising issuable instructions by a processor to:
 receive electronic data pertaining to depositing a financial instrument from a depositor device; provisionally deposit funds of the financial instrument into a depositor account; generate financial instrument clearing data based on the electronic data; provide the generated financial instrument clearing data to an external agency; receive an indication of a type of the financial instrument from the external agency; confirm the provisionally deposited funds with expedited availability if the type of the financial instrument satisfies a predetermined regulatory requirement; and apply deposit constraints to the provisionally deposited funds if the type of the financial instrument does not satisfy the predetermined regulatory requirement.   
In order to address various issues and advance the art, the entirety of this application for APPARATUSES, METHODS AND SYSTEMS FOR REMOTE DEPOSIT CAPTURE WITH ENHANCED IMAGE DETECTION (including the Cover Page, Title, Headings, Field, Background, Summary, Brief Description of the Drawings, Detailed Description, Claims, Abstract, FIGURES, Appendices, and otherwise) shows, by way of illustration, various embodiments in which the claimed innovations may be practiced. The advantages and features of the application are of a representative sample of embodiments only, and are not exhaustive and/or exclusive. They are presented only to assist in understanding and teach the claimed principles. It should be understood that they are not representative of all claimed innovations. As such, certain aspects of the disclosure have not been discussed herein. That alternate embodiments may not have been presented for a specific portion of the innovations or that further undescribed alternate embodiments may be available for a portion is not to be considered a disclaimer of those alternate embodiments. It will be appreciated that many of those undescribed embodiments incorporate the same principles of the innovations and others are equivalent. Thus, it is to be understood that other embodiments may be utilized and functional, logical, operational, organizational, structural and/or topological modifications may be made without departing from the scope and/or spirit of the disclosure. As such, all examples and/or embodiments are deemed to be non-limiting throughout this disclosure. Also, no inference should be drawn regarding those embodiments discussed herein relative to those not discussed herein other than it is as such for purposes of reducing space and repetition. For instance, it is to be understood that the logical and/or topological structure of any combination of any program components (a component collection), other components and/or any present feature sets as described in the figures and/or throughout are not limited to a fixed operating order and/or arrangement, but rather, any disclosed order is exemplary and all equivalents, regardless of order, are contemplated by the disclosure. Furthermore, it is to be understood that such features are not limited to serial execution, but rather, any number of threads, processes, services, servers, and/or the like that may execute asynchronously, concurrently, in parallel, simultaneously, synchronously, and/or the like are contemplated by the disclosure. As such, some of these features may be mutually contradictory, in that they cannot be simultaneously present in a single embodiment. Similarly, some features are applicable to one aspect of the innovations, and inapplicable to others. In addition, the disclosure includes other innovations not presently claimed. Applicant reserves all rights in those presently unclaimed innovations including the right to claim such innovations, file additional applications, continuations, continuations in part, divisions, and/or the like thereof. As such, it should be understood that advantages, embodiments, examples, functional, features, logical, operational, organizational, structural, topological, and/or other aspects of the disclosure are not to be considered limitations on the disclosure as defined by the claims or limitations on equivalents to the claims. It is to be understood that, depending on the particular needs and/or characteristics of a RDC-Detection individual and/or enterprise user, database configuration and/or relational model, data type, data transmission and/or network framework, syntax structure, and/or the like, various embodiments of the RDC-Detection, may be implemented that enable a great deal of flexibility and customization. For example, aspects of the RDC-Detection may be adapted for electronic billing and payment. While various embodiments and discussions of the RDC-Detection have been directed to remote deposit of financial instrument, however, it is to be understood that the embodiments described herein may be readily configured and/or customized for a wide variety of other applications and/or implementations.